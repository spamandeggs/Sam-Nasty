1 rem (c)Copyright 2019 Jerome Mahieux - release 2019/04/02
2 COMPILED=1
5 on error goto 50
8 if COMPILED=1 then break off
9 COMPDELAY=1
15 clear key : hide : mode 0 : curs off : reset zone : colour 14,$0 : key off
16 reserve as data 2,5585
17 bload "SAM0.BLK",2 : unpack 2,back : erase 2
20 get palette (back) : screen copy back to logic
21 dim COLINTRO(15) : for I=0 to 15 : COLINTRO(I)=colour(I) : next I
24 click off : PTIT=11
25 gosub 30 : goto 110
30 def scroll 1,0,0 to 320,184,8,0
31 def scroll 8,0,0 to 320,184,-8,0
33 def scroll 3,0,8*PTIT to 320,8*PTIT*2,-8,0
37 def scroll 4,0,160 to 320,168,-4,0
38 def scroll 10,0,168 to 320,176,4,0
39 def scroll 9,0,168 to 320,176,8,0
45 return
50 gosub 20100 : print "erreur";errl : wait key : end
60 PTSEXTRALIFE=15000 : LVLMAXTIME=120
61 PTSTIME=150
62 PTSLIVES=1500
63 PTSLVL=1000
64 PTSGUARD=50
65 PTSCOIN=100
66 PTSWREATH=500
67 LIFES=6
68 HINTATLVL=3
69 return
70 PTSEXTRALIFE=20000 : LVLMAXTIME=90
71 PTSTIME=150
72 PTSLIVES=1500
73 PTSLVL=1000
74 PTSGUARD=50
75 PTSCOIN=100
76 PTSWREATH=500
77 LIFES=4
78 HINTATLVL=3
79 return
80 PTSEXTRALIFE=30000 : LVLMAXTIME=60
81 PTSTIME=150
82 PTSLIVES=1500
83 PTSLVL=1000
84 PTSGUARD=50
85 PTSCOIN=100
86 PTSWREATH=500
87 LIFES=3
88 HINTATLVL=3
89 return
110 dim BLK$(600),IC$(50),MPBL(1),LVL(1),COEUR$(1)
115 dim SC(1),NAM$(9),SCO$(9),TXT$(16)
116 dim GAMEMDE$(2) : GAMEMDE$(0)="EASY  " : GAMEMDE$(1)="NORMAL" : GAMEMDE$(2)="HARD  " : GMID=1
118 BGD=365 : MANETS=357 : FMANETS=361 : OPTN=110
160 dim JDEM(50),TDEM(50),VV(1) : SAM$="SAM"
165 JDEM(1)=4 : TDEM(1)=106 : JDEM(2)=1 : TDEM(2)=23 : JDEM(3)=9 : TDEM(3)=4 : JDEM(0)=1 : TDEM(0)=10
170 JDEM(4)=8 : TDEM(4)=10 : JDEM(5)=8 : COD$="TELEPORT-ME-NOW" : TDEM(5)=125 : JDEM(6)=1 : TDEM(6)=23
175 JDEM(7)=4 : TDEM(7)=91 : JDEM(8)=1 : TDEM(8)=23
180 JDEM(9)=8 : TDEM(9)=35 : JDEM(10)=0 : TDEM(10)=190 : JDEM(11)=8 : TDEM(11)=40 : JDEM(12)=16 : TDEM(12)=3
190 JDEM(13)=4 : TDEM(13)=100 : TDEM(14)=rnd(4) : JDEM(14)=58
200 TXT$(1)="UP : TO JUMP OR TO CLIMB UP" : TXT$(2)="DOWN : TO STOOP OR TO GO DOWN"
210 TXT$(9)="UP : TO JUMP AND TO CLIMB UP" : TXT$(10)="    TO CREEP OR TO GO DOWN    " : TXT$(5)="UP : TO JUMP AND TO CLIMB UP" : TXT$(6)="    TO CREEP OR TO GO DOWN    " : TXT$(16)="TO HIT A GUARD,TO USE A HANDLE OR A KEY" : TXT$(4)="LEFT : TO GO LEFT ( WHAT A SURPRISE...)" : TXT$(8)="RIGHT : TO GO RIGHT..."
220 dim SCXY(39,18) : dim LINEXCLU(18)
250 NBP=1 : NWLVL=1 : MUS=1 : FX=1 : NBPL=0 : LVL(0)=1 : LVL(1)=1 : MVG$=" ( 3,-2," : MVD$=" ( 3, 2," : MVN$=" (10, 0,"
253 dim SPR$(8,7)
260 SPR$(3,0)="(88,0)"
261 SPR$(3,1)="(88,4)(89,4)L"
270 SPR$(2,0)="(86,0)"
271 SPR$(2,1)="(86,4)(87,4)L"
276 SPR$(5,0)="(97,0)"
277 SPR$(5,1)="(97,4)(98,4)L"
281 SPR$(6,0)="(99,0)"
282 SPR$(6,1)="(99,4)(100,4)L"
291 SPR$(1,0)="(79,4)(80,4)L"
292 SPR$(1,1)="(75,4)(76,4)L"
293 SPR$(1,2)="(77,6)(78,6)L"
294 SPR$(1,3)="(81,6)(82,6)L"
295 SPR$(1,4)="(121,6)(122,6)L"
296 SPR$(1,5)="(123,6)(124,6)L"
297 SPR$(1,6)="(117,100 )(118,3)"
298 SPR$(1,7)="(119,100 )(120,3)"
321 SPR$(0,0)="(25,0)"
322 SPR$(0,1)="(22,0)"
323 SPR$(0,2)="(22,4)(23,4)(24,4)L"
324 SPR$(0,3)="(25,4)(26,4)(27,4)L"
325 SPR$(0,4)="(72,4)(73,4)(74,4)(73,4)L"
351 SPR$(4,0)="(70,0)"
359 dim HLP$(20)
370 goto 470
400 BANK=0 : FIRSTLVLSCR=4 : BANKSIZE=32768 : I=0 : RESERV=int(BANKSIZE*1.5)
405 while free>RESERV and FIRSTLVLSCR+I<10
411 reserve as screen FIRSTLVLSCR+I : inc I
415 wend : if I=1 then I=2
420 BANKCOUNT=I-1 : dim LVLBANK(BANKCOUNT)
452 dim MP(BANKCOUNT,1,40,22),MOUSKY(BANKCOUNT),SP(BANKCOUNT,8),XM(BANKCOUNT,8),YM(BANKCOUNT,8)
453 dim SBLK(BANKCOUNT,7,2),RTRP$(BANKCOUNT,8),XD(BANKCOUNT),YD(BANKCOUNT),NTS(BANKCOUNT),NTZ(BANKCOUNT),CZI(BANKCOUNT)
454 dim AN$(BANKCOUNT,8,10),MOV$(BANKCOUNT,8,10),SS(BANKCOUNT,8),FLP(BANKCOUNT,8),ST(BANKCOUNT,9),AL(BANKCOUNT,8),AL2(BANKCOUNT,8)
455 dim ZNE(BANKCOUNT,110),X1Z(BANKCOUNT,110),X2Z(BANKCOUNT,110),Y1Z(BANKCOUNT,110),Y2Z(BANKCOUNT,110)
456 dim DGEM$(BANKCOUNT,8,3),ACT$(BANKCOUNT,80),NZID(BANKCOUNT,10),NZIO(BANKCOUNT,10),NZIF(BANKCOUNT,10),CTIM(BANKCOUNT,10)
457 dim LIN$(BANKCOUNT),ZNE2(BANKCOUNT,80)
460 return
470 gosub 400 : cls back : reserve as data 2,16613
475 bload "SAM1.BLK",2 : fade 1 : wait 7 : cls logic : unpack 2,back
476 get palette (back) : wait 50 : dim COLLVL(15) : for I=0 to 15 : COLLVL(I)=colour(I) : colour I,0 : next I
477 erase 2
480 LOD$=screen$(back,32,104 to 230,142)
482 LVLPIC$=screen$(back,16,149 to 80,177)
483 LVLPIC2$=screen$(back,80,142 to 144,170)
485 ink 0 : bar 192,138 to 204,145 : PAUSE$=screen$(back,205,139 to 320,183)
495 COE$=screen$(back,96,80 to 112,88) : gosub 11900
500 screen copy back,0,0,320,8*PTIT to logic,0,0
560 screen copy logic,0,0,320,8*PTIT to logic,0,8*PTIT
570 scroll 3 : screen copy logic to back
580 ink 0 : for X=1 to 40 step 2 : bar X*8,0 to X*8+7,8*PTIT*2 : next X
590 DEP=0 : ARR=7 : XDEP=0 : XARR=28
600 for Y=DEP*8 to ARR*8 step 8 : for X=(XDEP*8)+1 to XARR*8 step 16
610 inc IND : BLK$(IND)=screen$(back,X,Y to X+15,Y+8)
620 inc IND : BLK$(IND)=screen$(back,X,Y+8*PTIT to X+15,Y+8+8*PTIT) : next X : next Y
630 if CISO=15 then 850
640 if CISO=0 then DEP=9 : ARR=10 : XDEP=0 : XARR=26 : CISO=1 : goto 600
650 if CISO=1 then BLK$(328)=BLK$(263) : BLK$(329)=BLK$(264) : BLK$(263)=BLK$(273) : BLK$(264)=BLK$(274)
660 if CISO=1 then IND=IND-4 : DEP=0 : ARR=1 : XDEP=29 : XARR=36 : CISO=2 : goto 600
670 if CISO=2 then IND=IND-3 : DEP=4 : ARR=4 : XDEP=31 : XARR=40 : CISO=3 : goto 600
680 if CISO=3 then DEP=5 : ARR=6 : XDEP=29 : XARR=40 : CISO=4 : goto 600
690 if CISO=4 then DEP=9 : ARR=9 : XDEP=31 : XARR=38 : CISO=11 : goto 600
700 if CISO=11 then IND=IND+2 : DEP=8 : ARR=8 : XDEP=0 : XARR=36 : CISO=12 : goto 600
710 if CISO=12 then DEP=7 : ARR=7 : XDEP=29 : XARR=40 : CISO=5 : goto 600
720 if CISO=5 then DEP=0 : ARR=0 : XDEP=36 : XARR=40 : CISO=6 : goto 600
730 if CISO=6 then DEP=1 : ARR=1 : XDEP=35 : XARR=40 : CISO=7 : goto 600
740 if CISO=7 then DEP=2 : ARR=3 : XDEP=29 : XARR=40 : CISO=8 : goto 600
750 if CISO=8 then DEP=4 : ARR=4 : XDEP=29 : XARR=30 : CISO=9 : goto 600
760 if CISO=9 then DEP=9 : ARR=9 : XDEP=29 : XARR=29 : CISO=10 : goto 600
770 if CISO=10 then DEP=9 : ARR=9 : XDEP=39 : XARR=39 : CISO=13 : goto 600
780 if CISO=13 then DEP=9 : ARR=9 : XDEP=34 : XARR=34 : CISO=17 : goto 600
790 BLK$(365)=BLK$(291)
800 for I=1 to 30 : inc IND : BLK$(IND)=BLK$(56) : next I
810 swap BLK$(323),BLK$(320) : swap BLK$(328),BLK$(325) : swap BLK$(329),BLK$(326) : swap BLK$(326),BLK$(327)
820 for I=365 to 368 : BLK$(I+100)=BLK$(I) : BLK$(I)=BLK$(56) : next I
830 for I=369 to 415 : BLK$(I+101)=BLK$(I) : BLK$(I)=BLK$(56) : next I
840 O=1 : IND=364 : DEP=10 : ARR=10 : XDEP=26 : XARR=40 : CISO=15 : goto 600
850 BLK$(469)=BLK$(319) : BLK$(379)=BLK$(416) : BLK$(380)=BLK$(417)
860 gosub 11940
1070 cls back : cls logic
1075 gosub 10720 : gosub 6470
1080 reserve as data 2,17117 : bload "SAM2.BLK",2 : LVLMX=9
1090 gosub 10600
1110 goto 1310
1120 cls : gosub 30
1121 auto back off
1122 for NV=0 to 1
1123 for Y=0 to 22 : for X=1 to 39 step 2
1126 if MP(NBPL,NV,X,Y)<>0 then screen$(logic,X*8,Y*8)=BLK$(MP(NBPL,NV,X,Y))
1130 next X : next Y
1133 scroll 1 : ink 0 : bar 0,0 to 7,183
1136 for Y=0 to 22 : for X=0 to 40 step 2
1140 if MP(NBPL,NV,X,Y)<>0 then screen$(logic,X*8,Y*8)=BLK$(MP(NBPL,NV,X,Y))
1143 next X : next Y
1146 LIN$(NV)=screen$(logic,0,0 to 16,184) : cls logic,0,0,0 to 16,184 : scroll 8
1150 next NV : scroll 1 : auto back on
1153 for I=0 to 1 : screen$(logic,0,0)=LIN$(I) : next I
1156 screen copy logic to back : return
1260 cls back : cls logic : while joy>=16 : wend
1310 if MUS=1 then music 4 else MUS2=1
1320 gosub 10700 : mode 0 : pen 15 : paper 3
1325 timer=0
1330 unpack 2,back : palette $0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0,$0
1335 screen copy back to logic : YSC=6 : O=NWLVL
1340 INITMENU=1 : gosub 1740 : gosub 1780 : gosub 1822 : gosub 1860 : gosub 1831 : INITMENU=0
1345 VV(0)=0 : VV(1)=0 : LVL(0)=NWLVL : LVL(1)=NWLVL : PLR=0 : SC(0)=0 : SC(1)=0 : NPBL=-1 : FX2=0 : WIN=-1 : COD2$=left$(COD$,1) : COD=1
1350 PYSC=10 : J=2 : if FX>1 then FX=1
1370 clear key : X$=""
1380 fade 3,$2,$0,$556,$445,$334,$700,$77,$666,$333,$353,$373,$773,$320,$737,$357,$777
1390 while X$="" : X$=inkey$
1400 gosub 10850 : if DEMO=1 then 2210
1410 if J<>1 and J<>2 and scancode<>72 and scancode<>80 then 1510
1420 timer=0
1430 if J=1 or scancode=72 then YSC=YSC-2 if YSC=6 then YSC=22
1440 if J=2 or scancode=80 then YSC=YSC+2 if YSC=24 then YSC=8
1445 for I=10 to 30
1450 pen 15 : A2$=chr$(scrn(I,PYSC)) : if A2$=" " then 1470
1460 locate I,PYSC : print A2$
1470 next I
1477 for I=10 to 30
1480 pen 5 : A2$=chr$(scrn(I,YSC)) : if A2$=" " then 1500
1490 locate I,YSC : print A2$
1500 next I : PYSC=YSC : wait 7
1510 if J>=16 or X$=" " then 1515 else 1530
1515 if YSC<=12 then on YSC/2-3 gosub 1730,1770,1820
1518 if YSC=20 then gosub 1830
1520 if YSC>=14 then on YSC/2-6 goto 8630,8900,9350,1530,2210
1530 while J>=16 : J=joy : timer=0 : wend
1540 J=joy : wend
1560 if X$="2" then NBP=2 : gosub 1740
1570 if X$="1" then NBP=1 : gosub 1740
1580 on scancode-58 gosub 1730,1770,1820
1590 on scancode-61 goto 8630,8900,9350
1650 if X$<>"" then if upper$(X$)=COD2$ then timer=0 : inc COD : if COD=len(COD$)+1 then 10120 else COD2$=mid$(COD$,COD,1) : gosub 10800 : goto 1670
1660 COD=1 : COD2$=left$(COD$,1)
1670 transpose COD-1 : clear key : X$="" : goto 1390
1730 if NBP=1 then NBP=2 else NBP=1
1740 locate 12,8 : A$=mid$(str$(NBP),2,1)+" PLAYER" : if NBP=2 then A$=A$+"S" else A$=A$+" "
1750 if YSC<>8 then pen 15 else pen 5
1760 goto 1900
1770 if MUS=0 then MUS=1 else MUS=0
1780 locate 12,10 : A$="MUSIC" : if MUS=0 then A$=A$+" OFF" : music freeze : goto 1800
1790 A$=A$+" ON " : music on : if MUS2=1 then MUS2=0 : music 4
1800 if YSC<>10 then pen 15 else pen 5
1810 goto 1900
1820 if FX=1 then FX=0 else FX=1
1822 if YSC<>12 then pen 15 else pen 5
1824 locate 12,12 : A$="FX" : if FX=0 then A$=A$+" OFF" else A$=A$+" ON "
1826 goto 1900
1830 inc GMID : GMID=GMID mod 3
1831 if YSC<>20 then pen 15 else pen 5
1832 locate 12,20 : A$="MODE "+GAMEMDE$(GMID)
1833 on GMID+1 gosub 60,70,80
1834 MPBL(0)=LIFES : MPBL(1)=LIFES
1840 gosub 12300 : goto 1900
1860 locate 18,14 : print "SCORE"
1870 locate 18,16 : print "HELP"
1880 locate 18,18 : print "INFOS"
1890 locate 12,22 : print "LET'S GO !" : return
1900 SELTIM=0 : print A$ : if INITMENU=0 then gosub 10800
1910 return
1940 gosub 10700
1970 pen 15 : locate 10,11
1980 print "GAME OVER PLAYER";PLR+1
1985 gosub 10720
1990 if MUS=1 then music 3 : transpose-10 : tempo 45
2000 gosub 10500 : gosub 9890
2020 LVL(PLR)=NWLVL
2030 if NBP=2 and MPBL(PPLR)>0 then 2160
2070 gosub 11100 : goto 1260
2080 music off : pop : gosub 8524 : for I=2 to NTS(NBPL) : if ST(NBPL,I)=0 or ST(NBPL,I)>=9 then anim I,"(125,7)(126,7)l" : move off I
2085 next I : anim on
2090 if MPBL(PLR)>0 then dec MPBL(PLR)
2100 if MPBL(PLR)>0 then if MUS=1 then music 3
2105 gosub 10500
2110 if DEMO=1 then DEMO=-1 : goto 1260
2115 auto back on : gosub 8000
2120 if MPBL(PLR)=0 then 1940
2130 if NBP=1 or MPBL(PPLR)=0 then 2210
2160 PLR=PPLR : O=LVL(PLR)
2170 gosub 11100
2180 goto 2210
2210 gosub 10700 : gosub 11500 : if DEMO=1 then gosub 10720 : goto 2270
2220 music off : if MUS=1 then music 2
2230 sprite 1,64,95,125 : sprite 2,236,95,125 : anim 1,"(125,5)(126,5)l" : anim 2,"(125,5)(126,5)l" : anim on
2240 locate 10,11 : pen 15 : print "GET READY PLAYER";PLR+1
2250 gosub 10720
2260 gosub 10500
2270 music off : gosub 10700 : screen copy FIRSTLVLSCR+BANK to back : screen copy FIRSTLVLSCR+BANK to logic
2275 goto 3340
2290 pop : music on : anim off : move off : anim 1,"(127,4)(128,5)l"
2295 anim on : gosub 10500
2300 anim off : sprite 1,X,Y,21 : wait 2 : gosub 8000 : inc LVL(PLR) : O=LVL(PLR)
2320 gosub 9650 : if LVL(PLR)<=LVLMX then gosub 11100
2350 while BONUSDONE=0 : gosub 9740 : wend
2355 gosub 10500
2360 gosub 10700
2365 if LVL(PLR)>LVLMX then 9870
2370 goto 2210
2510 if timer<100 or SUPERM>0 then sprite 1,340,100 : wait vbl : if SUPERM>0 then dec SUPERM : if SUPERM=3 then transpose PLR
2520 sprite 1,X,Y,C : if DEMO=1 then 2550
2530 X$=inkey$
2531 if X$=" " then gosub 9540
2532 if asc(X$)=27 then MPBL(0)=0 : MPBL(1)=0 : goto 5900
2540 if upper$(X$)="A" then X$="" : clear key : goto 6060
2545 gosub 12000
2550 if MUS=1 and FX2>0 then dec FX2 : if FX2=0 then music on
2560 if MUS=0 and FX>=1 then if FX2=0 then FX=1 else dec FX2 : FX=2
2570 if ZNTEST>0 then dec ZNTEST : return
2580 ZNTEST=MOUSKY(NBPL)
2600 if CZI(NBPL)=-1 then 2680 else 2610
2610 MZI=1 : inc CZ2 : if CZ2=CZI(NBPL)+1 then CZ2=0
2620 AC3$=ACT$(NBPL,CZ2) : inc CTIM(NBPL,CZ2) : if CTIM(NBPL,CZ2)=NZIF(NBPL,CZ2)+NZIO(NBPL,CZ2) then CTIM(NBPL,CZ2)=0
2630 I=val(AC3$)
2640 if I=0 then 2680 else gosub 7350
2650 if CTIM(NBPL,CZ2)=0 then IK=8 : on ZNE2(NBPL,CZ2) gosub 7120,7050,7120,7120 : music on : if ZNE2(NBPL,CZ2)=2 then 2630
2660 if CTIM(NBPL,CZ2)=NZIO(NBPL,CZ2) then IK=1 : on ZNE2(NBPL,CZ2) gosub 7120,7050,7120,7120 : music on : if ZNE2(NBPL,CZ2)=2 then 2630
2680 MZI=0 : if NTS(NBPL)=1 then 2930 else DRC=0 : inc NTS2 : if NTS2=NTS(NBPL)+1 then NTS2=2
2690 if AL(NBPL,NTS2)=0 and AL2(NBPL,NTS2)=0 then 2790 else if ST(NBPL,NTS2)>=9 then 2790 else if ST(NBPL,NTS2)<>0 then 2730
2700 if AL(NBPL,NTS2)=1 then I=NTS2 : goto 6860
2710 dec AL(NBPL,NTS2) : if AL(NBPL,NTS2)=5 then move on NTS2 : anim on NTS2
2720 goto 2930
2730 if movon(NTS2)=0 and FLP(NBPL,NTS2)=NPBL then 2740 else 2790
2740 anim NTS2,DGEM$(NBPL,NTS2,AL2(NBPL,NTS2)) : if mid$(DGEM$(NBPL,NTS2,AL2(NBPL,NTS2)+2),1,1)=" " then move x NTS2,DGEM$(NBPL,NTS2,AL2(NBPL,NTS2)+2) else DGER2$=mid$(DGEM$(NBPL,NTS2,AL2(NBPL,NTS2)+2),2,len(DGEM$(NBPL,NTS2,AL2(NBPL,NTS2)+2))+NPBL) : move y NTS2,DGER2$
2750 if AL2(NBPL,NTS2)=0 then inc AL2(NBPL,NTS2) else dec AL2(NBPL,NTS2)
2760 move on NTS2 : anim on NTS2
2770 goto 2930
2790 if ST(NBPL,NTS2)>9 then dec ST(NBPL,NTS2) : if ST(NBPL,NTS2)>9 then 2930 else ST(NBPL,NTS2)=0 : anim NTS2,RTRP$(NBPL,NTS2) : move on NTS2 : anim on NTS2 : goto 2930
2800 if SS(NBPL,NTS2)=-1 or movon(NTS2)<>0 then 2930
2810 inc FLP(NBPL,NTS2) : if FLP(NBPL,NTS2)=SS(NBPL,NTS2)+1 then FLP(NBPL,NTS2)=FLP(NBPL,NTS2)*-1
2820 if SS(NBPL,NTS2)>=20 then if FLP(NBPL,NTS2)=SS(NBPL,NTS2)-19 then FLP(NBPL,NTS2)=0 : sprite NTS2,XM(NBPL,NTS2),YM(NBPL,NTS2)
2830 if FLP(NBPL,NTS2)>=0 then MV2$=MOV$(NBPL,NTS2,FLP(NBPL,NTS2)) : AN2$=AN$(NBPL,NTS2,FLP(NBPL,NTS2)) : goto 2880
2840 MV2$=MOV$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1) : AN2$=AN$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1)
2850 if mid$(MV2$,6,1)=" " then mid$(MV2$,6,1)="-" else mid$(MV2$,6,1)=" "
2860 if AN2$=SPR$(ST(NBPL,NTS2),3) then AN2$=SPR$(ST(NBPL,NTS2),2) else if AN2$=SPR$(ST(NBPL,NTS2),2) then AN2$=SPR$(ST(NBPL,NTS2),3)
2870 if mid$(AN2$,1,5)=mid$(SPR$(1,6),1,5) then AN2$=mid$(SPR$(1,7),1,5)+mid$(AN$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1),6,4)+mid$(SPR$(1,7),10,8) else if mid$(AN2$,1,5)=mid$(SPR$(1,7),1,5) then AN2$=mid$(SPR$(1,6),1,5)+mid$(AN$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1),6,4)+mid$(SPR$(1,6),10,8)
2880 anim NTS2,AN2$
2890 if mid$(MV2$,1,1)<>"-" then move x NTS2,MV2$ else MV2$=mid$(MV2$,2,20) : move y NTS2,MV2$
2900 if FLP(NBPL,NTS2)<0 then if mid$(MOV$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1),6,1)=" " then mid$(MOV$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1),6,1)="-" else mid$(MOV$(NBPL,NTS2,abs(FLP(NBPL,NTS2))-1),6,1)=" "
2910 move on NTS2 : anim on NTS2
2930 if movon(15)=0 then sprite off 15
2940 if movon(14)=0 then sprite off 14
2950 if movon(13)=0 then sprite off 13
2970 Z=zone(1) : if Z<>0 then 2985 else 2975
2975 if PSTZ=0 and ZNE(NBPL,Z)=O then 3040
2980 if ZNE(NBPL,PSTZ)>30 then if ZNE2(NBPL,ZNE(NBPL,PSTZ)-30)=0 then 7810
2982 PSTZ=0 : goto 3040
2985 on ZNE(NBPL,Z) goto 5980,6060,5350,3060,6160,6210,6260,6320,2290
2990 if ZNE(NBPL,Z)>=20 and ZNE(NBPL,Z)<=29 then 8250
3000 if PSTZ<>0 then if Z=PSTZ then 3040 else if ZNE2(NBPL,ZNE(NBPL,PSTZ)-30)=0 then 7810 else PSTZ=0 : goto 3040
3010 if ZNE(NBPL,Z)>=60 and ZNE(NBPL,Z)<=79 then 7820
3020 if ZNE(NBPL,Z)>=30 and ZNE(NBPL,Z)<=39 then on ZNE2(NBPL,ZNE(NBPL,Z)-30) goto 5980,6060,3060,3060
3030 if FEU=1 and FEU2=0 then if ZNE(NBPL,Z)>=40 and ZNE(NBPL,Z)<=59 then 7670
3040 if FEU=1 and FEU2=0 then if C<=5 then 7450 else if C<=14 and C>=11 then 7450
3060 if SUPERM>0 then return
3070 TY=14 : TX=14 : if CR>=1 then TY=8 : if CR=2 then TX=18
3080 SP=0 : FS=2 : T=collide(1,TX,TY) : if T=0 then PLAT=0 : return
3090 for I=FS to 15 : if btst(I,T)=-1 then SP=I : I=16
3100 next I : I=0
3110 if SP>12 then if Y<y sprite(SP) or y sprite(SP)=0 then return else 5980
3120 if ST(NBPL,SP)>=9 then FS=SP+1 : SP=0 : if FS<15 then 3090 else return
3130 if ST(NBPL,SP)=0 or SP(NBPL,SP)>=97 then if abs(x sprite(SP)-X)>8 then return else if DEMO=0 then 3190 else 7450
3140 if ST(NBPL,SP)<>4 then 3170 else if x sprite(SP)-X>8 or x sprite(SP)-X<-8 then PLAT=0 : return
3150 if SAUT=0 and PLAT<>-1 then 3210 else return
3160 if Y>y sprite(SP)+2 or Y<y sprite(SP)-4 then PLAT=0 : return
3170 PLAT=0 : if SP(NBPL,SP)=93 or SP(NBPL,SP)=94 then if abs(x sprite(SP)-X)<=8 then 3190 else return
3180 if ST(NBPL,SP)<>3 and Y<y sprite(SP)-8 then 3200 else if CR>=1 and Y>=y sprite(SP) then 3200
3190 on ST(NBPL,SP)+1 goto 5980,5980,5900,5900,3200,5900,5900,5980
3200 return
3210 if Y>y sprite(SP)+2 or Y<y sprite(SP)-4 then PLAT=0 : goto 3200
3220 if PLAT<>SP then 3300 else SP2=SP : SP=0
3230 if point(X+x sprite(PLAT)-XPLAT-E-1,y sprite(PLAT)-4)<=V and point(X+x sprite(PLAT)-XPLAT+E+1,y sprite(PLAT)-4)<=V then 3240 else 3260
3240 if CR=0 then if point(X+x sprite(PLAT)-XPLAT-E-1,y sprite(PLAT)-12)<=V and point(X+x sprite(PLAT)-XPLAT+E+1,y sprite(PLAT)-12)<=V then 3250 else 3260
3250 XPLAT2=x sprite(PLAT) : X=X+XPLAT2-XPLAT : XPLAT=XPLAT2
3260 Y=y sprite(PLAT)-1
3270 if C=10 then C=2 else if C=19 then C=11
3280 for I=2 to 15 : if btst(I,T)=-1 and I<>SP2 then SP=I : I=16 : SP2=0
3290 next I : I=0 : if SP=0 then return else 3110
3300 XPLAT=x sprite(SP)
3310 Y=y sprite(SP)-1
3320 PLAT=SP : goto 3200
3340 PPLR=(PLR+1) mod 2
3345 if NTS(NBPL)=1 then 3370
3350 for I=2 to NTS(NBPL)
3360 FLP(NBPL,I)=NPBL : sprite I,XM(NBPL,I),YM(NBPL,I),SP(NBPL,I) : next I
3370 if NTZ(NBPL)=0 then 3430 else J=0 : for II=1 to NTZ(NBPL)
3380 if ZNE(NBPL,II)>=30 and ZNE(NBPL,II)<=39 then if ACT$(NBPL,ZNE(NBPL,II)-30)<>"" then CTIM(NBPL,J)=NZID(NBPL,J)*NPBL : inc J : goto 3420
3390 if ZNE(NBPL,II)<80 then 3410 else if ZNE2(NBPL,ZNE(NBPL,II)-30)=0 then 3420
3400 IK=8 : AC3$=ACT$(NBPL,ZNE(NBPL,II)-30) : INIT=1 : gosub 7840
3410 set zone II,X1Z(NBPL,II),Y1Z(NBPL,II) to X2Z(NBPL,II),Y2Z(NBPL,II)
3420 next II : J=0
3430 for I=0 to 7 : if SBLK(NBPL,I,0)<>0 then get sprite SBLK(NBPL,I,1),SBLK(NBPL,I,2),SBLK(NBPL,I,0)
3440 next I
3450 FX2=0 : gosub 8440
3490 gosub 10720 : move on : anim on : hide
3510 TMRDSPL=0 : TIR=0 : X=XD(NBPL) : Y=YD(NBPL) : C=SP(NBPL,1) : ECH=0 : E=4 : V=9 : TEST=1 : NTS2=1 : CZ2=CZI(NBPL) : SUPERM=0 : clear key : timer=0 : volume 16 : if MUS=1 then music 1 : transpose PLR
3520 CR=0 : gosub 2510 : gosub 7360 : if point(X,Y+1)<=V and PLAT<=0 then 4040
3530 if PLAT=0 then 3600 else if C=11 then 3560 else if point(X+E-1,Y-16)>V then PLAT=-1 : goto 4040
3540 if point(X+E-1,Y)>V then PLAT=-1 : goto 4040
3550 goto 3580
3560 if point(X-E+1,Y-16)>V then PLAT=-1 : goto 4040
3570 if point(X-E+1,Y)>V then PLAT=-1 : goto 4040
3580 if point(X-E,Y-12)>V or point(X-E,Y-4)>V then X=(X/8)*8+4
3590 if point(X+E,Y-12)>V or point(X+E,Y-4)>V then X=(X/8)*8+3
3600 gosub 7360
3610 on J goto 3640,4610,3620,4370,3640,4870,3620,4490,3640,5020,3620,3620,3620,3620,3620
3620 goto 3520
3640 if Y<16 then 3520
3650 Z=zone(1) : if Z=0 then 3670 else if ZNE(NBPL,Z)=4 then 3660 else if ZNE(NBPL,Z)<30 then 3670 else if ZNE2(NBPL,ZNE(NBPL,Z)-30)<>4 then 3670
3660 if point(X+E-1,Y-16)<=V and point(X-E+1,Y-16)<=V then 5510
3670 CR=0 : if J<>5 then if point(X+E-1,Y-16)>V then 3520
3680 if J<>9 then if point(X-E+1,Y-16)>V then 3520
3690 if C=11 then C=19 else C=10
3700 gosub 7360 : if J=9 and PLAT=0 then if point(X+1,Y+1)<=V then X=X+4 : if X>312 then X=312
3710 if J=5 and PLAT=0 then if point(X-1,Y+1)<=V then X=X-4 : if X<8 then X=8
3720 SAUT=0 : while SAUT<18 : if point(X+E-1,Y-12)>V or point(X-E+1,Y-12)>V then 4040
3730 inc SAUT
3740 Z=zone(1) : gosub 7360 : if Z=0 then 3770 else if ZNE(NBPL,Z)=4 then 3750 else if ZNE(NBPL,Z)<30 then 3770 else if ZNE2(NBPL,ZNE(NBPL,Z)-30)<>4 then 3770
3750 if J<>1 and J<>9 then if J<>5 then 3790
3760 if point(X+E-1,Y-16)<=V and point(X-E+1,Y-16)<=V then 5510
3770 if J=5 or J=9 then 3790
3780 if J=1 then 3790 else 4040
3790 if SAUT<10 then DXY=2 : Y=Y-2
3800 goto 3830
3810 if SAUT<12 then dec Y
3820 DXY=1
3830 if J=9 and PLAC=0 then gosub 4310
3840 if J=5 and PLAC=0 then gosub 4260
3850 if Y<16 then Y=16
3860 gosub 2510
3870 if MUS=0 and FX=1 then volume 16 : envel 1,200 : play 96-Y/2,1
3880 wend : goto 4040
3890 CR=0
3900 while SAUT<4
3910 DXY=2
3920 inc SAUT
3930 gosub 7360 : Z=zone(1) : if Z=0 then 3960 else if ZNE(NBPL,Z)=4 then 3940 else if ZNE(NBPL,Z)<30 then 3960 else if ZNE2(NBPL,ZNE(NBPL,Z)-30)<>4 then 3960
3940 if J<>1 and J<>9 then if J<>5 then 3960
3950 if point(X+E-1,Y-16)<=V and point(X-E+1,Y-16)<=V then 5510
3960 if J=8 or J=9 then gosub 4310 : goto 4000
3970 if J=5 or J=4 then gosub 4260 : goto 4000
3980 if J<>9 and J<>8 then if C=10 then gosub 4310
3990 if J<>5 and J<>4 then if C=19 then gosub 4260
4000 Y=Y-2
4010 if Y<16 then Y=16
4020 gosub 2510
4030 wend
4040 SAUT=0 : if Y<8 then Y=15
4050 if PLAT>0 then 3520
4060 DXY=1
4070 if C<=10 then C=10 else C=19
4080 while point(X+E-1,Y+1)<=V : if point(X-E+1,Y+1)>V then 4210
4090 DXY=1
4100 gosub 7360 : Z=zone(1) : if Z=0 then 4140 else if ZNE(NBPL,Z)=4 then 4120
4110 if ZNE(NBPL,Z)<30 then 4140 else if ZNE2(NBPL,ZNE(NBPL,Z)-30)<>4 then 4140
4120 if J<>1 and J<>9 then if J<>5 then 4140
4130 goto 5510
4140 if J=8 or J=9 then gosub 4310
4150 if J=4 or J=5 then gosub 4260
4160 Y=Y+2
4170 if MUS=0 and FX=1 then volume 16 : envel 1,200 : play 96-Y/2,1
4180 if Y>184 then gosub 5980
4190 gosub 2510 : if PLAT<>0 then 4240
4200 wend
4210 if point(X,Y+1)<=V then if point(X+E-1,Y+1)>V then X=X+3 else X=X-3
4220 while point(X,Y)>V : dec Y : wend
4230 while point(X,Y+1)<=V : inc Y : wend
4240 SAUT=0 : if C=19 or C=11 then C=11 else C=2
4250 goto 3520
4260 if X<8 then X=8
4270 C=19 : if point(X-E,Y-4)>V and point(X-E,Y-12)<=V then pop : goto 5170
4280 if point(X-E-DXY+1,Y)<=V then if point(X-E-DXY+1,Y-4)<=V and point(X-E-DXY+1,Y-8)<=V then X=X-DXY : goto 4350
4290 goto 4350
4300 goto 4350
4310 if X>312 then X=312
4320 C=10 : if point(X+E,Y-4)>V and point(X+E,Y-12)<V+1 then pop : goto 5320
4330 if point(X+E+DXY-1,Y)<=V then if point(X+E+DXY-1,Y-4)<=V and point(X+E+DXY-1,Y-8)<=V then X=X+DXY
4350 return
4370 CR=0 : if C=2 then for C=21 to 20 step-1 : gosub 2510 : next C : C=11
4380 restore 4470
4385 while J=4 and point(X-E,Y-12)<=V : if point(X-E,Y-4)>V then if PLAT>0 then 3520 else C=66 : X=X+4 : goto 5280
4390 dec X : read C : if C=0 then restore 4470 : read C
4400 if MUS=0 and FX=1 then if C=12 and C10=0 then volume 16 : envel 1,2000 : noise 25 : FX2=5
4410 if X<8 then X=8
4420 gosub 2510 : gosub 7360
4430 if PLAT<=0 and point(X,Y+1)<=V then C=19 : X=(X/8)*8+4 : goto 4040
4440 wend
4450 C=11 : gosub 2510
4460 goto 3520
4470 data 12,12,12,13,13,13,14,14,14,0
4490 CR=0 : if C=11 then for C=20 to 21 : gosub 2510 : next C : C=2
4500 restore 4580 : while J=8 and point(X+E,Y-12)<=V : if point(X+E,Y-4)>V then if PLAT>0 then 3520 else C=59 : X=X-4 : goto 5430
4510 inc X : read C : if C=0 then restore 4580 : read C
4520 if MUS=0 and FX=1 then if C=3 and C10=0 then volume 16 : envel 1,2000 : noise 25 : FX2=5
4530 if X>312 then X=312
4540 gosub 2510 : gosub 7360
4550 if PLAT<=0 and point(X,Y+1)<=V then C=10 : X=(X/8)*8+3 : goto 4040
4560 wend : C=2
4570 gosub 2510 : goto 3520
4580 data 3,3,3,4,4,4,5,5,5,0
4610 CR=1 : if C=11 then for C=15 to 16 : gosub 2510 : next C : C=16 : goto 4630
4620 if C=2 then for C=6 to 7 : gosub 2510 : next C : C=7
4630 CR=1 : gosub 7360 : while J=2 : gosub 7360 : gosub 2510
4640 if PLAT<=0 then if point(X+E-1,Y+1)<=V and point(X-E+1,Y+1)<=V then Y=Y+6 : goto 4040
4650 wend
4660 if PLAT<=0 then 4700
4670 if J=0 and Y>7 then if point(X+E-1,Y-9)<=V and point(X-E+1,Y-9)<=V then 4790
4680 if J<=6 then C=16 else C=7
4690 gosub 2510 : goto 4630
4700 gosub 7360 : if Y<8 then 4730
4710 if J=5 and C=16 then if point(X-1,Y+1)<=V then C=19 : goto 4760
4720 if J=9 and C=7 then if point(X+1,Y+1)<=V then C=10 : goto 4760
4730 if J=6 or J=4 then 4890 else if J=10 or J=8 then 5040
4740 if Y>7 and J=0 then if point(X+E-1,Y-9)<=V and point(X-E+1,Y-9)<=V then 4790
4750 gosub 2510 : gosub 7360 : goto 4700
4760 Y=Y+6
4770 if C=19 then X=X-2 else X=X+2
4780 CR=0 : goto 3890
4790 if C=16 then 4830
4800 for C=7 to 6 step-1 : sprite 1,X,Y,C
4810 if ZNE(NBPL,Z)<>5 and ZNE(NBPL,Z)<>6 then gosub 2510
4820 next C : C=2 : sprite 1,X,Y,C : goto 3520
4830 for C=16 to 15 step-1 : sprite 1,X,Y,C
4840 if ZNE(NBPL,Z)<>5 and ZNE(NBPL,Z)<>6 then gosub 2510
4850 next C : C=11 : sprite 1,X,Y,C : goto 3520
4870 CR=2 : if C=2 then for C=20 to 21 : gosub 2510 : next C
4880 for C=15 to 16 : gosub 2510 : next C
4890 CR=2 : restore 4990
4900 inc X : gosub 7360 : while J=4 or J=6
4910 if MUS=0 and FX=1 then volume 16 : envel 7,500 : noise rnd(1)+9 : FX2=4
4920 if PLAT<=0 and point(X-1,Y+1)<=V then C=11 : X=X-4 : goto 4040
4930 if point(X-E,Y-1)>V then 4960
4940 dec X : read C : if C=0 then restore 4990 : read C
4950 if X<8 then X=8
4960 gosub 2510 : gosub 7360
4970 wend : if Y<8 then 4790 else if J=2 or point(X+E-1,Y-9)>V then 5000 else if point(X-E+1,Y-9)>V then 5000
4980 C=16 : goto 4830
4990 data 17,17,17,18,18,18,0
5000 C=16 : sprite 1,X,Y,16 : goto 4630
5020 CR=2 : if C=11 then for C=21 to 20 step-1 : gosub 2510 : next C
5030 for C=6 to 7 : gosub 2510 : next C
5040 CR=2 : restore 5140
5050 dec X : gosub 7360 : while J=8 or J=10
5060 if MUS=0 and FX=1 then volume 16 : envel 7,500 : noise rnd(1)+8 : FX2=5
5070 if PLAT=0 and point(X+1,Y+1)<=V then C=2 : X=X+4 : goto 4040
5080 if point(X+E,Y-1)>V then 5110
5090 inc X : read C : if C=0 then restore 5140
5100 if X>312 then X=312
5110 gosub 2510 : gosub 7360
5120 wend : if Y<8 then 4790 else if J=2 or point(X+E-1,Y-9)>V then 5150 else if point(X-E+1,Y-9)>V then 5150
5130 C=7 : goto 4790
5140 data 8,8,8,9,9,9,0
5150 C=7 : sprite 1,X,Y,7 : goto 4630
5170 CR=1 : while point(X-E,Y-6)>V : dec Y : C=19 : gosub 2510 : wend
5180 while point(X-E,Y-5)<=V : inc Y : C=19 : gosub 2510 : wend
5190 C=62
5200 inc C
5210 if C=63 then Y=Y+5 : X=X+4
5220 if C=64 then dec Y
5230 if C=66 then Y=Y-2
5240 if C=67 then Y=Y-4
5250 if C=68 then dec Y
5260 if C=69 then Y=Y-3 : X=X-8
5270 if C=70 then C=16
5280 ZNTEST=1 : gosub 2510
5290 if C<>16 then 5200 else gosub 7360 : gosub 7360
5300 SAUT=0 : if J=2 or Y<8 then 4630 else if point(X-E+1,Y-8)>V or point(X+E-1,Y-8)>V then 4630 else 4830
5320 CR=1 : while point(X+E,Y-6)>V : dec Y : C=10 : gosub 2510 : wend
5330 while point(X+E,Y-5)<=V : inc Y : C=10 : gosub 2510 : wend
5340 C=55
5350 inc C
5360 if C=56 then Y=Y+5 : X=X-4
5370 if C=57 then dec Y
5380 if C=59 then Y=Y-2
5390 if C=60 then Y=Y-4
5400 if C=61 then dec Y
5410 if C=62 then Y=Y-3 : X=X+8
5420 if C=63 then C=7
5430 ZNTEST=1 : gosub 2510
5440 if C<>7 then 5350 else gosub 7360 : gosub 7360
5450 SAUT=0 : if J=2 or Y<8 then 4630 else if point(X+E-1,Y-8)>V or point(X-E+1,Y-8)>V then 4630 else 4790
5460 if Y<16 then 3520
5470 if joy=9 or joy=5 then 3720
5480 if joy<>1 then 3520 else C=10 : goto 3720
5510 restore 5780 : C=55 : SAUT=0
5520 if SUPERM>0 or timer<100 then wait vbl
5530 Z=zone(1) : if Z=0 then 5460 else if ZNE(NBPL,Z)=4 then 5550
5540 if ZNE(NBPL,Z)<30 then 5460 else if ZNE2(NBPL,ZNE(NBPL,Z)-30)<>4 then 5460
5550 gosub 7360
5560 if J=0 then 5770
5570 if J<>1 and J<>9 then if J<>5 then 5630
5580 if HHH<>1 then HHH=1
5590 if point(X+E-1,Y-16)>V or point(X-E+1,Y-16)>V then if DEMO=0 then HHH=-1
5600 if J=9 and X<=315 then 5790
5610 if J=5 and X>=4 then 5840
5620 goto 5720
5630 if J<>2 and J<>6 then if J<>10 then 5690
5640 if HHH<>0 then HHH=0
5650 if point(X+E-1,Y+1)>V or point(X-E+1,Y+1)>V then HHH=-1
5660 if J=10 and X<=315 then 5790
5670 if J=6 and X>=4 then 5840
5680 goto 5720
5690 HHH=-1 : if J=8 and X<=315 then 5790
5700 if J=4 and X>=4 then 5840
5710 goto 5520
5720 read C : if C=0 then restore 5780 : read C
5730 if C=53 then if MUS=0 and FX=1 then volume 16 : envel 1,1000 : noise Y/6+1 : FX2=4
5740 if HHH=1 and C=54 then Y=Y-2
5750 if HHH=0 then if C=53 or C=55 then Y=Y+2
5760 if Y<16 then Y=16
5770 gosub 2510 : goto 5520
5780 data 54,55,54,53,0
5790 if point(X+E,Y-15)>V then 5720
5800 if point(X+E,Y-12)>V then 5720
5810 if point(X+E,Y-6)>V then 5320
5820 if point(X+E,Y)>V then 5720
5830 inc X : goto 5720
5840 if point(X-E,Y-15)>V then 5720
5850 if point(X-E,Y-12)>V then 5720
5860 if point(X-E,Y-6)>V then 5170
5870 if point(X-E,Y)>V then 5720
5880 dec X : goto 5720
5900 for I=13 to 15 : sprite off I : next I
5910 anim off 1 : while point(X,Y+1)<=V : inc Y : sprite 1,X,Y : if Y=183 then 5930
5920 wend : wait 15
5930 D=19 : if C<=10 then D=2 else if C>=56 and C<=62 then D=2 else if C=90 then D=2
5940 sprite 1,X,Y,D : wait 3 : if D=2 then sprite 1,X,Y,21 else sprite 1,X,Y,20
5950 wait 15 : anim 1,"(48,30)(49,10)(50,10)(51,10)(52,10)" : anim on
5960 wait 70 : anim 1,"(51,4)(52,4)l" : anim on
5970 goto 2080
5980 if SUPERM>0 and Y<184 then return
5990 for I=13 to 15 : sprite off I : next I : if X>160 then C=42 else C=43
6000 anim off 1 : sprite 1,X,Y,C
6010 move y 1,"(1,-2,10)(1,0,10)(1,2,10)(1,3,30)(1,4,40)" : if C=42 then move x 1,"(1,-2,70)" else move x 1,"(1,2,70)(2,1,50)"
6020 move on 1 : while y sprite(1)<220 : wend : move off 1 : wait 10 : if FX>=1 then music freeze : volume 16 : envel 1,15000 : noise 31
6030 sprite 1,x sprite(1),210,44 : anim 1,"(45,30)(46,30)(47,30)"
6040 move y 1,"(2,-1,0)" : move on 1 : anim on : if FX>=1 then wait 50
6050 goto 2080
6060 if SUPERM>0 then return
6070 if CR<>0 and Y=Y1Z(NBPL,Z)+15 then if Y2Z(NBPL,Z)-Y1Z(NBPL,Z)<=X2Z(NBPL,Z)-X1Z(NBPL,Z) then 3060
6080 anim off 1
6090 anim 1,"(33,1)(34,1)L" : timer=0 : anim on
6100 if MUS=1 and FX>=1 then music off : volume 16
6110 if FX>=1 then envel 1,300 : noise 15 : noise 30 : noise 5
6120 if timer<70 then 6110
6130 anim 1,"(35,1)(36,10)(37,8)(38,8)(39,8)(40,4)(41,8)" : move y 1,"(5,-1,0)" : anim on 1 : move on 1 : timer=0
6140 goto 2080
6160 if point(X-E,Y)>V then 3060
6170 if CR=0 then if point(X-E,Y-9)>V then 3060
6180 dec X
6190 if point(X,Y+1)<=V then X=(X/8)*8+4
6200 goto 3060
6210 if point(X+E,Y)>V then 3060
6220 if CR=0 then if point(X+E,Y-9)>V then 3060
6230 inc X
6240 if point(X,Y+1)<=V then X=(X/8)*8+3
6250 goto 3060
6260 if point(X-E,Y)>V then 3060
6270 if CR=0 then if point(X-E,Y-9)>V then 3060
6280 if YES=0 then dec X : YES=1
6290 YES=0 : goto 3060
6300 if point(X,Y+1)<=V then if joy<>8 then X=(X/8)*8+4 else inc X
6310 goto 3060
6320 if point(X+E,Y)>V then 3060
6330 if CR=0 then if point(X+E,Y-9)>V then 3060
6340 if YES=0 then inc X : YES=1
6350 YES=0 : goto 3060
6360 if point(X,Y+1)<=V then if joy<>4 then X=3+(X/8)*8 else dec X
6370 goto 3060
6470 FILE$=SAM$+mid$(str$(LVL(PLR)),2,2)+".SAM" : gosub 12200
6472 LVLBANK(BANK)=LVL(PLR) : NBPL=BANK
6475 open in #1,FILE$ : pof(#1)=0 : NV=0 : for I=0 to 1 : for J=0 to 22 : for K=0 to 39 : MP(NBPL,I,K,J)=0 : next K : next J : next I : for I=1 to 110 : ZNE(NBPL,I)=0 : if I<=80 then ZNE2(NBPL,I)=0 : ACT$(NBPL,I)=""
6485 next I
6500 NV=-1 : input #1,X$ : MOUSKY(NBPL)=val(X$) : if SAM$="SAM" then X=instr(X$,"/") : Y=val(mid$(X$,X+1,len(X$)-X))
6510 input #1,L$ : NV=0
6520 input #1,X$ : if asc(X$)>64 then inc NV : if NV<2 then 9360 else 6670
6530 input #1,Y$
6540 X=val(X$) : Y=val(Y$)
6550 if BONUSDONE=0 then gosub 9740
6560 input #1,X$
6570 if val(X$)<0 then MP(NBPL,NV,X,Y)=val(X$)*-1 else 6630
6580 FOUY=instr(X$,"/") : if FOUY<>0 then ID2=val(mid$(X$,FOUY+1,6))-1 : IND=val(X$)*-1
6590 inc X : if X>39 then X=0 : inc Y : if Y=23 then Y=0 : goto 6660
6600 if BONUSDONE=0 then gosub 9740
6610 if ID2=0 then 6560
6620 dec ID2 : MP(NBPL,NV,X,Y)=IND : goto 6590
6630 if asc(X$)<65 then input #1,Y$ : goto 6540
6640 inc NV : if NV>=2 then 6670 else input #1,X$ : if asc(X$)<65 then input #1,Y$ : goto 6540
6650 goto 6640
6660 input #1,X$ : inc NV : if NV<2 then 6520
6670 input #1,X$,Y$,Z$ : XD(NBPL)=val(X$) : YD(NBPL)=val(Y$) : SP(NBPL,1)=val(Z$)
6680 input #1,Y$ : NTS(NBPL)=val(Y$) : if NTS(NBPL)=1 then 6750
6690 for X=2 to NTS(NBPL) : input #1,X$,Y$,Z$,ZE$,ZF$ : XM(NBPL,X)=val(X$) : YM(NBPL,X)=val(Y$) : SP(NBPL,X)=val(Z$) : SS(NBPL,X)=val(ZE$) : ST(NBPL,X)=val(ZF$)
6695 NBM=0 : if SS(NBPL,X)>=20 then NBM=19
6700 for I=0 to SS(NBPL,X)-NBM : line input #1,47,AN$(NBPL,X,I)
6702 if asc(mid$(AN$(NBPL,X,I),1,1))=13 then AN$(NBPL,X,I)=mid$(AN$(NBPL,X,I),3,len(AN$(NBPL,X,I))-2)
6705 next I
6710 for I=0 to SS(NBPL,X)-NBM : line input #1,47,MOV$(NBPL,X,I)
6712 if asc(mid$(MOV$(NBPL,X,I),1,1))=13 then MOV$(NBPL,X,I)=mid$(MOV$(NBPL,X,I),3,len(MOV$(NBPL,X,I))-2)
6715 next I
6720 line input #1,47,DGEM$(NBPL,X,0) : line input #1,47,DGEM$(NBPL,X,1) : line input #1,47,DGEM$(NBPL,X,2) : if X<>NTS(NBPL) then line input #1,47,DGEM$(NBPL,X,3) else line input #1,DGEM$(NBPL,X,3)
6730 next X
6740 for I=0 to 7 : input #1,X$,Y$,Z$ : SBLK(NBPL,I,0)=val(X$) : SBLK(NBPL,I,1)=val(Y$) : SBLK(NBPL,I,2)=val(Z$) : next I
6750 input #1,X$ : NTZ(NBPL)=val(X$) : if NTZ(NBPL)=0 then 6770
6760 for X=0 to NTZ(NBPL) : input #1,X$,Y$,Z$,A$,B$ : ZNE(NBPL,X)=val(X$) : X1Z(NBPL,X)=val(Y$) : Y1Z(NBPL,X)=val(Z$) : X2Z(NBPL,X)=val(A$) : Y2Z(NBPL,X)=val(B$) : next X
6770 input #1,X$ : CZI(NBPL)=val(X$) : if CZI(NBPL)=-1 then 6790
6780 for X=0 to CZI(NBPL) : input #1,X$,Y$,Z$ : NZID(NBPL,X)=val(X$) : NZIO(NBPL,X)=val(Y$) : NZIF(NBPL,X)=val(Z$) : next X
6790 input #1,X$ : X=val(X$) : if X=-1 then 6800
6792 input #1,ACT$(NBPL,X)
6795 goto 6790
6800 input #1,X$ : X=val(X$) : if X=-1 then 6810
6802 input #1,X$ : ZNE2(NBPL,X)=val(X$)
6805 goto 6800
6810 close #1 : gosub 10700
6830 gosub 1120
6835 screen copy logic to FIRSTLVLSCR+BANK : cls back : cls logic
6850 return
6860 if movon(15)=0 then BAL=0 else if movon(14)=0 then BAL=1 else if movon(13)=0 then BAL=2
6870 if BAL=-1 then 2790
6880 FLP2=FLP(NBPL,I) : if FLP2<0 then D$=mid$(MOV$(NBPL,I,abs(FLP2)-1),6,1) else D$=mid$(MOV$(NBPL,I,FLP2),6,1)
6890 if FLP2<0 then if D$="-" then D$=" " else D$="-"
6900 if X>x sprite(I) and D$=" " then SPF=28 : goto 6930
6910 if X<x sprite(I) and D$="-" then SPF=29 : goto 6930
6920 goto 2790
6930 AL(NBPL,I)=20 : move freeze I : anim freeze I
6940 SPF=SPF+rnd(1)*2 : if SPF=30 or SPF=31 then SPF2=-4 else SPF2=0
6950 sprite I,x sprite(I),y sprite(I),SPF
6960 if SPF=28 or SPF=30 then SPF=4 else SPF=-4
6970 sprite 15-BAL,x sprite(I)+SPF,y sprite(I)-10-SPF2,32
6980 if SPF=-4 then move x 15-BAL,"(1,-4,40)" else move x 15-BAL,"(1,4,40)"
6990 move on 15-BAL : if FX>=1 then music on : music freeze : volume 16 : envel 1,5000 : noise 25 : FX2=10 : if MUS=0 then FX2=25 : FX=2
7000 FLP2=0
7010 BAL=-1
7020 goto 2970
7050 if X2Z(NBPL,I)-X1Z(NBPL,I)>=Y2Z(NBPL,I)-Y1Z(NBPL,I) then 7070
7060 ink IK : draw X1Z(NBPL,I)+4,Y1Z(NBPL,I)+3 to X1Z(NBPL,I)+4,Y2Z(NBPL,I)-4 : goto 7080
7070 ink IK : draw X1Z(NBPL,I)+3,Y1Z(NBPL,I)+4 to X2Z(NBPL,I)-4,Y1Z(NBPL,I)+4
7080 if IK=1 then reset zone I else set zone I,X1Z(NBPL,I),Y1Z(NBPL,I) to X2Z(NBPL,I),Y2Z(NBPL,I)
7090 if FX=0 or INIT=1 then return else music on : music freeze : volume 16
7095 if IK=1 then envel 1,750 : play 95,1 : FX2=15 : return
7100 envel 4,750 : play 96,1 : FX2=15 : return
7120 REP=val(AC3$) : gosub 7350
7130 TAY=val(AC3$) : gosub 7350
7140 XDEST=val(AC3$) : gosub 7350
7150 YDEST=val(AC3$) : gosub 7350
7160 XPIC=val(AC3$) : gosub 7350
7170 YPIC=val(AC3$) : gosub 7350
7180 XPIC2=val(AC3$) : gosub 7350
7190 YPIC2=val(AC3$) : gosub 7350
7200 if IK=8 then set zone I,X1Z(NBPL,I),Y1Z(NBPL,I) to X2Z(NBPL,I),Y2Z(NBPL,I) : goto 7220
7210 reset zone I : XPIC=XPIC2 : YPIC=YPIC2
7220 if TAY=1 or TAY=3 then SBNK=71 else SBNK=1
7230 if TAY=3 then TAY=2
7240 get sprite XPIC,YPIC,SBNK : wait vbl
7250 if abs(REP)=1 then sprite 9,XDEST,YDEST,SBNK : wait vbl : put sprite 9 : wait vbl : goto 7330
7260 if REP<0 then REP=abs(REP) : goto 7300
7270 if TAY=1 and REP>4 then REP=4 else if TAY=2 then REP=REP/2 : if REP>4 then REP=4
7280 for I=0 to REP-1 : sprite 9+I,XDEST+I*8*TAY,YDEST,SBNK : next I : wait vbl
7290 goto 7320
7300 if TAY=1 and REP>4 then REP=4 else if TAY=2 then REP=REP/2 : if REP>4 then REP=4
7310 for I=0 to REP-1 : sprite 9+I,XDEST,YDEST+I*8*TAY,SBNK : next I : wait vbl
7320 for I=0 to REP-1 : put sprite 9+I : next I : wait vbl
7330 for I=0 to REP-1 : sprite off 9+I : next I : wait vbl
7340 return
7350 FOUY=instr(AC3$,"/") : AC3$=mid$(AC3$,FOUY+1,len(AC3$)-FOUY) : return
7360 if DEMO=0 then J=joy : goto 7380
7365 if timer>800 or joy>=16 or inkey$<>"" then goto 10900
7370 dec DEMTIM : if DEMTIM>0 then 7380
7375 J=JDEM(DEMP) : DEMTIM=TDEM(DEMP) : inc DEMP
7380 if COMPILED then wait COMPDELAY
7385 if BOUT>0 then gosub 7420
7390 if J<16 then FEU2=0 : FEU=0 : return
7400 J=J-16 : if FEU2=0 then FEU=1
7410 return
7420 dec BOUT : if J>=16 then J=J-16
7430 if J=2 then J=9 else if J=10 then J=1 else if J=8 then J=5 else if J=9 then J=4 else if J=1 then J=6 else if J=5 then J=2 else if J=4 then J=10 else if J=6 then J=8
7435 if BOUT=0 then transpose PLR : tempo 100
7440 return
7450 TIM=200 : COUP=0 : if C<=5 then anim 1,"(101,5)(102,12)" else anim 1,"(105,9)(106,12)" : COUP=3
7460 anim on : FEU2=1 : SP=0 : if DEMO=1 then FEU=0 : FEU2=0
7470 if timer<100 then wait vbl
7480 DB=2 : T=collide(1,TX+1,TY) : if T=0 then dec TIM : if TIM>0 then 7480 else anim off 1 : goto 3200
7490 for I=DB to 15 : if btst(I,T)=-1 then SP=I : I=16
7500 next I : I=0 : if SP>8 then 3060
7510 if ST(NBPL,SP)>=9 then DB=SP+1 : SP=0 : goto 7490
7520 if ST(NBPL,SP)<>0 then 7650
7530 if Y>y sprite(SP)+4 or Y<y sprite(SP)-2 then 7650
7540 if C<=5 and x sprite(SP)<X then 7650 else if C>=11 and x sprite(SP)>X then 7650
7550 anim freeze SP : move freeze SP : if C<=5 then anim 1,"(103,8)(104,18)(103,8)" else anim 1,"(107,8)(108,18)(107,8)"
7560 sprite SP,x sprite(SP),y sprite(SP),109+COUP : if FX>=1 then music on : music freeze : volume 16 : envel 1,5000 : noise 24 : FX2=20
7570 while TIM>0 : dec TIM : wend : anim on 1 : sprite SP,x sprite(SP),y sprite(SP),110+COUP
7580 TIM=200 : CFLIC=110+COUP
7590 while TIM>0 : dec TIM : if TIM=100 then CFLIC=111+COUP : if FX>=1 then envel 1,5000 : noise 27 : FX2=10 : if MUS=0 then FX2=30
7600 sprite SP,x sprite(SP),y sprite(SP),CFLIC
7610 wend : anim SP,"(115,12)(116,12)L" : anim on : ST(NBPL,SP)=100/NTS(NBPL) : if FLP(NBPL,SP)>=0 then RTRP$(NBPL,SP)=AN$(NBPL,SP,FLP(NBPL,SP)) : goto 7640
7620 if AN$(NBPL,SP,abs(FLP(NBPL,SP))-1)=SPR$(0,4) then RTRP$(NBPL,SP)=SPR$(0,4) : goto 7640
7630 if AN$(NBPL,SP,abs(FLP(NBPL,SP))-1)=SPR$(0,2) then RTRP$(NBPL,SP)=SPR$(0,3) else RTRP$(NBPL,SP)=SPR$(0,2)
7640 SC(PLR)=SC(PLR)+PTSGUARD
7650 I=PLR : gosub 8480 : TIM=0 : anim off 1 : goto 3110
7670 W=ZNE(NBPL,Z)-30
7680 if ZNE2(NBPL,W)=2 and NKEY>0 then dec NKEY : ZNE2(NBPL,W)=4 : goto 7830
7690 if ZNE2(NBPL,W)=3 and OKEY>0 then dec OKEY : ZNE2(NBPL,W)=5 : goto 7830
7700 if ZNE2(NBPL,W)>1 then 3060
7710 if X2Z(NBPL,Z)-X1Z(NBPL,Z)=16 and (X1Z(NBPL,Z)/16)*16<>X1Z(NBPL,Z) then CAL=8
7720 if X2Z(NBPL,Z)-X1Z(NBPL,Z)=24 then CAL=8
7730 if C<=10 and X+2>X1Z(NBPL,Z)+CAL then 7760
7740 if C>10 and X-8<X1Z(NBPL,Z)+CAL then 7760
7750 if C<=5 then sprite 1,X,Y,90 else if C>=11 and C<=14 then sprite 1,X,Y,91
7760 if ZNE2(NBPL,W)=1 then ZNE2(NBPL,W)=0 else ZNE2(NBPL,W)=1
7770 BR=MP(NBPL,1,(X1Z(NBPL,Z)+CAL)/8,Y1Z(NBPL,Z)/8)
7780 if MP(NBPL,0,(X1Z(NBPL,Z)+CAL)/8,Y1Z(NBPL,Z)/8)<>0 then screen$(back,X1Z(NBPL,Z)+CAL,Y1Z(NBPL,Z))=BLK$(MP(NBPL,0,X1Z(NBPL,Z)/8,Y1Z(NBPL,Z)/8))
7790 if FX=1 then music on : music freeze : volume 16 : envel 4,750 : if BR<357 then noise 1 else play 40,1
7800 screen$(back,X1Z(NBPL,Z)+CAL,Y1Z(NBPL,Z))=BLK$(BR+ZNE2(NBPL,W)) : goto 7830
7810 W=ZNE(NBPL,PSTZ)-30 : if PSTZ<>0 then PSTZ3=1
7815 PSTZ=0 : goto 7830
7820 if ZNE(NBPL,Z)>=60 and ZNE(NBPL,Z)<=79 then W=ZNE(NBPL,Z)-30 : PSTZ=Z : BR=0
7830 AC3$=ACT$(NBPL,W) : if Z<=0 and PSTZ3=0 then screen$(back,X1Z(NBPL,Z)+CAL,Y1Z(NBPL,Z))=BLK$(BR+ZNE2(NPBL,W))
7840 I=val(AC3$) : gosub 7350 : if I=0 then 7930
7850 ZBNE=val(AC3$) : gosub 7350 : if ZBNE<>0 then 7870 else if AL(NBPL,I)=0 and ST(NBPL,I)<9 then AL(NBPL,I)=1 else AL(NBPL,I)=0 : if ST(NBPL,I)<9 then move on I : anim on I
7860 goto 7840
7870 ZBNE2=val(AC3$) : gosub 7350
7880 if ZNE(NBPL,I)=ZBNE then ZNE(NBPL,I)=ZBNE2 else ZNE(NBPL,I)=ZBNE
7890 if ZNE(NBPL,I)=ZBNE then IK=8 : goto 7910
7900 IK=1
7910 on ZBNE gosub 7120,7050,7120,7120
7920 FX2=10 : goto 7840
7930 if INIT=1 then INIT=0 : return
7940 if PSTZ<>0 then 7980
7950 FEU2=1 : if BR<=MANETS or ZNE2(NBPL,W)>1 then 7980 else ZNE2(NBPL,W)=0
7960 if MP(NBPL,0,(X1Z(NBPL,Z)+CAL)/8,Y1Z(NBPL,Z)/8)<>0 then screen$(back,X1Z(NBPL,Z)+CAL,Y1Z(NBPL,Z))=BLK$(MP(NBPL,0,X1Z(NBPL,Z)/8,Y1Z(NBPL,Z)/8))
7970 screen$(back,X1Z(NBPL,Z)+CAL,Y1Z(NBPL,Z))=BLK$(BR)
7980 PSTZ3=0 : CAL=0 : goto 3060
8000 gosub 10700 : reset zone : BTIM=0 : for I=2 to NTS(NBPL) : if ST(NBPL,I)>=9 then ST(NBPL,I)=0
8010 next I : cls back : cls logic
8020 FEU=0 : FEU2=1 : PLAT=0 : BOUT=0 : NKEY=0 : OKEY=0 : PSTZ=0 : FX2=0
8030 for I=0 to 8 : AL2(NBPL,I)=0 : AL(NBPL,I)=0 : next I : PLAT=0
8040 for II=50 to 80 : AC3$=ACT$(NBPL,II) : if AC3$="" then 8090
8050 I=val(AC3$) : gosub 7350 : if I=0 then 8090 else ZBNE=val(AC3$) : gosub 7350 : if ZBNE=0 then 8050 else ZBNE2=val(AC3$) : gosub 7350
8060 ZNE(NBPL,I)=ZBNE2
8070 IK=1 : if ZBNE<>2 then for J=0 to 7 : gosub 7350 : next J
8080 goto 8050
8090 next II : Z=0 : CAL=0
8100 inc Z : if Z>NTZ(NBPL) then Z=0 : goto 8170
8110 if ZNE(NBPL,Z)<40 or ZNE(NBPL,Z)>59 then 8100
8120 if ZNE2(NBPL,ZNE(NBPL,Z)-30)=4 then ZNE2(NBPL,ZNE(NBPL,Z)-30)=2 : goto 8100
8130 if ZNE2(NBPL,ZNE(NBPL,Z)-30)=5 then ZNE2(NBPL,ZNE(NBPL,Z)-30)=3 : goto 8100
8140 if ZNE2(NBPL,ZNE(NBPL,Z)-30)<>1 then goto 8100
8150 ZNE2(NBPL,ZNE(NBPL,Z)-30)=0
8160 goto 8100
8170 return
8250 reset zone Z : screen$(back,X1Z(NBPL,Z),Y1Z(NBPL,Z))=BLK$(MP(NBPL,0,X1Z(NBPL,Z)/8,Y1Z(NBPL,Z)/8))
8260 if Y<>Y1Z(NBPL,Z)+7 then screen$(logic,X1Z(NBPL,Z),Y1Z(NBPL,Z))=BLK$(MP(NBPL,0,X1Z(NBPL,Z)/8,Y1Z(NBPL,Z)/8))
8270 on ZNE(NBPL,Z)-19 goto 8350,8330,8280,8290,8390,8310,8370
8280 BOUT=600/NTS(NBPL) : transpose-20 : tempo 50 : goto 3060
8290 SC(PLR)=SC(PLR)+PTSWREATH : I=PLR : gosub 8480 : if FX=1 then music on : music freeze : volume 16 : envel 1,7000 : play 70,3 : play 80,1 : FX2=15 : if MUS=0 then FX2=25 : FX=2
8300 goto 3060
8310 SC(PLR)=SC(PLR)+PTSCOIN : I=PLR : gosub 8480 : if FX>=1 then music on : music freeze : volume 16 : envel 1,5000 : play 90,1 : FX2=10 : if MUS=0 then FX2=25 : FX=2
8320 goto 3060
8330 inc OKEY : if FX>=1 then music on : music freeze : volume 16 : envel 1,10000 : play 90,1 : FX2=10 : if MUS=0 then FX2=25 : FX=2
8340 goto 3060
8350 inc NKEY : if FX>=1 then music on : music freeze : volume 16 : envel 1,10000 : play 85,1 : FX2=10 : FX=2
8360 goto 3060
8370 SUPERM=300 : transpose 5+PLR : if FX>=1 then music on : music freeze : volume 16 : envel 1,5000 : play 40,1 : play 41,1 : play 42,1 : play 43,1 : play 44,1 : play 45,1 : play 46,1 : play 47,1 : play 48,1 : play 49,1 : play 50,1 : play 51,1 : FX2=10
8380 goto 3060
8390 inc MPBL(PLR) : if FX>=1 then music on : music freeze : volume 16 : envel 1,5000 : play 35,3 : play 55,5 : play 50,1 : FX2=10 : if MUS=0 then FX2=20 : FX=2
8400 screen copy back,X1Z(NBPL,Z),Y1Z(NBPL,Z)-8,X1Z(NBPL,Z)+16,Y1Z(NBPL,Z) to back,X1Z(NBPL,Z),Y1Z(NBPL,Z)
8410 screen copy back,X1Z(NBPL,Z),Y1Z(NBPL,Z)-8,X1Z(NBPL,Z)+16,Y1Z(NBPL,Z) to logic,X1Z(NBPL,Z),Y1Z(NBPL,Z)
8420 gosub 8520 : goto 3060
8440 THISPLR=PLR
8445 for PLR=0 to NBP-1
8450 screen$(back,0,184+PLR*8)=BLK$(328+PLR) : screen$(logic,0,184+PLR*8)=BLK$(328+PLR)
8460 if MPBL(PLR)>0 then for COEPOS=0 to MPBL(PLR)-1 : gosub 8521 : next COEPOS
8462 if PLR=THISPLR then pen 15 else pen 12
8465 WIN=-1 : gosub 8480
8470 next PLR
8472 PLR=THISPLR
8475 return
8480 C$=mid$(str$(SC(PLR)),2) : L=7-len(C$)
8482 while L>0 : C$="0"+C$ : dec L : wend
8483 locate 1,23+PLR : print using ".~~~~~~~";C$;
8500 gosub 8560
8510 if SC(PLR)>999 and int(SC(PLR)/PTSEXTRALIFE)>=VV(PLR)+1 then 8530
8515 return
8519 screen$(back,COEX,COEY)=COEUR$(COEID) : screen$(logic,COEX,COEY)=COEUR$(COEID) : return
8520 COEPOS=MPBL(PLR)-1
8521 gosub 8526 : COEX=COEFIRST+COEPOS16*8 : COEY=184+PLR*8 : gosub 8519
8522 return
8524 COEPOS=MPBL(PLR)-1 : gosub 8526 : if COEID=0 then GOM=483 else GOM=600
8525 screen$(back,COEFIRST+COEPOS16*8,184+PLR*8)=BLK$(GOM) : screen$(logic,COEFIRST+COEPOS16*8,184+PLR*8)=BLK$(GOM)
8526 COEFIRST=64+16*NBP : COEID=COEPOS mod 2 : if COEID=0 then COEPOS16=COEPOS else COEPOS16=COEPOS-1
8527 return
8530 inc VV(PLR) : inc MPBL(PLR)
8535 if FX=1 then music on : music freeze : volume 16 : envel 1,5000 : play 40,1 : play 41,1 : play 42,1 : play 43,1 : play 44,1 : play 45,1 : play 46,1 : play 47,1 : play 48,1 : play 49,1 : play 50,1 : play 51,1 : if TTBO=0 then FX2=10 else wait 5
8540 if TTBO=0 then gosub 8520
8550 return
8560 if DEMO=0 and NBP=2 and SC(PLR)>=SC((PLR+1) mod 2) and WIN<>PLR then 8565 else return
8565 if PLR=0 then YSC=184 : MSC=192 : goto 8580
8570 YSC=192 : MSC=184
8580 cls back,0,80,MSC to 96,MSC+7 : cls logic,0,80,MSC to 96,MSC+7
8585 if SC(PLR)=SC((PLR+1) mod 2) then return
8590 screen$(back,80,YSC)=BLK$(324) : screen$(logic,80,YSC)=BLK$(324)
8600 if FX=1 and WIN<>-1 then music on : music freeze : volume 16 : envel 1,10000 : play 40,3 : play 60,1 : FX2=20
8610 WIN=PLR : return
8630 gosub 10700 : if MUS=0 then MUS2=1
8640 gosub 11200
8650 locate 0,23 : pen 15 : centre "(any key to return)"
8825 gosub 10800 : X$=""
8830 while X$="" : X$=inkey$
8840 if joy>=16 then 8880
8850 if movon(4)=0 then gosub 11250
8860 gosub 10850 : if DEMO=1 then gosub 10700 : goto 2210
8870 wend
8880 gosub 10800 : goto 1320
8900 mode 0 : timer=0 : X$="" : clear key : fade 3 : wait 21 : cls : if MUS=0 then MUS2=1
8910 locate 0,3 : pen 15 : centre "TAKE YOUR JOYSTICK AND TRY"
8920 locate 0,23 : pen 15 : centre "(help to continue)"
8930 X=160 : Y=90 : sprite 1,160,90,2 : gosub 10720
8935 gosub 10800
8940 sprite 1,160,90,2 : while J=0 : J=joy : X$=inkey$ : if X$=" " then 9340 else if scancode=98 then 9230
8950 wend : if J>16 then J=16
8960 if J=1 or J=5 then C=10 else if J=9 then C=10 else 9030
8970 if J=1 or J=5 then 8980 else if J=9 then 8980 else YY=1
8980 if YY=0 then dec Y : if Y=70 then YY=1
8990 if J=9 or J=8 then inc X : C=10
9000 if J=5 or J=4 then dec X : C=19
9010 if YY=1 then inc Y : if Y=91 then YY=0 : goto 9220
9020 gosub 9190 : J=joy : goto 8970
9030 if J<>8 then 9060 else C=2
9040 inc C : if C=6 then C=3
9050 wait 2 : gosub 9190 : J=joy : if J=8 then 9040 else 9220
9060 if J<>4 then 9090 else C=11
9070 inc C : if C=15 then C=12
9080 wait 2 : gosub 9190 : J=joy : if J=4 then 9070 else 9220
9090 if J<>2 then 9110 else for C=6 to 7 : wait 2 : gosub 9190 : next C
9100 while J=2 : J=joy : wend : if J=10 or J=6 then 9110 else for C=7 to 6 step-1 : wait 2 : gosub 9190 : next C : goto 9220
9110 TEXTE=0 : if J<>10 then 9140 else C=7
9120 inc C : if C=10 then C=8
9130 wait 2 : gosub 9190 : if joy=10 then 9120 else 9220
9140 if J<>6 then 9170 else C=16
9150 inc C : if C=19 then C=17
9160 wait 2 : gosub 9190 : if joy=6 then 9150 else 9220
9170 for C=101 to 104 : wait 5 : gosub 9190 : next C
9180 for C=104 to 101 step-2 : wait 5 : gosub 9190 : next C : if joy>=16 then 9170 else 9220
9190 wait 1 : sprite 1,X,Y,C : if TEXTE=0 then TEXTE=1 : locate 0,15 : centre TXT$(J)
9200 return
9220 TEXTE=0 : X=160 : Y=90 : J=0 : locate 0,15 : print space$(100) : goto 8940
9230 X$="" : fade 3 : wait 21 : cls : MUS2=1
9232 sprite 1,160,172,127 : anim 1,"(127,8)(128,8)L" : anim on 1 : X=0 : Y=0
9234 locate 0,23 : pen 15 : centre "(any key to return)"
9236 gosub 11000
9240 ZTIM=0 : gosub 10720 : pen 2 : gosub 9341 : pen 15 : gosub 10800
9245 TXTFX=0
9246 while inkey$="" : if joy>=16 then gosub 9341 else if TXTFX=1 then 9262
9247 Y=rnd(18) : YTEST=Y
9248 if LINEXCLU(YTEST)=0 then Y=YTEST : goto 9250
9249 YTEST=(YTEST+1) mod 19 : if YTEST<>Y then 9248 else TXTFX=1 : goto 9262
9250 LINELENGHT=len(HLP$(Y)) : CENTERED=20-(LINELENGHT/2) : if LINELENGHT=1 then LINEXCLU(Y)=1 : goto 9262
9251 if LINELENGHT mod 2=1 then dec CENTERED
9252 X=rnd(LINELENGHT-1) : XTEST=X
9253 if scrn(XTEST+CENTERED,Y)<>0 and SCXY(XTEST+CENTERED,Y)=0 then HLPT$=mid$(HLP$(Y),XTEST+1,1) : X=XTEST+CENTERED : gosub 9346 : goto 9262
9254 XTEST=(XTEST+1) mod LINELENGHT : if XTEST<>X then 9253
9256 LINEXCLU(Y)=1
9262 wend
9340 gosub 10800 : goto 1320
9341 for I=0 to 18 : locate 0,I : centre HLP$(I) : next I
9345 return
9346 HERE$=chr$(scrn(X,Y))
9347 locate X,Y : print HLPT$; : SCXY(X,Y)=1 : return
9350 gosub 10700 : mode 1
9360 pen 3 : locate 0,2 : centre "SAM NASTY - V1.0" : pen 1
9370 ink 2 : box 220,6 to 419,32 : box 110,92 to 530,138
9380 locate 0,6 : centre "developped in STOS Basic (Mandarin software) in the early 90s,"
9385 locate 0,7 : centre "reworked/compiled in 2019 :)"
9390 locate 0,8 : centre " "
9395 locate 0,9 : centre " "
9400 locate 0,11 : centre "Level Editor, Extra levels, Infos, Forum :"
9405 pen 3
9410 locate 0,13 : centre "https://samnasty.mondes-electriques.fr"
9412 locate 0,14 : centre "https://en.tipeee.com/sam-nasty"
9415 locate 0,15 : centre "sam@mondes-electriques.fr"
9420 pen 1
9440 locate 0,18 : centre "Want to see more ?"
9445 locate 0,19 : centre "Support Sam development on Tipeee !"
9450 locate 0,20 : pen 3 : centre "Many thanks for your tip !" : pen 1
9460 locate 0,22 : centre "Jerome - april 5, 2019"
9470 palette $752,$740,$730,$765
9475 gosub 10800
9480 gosub 10750
9520 if MUS=0 then MUS2=1
9530 gosub 10800 : goto 1320
9540 music on : music freeze : move freeze : PTIMER=timer : anim freeze : X$=""
9570 UNPAUSE$=screen$(back,80,72 to 240,130) : screen$(logic,80,72)=PAUSE$ : if FX=1 then volume 16 : envel 1,5000 : play 75,4 : envel 1,3000 : play 65,6
9575 gosub 10800
9580 gosub 10750
9595 gosub 10800
9597 if FX=1 then volume 16 : envel 1,5000 : play 65,4 : envel 1,3000 : play 75,6
9600 screen$(logic,80,72)=UNPAUSE$ : X$="" : clear key : anim on : if NTS=1 then 9630 else for I=2 to NTS(NBPL) : if ST(NBPL,I)<9 then move on I
9610 next I : for I=13 to 15 : if x sprite(I)+y sprite(I)<>0 then move on I
9620 next I
9630 music on : timer=PTIMER : FX2=0 : return
9650 if LVL(PLR)=1 or LVL(PLR)>LVLMX then BONUSDONE=1 : return
9655 pen 15 : locate 10,2 : print " WELL DONE PLAYER"+str$(PLR+1)+"!"
9657 if NWLVL<>1 then BONUSDONE=1 : gosub 10720 : return
9660 locate 10,10 : if LVLTIME>0 then print " TIME BONUS" else print "   NO TIME BONUS"
9670 locate 10,12 : print " LIFE BONUS"
9680 locate 10,14 : print "LEVEL BONUS"
9690 locate 10,16 : print "TOTAL BONUS"
9695 pen 9 : locate 0,19 : centre "TOTAL"+str$(SC(PLR)) : pen 15
9697 if MPBL(PLR)>0 then for COEPOS=0 to MPBL(PLR)-1 : gosub 8526 : COEX=112+COEPOS16*8 : COEY=160 : gosub 8519 : next COEPOS
9700 if MUS=1 and FX>=1 then music freeze : volume 16
9710 screen$(back,16,149)=LVLPIC$ : zoom back,16,149,80,177 to logic,112,40,208,68
9720 LV2=LVL(PLR) if LV2>6 then LV2=6
9730 SND=0 : BONUSDONE=0 : TBO=0 : LVBO=0 : LBO=0 : LVB=0 : TTBO=0 : VIBO=MPBL(PLR)
9735 return
9740 if NWLVL<>1 or LVL(PLR)=1 or LVL(PLR)>LVLMX then return
9745 if TTBO=0 then gosub 10720 : flash 2,"(777,7)(555,7)(000,5)"
9750 dec LVLTIME : if LVLTIME<0 then 9780
9760 TBO=TBO+PTSTIME : locate 22,10 : print using "######";TBO
9770 TTBO=TTBO+PTSTIME : gosub 9840 : return
9780 dec VIBO : if VIBO<0 then 9810 else LVB=LVB+PTSLIVES
9790 locate 22,12 : print using "######";LVB
9800 TTBO=TTBO+PTSLIVES : gosub 9840 : return
9810 if LVBO<LV2*PTSLVL then LVBO=LVBO+PTSLVL else 9860
9820 locate 22,14 : print using "######";LVBO
9830 TTBO=TTBO+PTSLVL : gosub 9840 : return
9840 pen 2 : locate 22,16 : print using "######";TTBO : pen 15 : if FX>=1 then inc SND : if SND=97 then SND=96
9845 if FX>=1 then volume 16 : envel 1,5000 : play SND,1
9850 return
9860 BONUSDONE=1 : SC(PLR)=SC(PLR)+TTBO : pen 9 : locate 0,19 : centre "TOTAL"+str$(SC(PLR))
9862 VVLST=VV(PLR) : gosub 8510
9863 if VVLST=VV(PLR) then 9865
9864 COEPOS=MPBL(PLR)-1 : gosub 8526 : COEX=112+COEPOS16*8 : COEY=160 : gosub 8519 : goto 9862
9865 wait 30 : screen$(back,16,149)=LVLPIC2$ : zoom back,16,149,80,177 to logic,112,40,208,68
9867 wait 40 : music on : TTBO=0 : return
9870 gosub 10700
9871 pen 15 : locate 0,11 : centre "WELL DONE PLAYER"+str$(PLR+1)+" !"
9875 gosub 10720
9876 MPBL(PLR)=0 : if MUS=1 then music 1 : transpose 19 : tempo 100
9880 wait 200 : gosub 9890 : goto 2020
9890 if SC(PLR)<val(SCO$(9)) or NWLVL<>1 or SAM$<>"SAM" then return
9892 SCP=SC(PLR) : gosub 10700 : if MUS=0 then MUS2=1
9895 I=-1
9900 inc I : if SCP>=val(SCO$(I)) then if I=9 then 9920 else for J=9 to I+1 step-1 : NAM$(J)=NAM$(J-1) : SCO$(J)=SCO$(J-1) : next J : goto 9920
9910 goto 9900
9920 NAM$(I)="___" : SCO$(I)=mid$(str$(SCP),2,7) : SCP=I+8
9930 gosub 11200
9960 pen 15 : locate 0,21 : centre "CONGRATULATIONS !" : locate 0,23 : centre "ENTER YOUR INITIALS (joystick)"
9970 flash 13,"(557,5)(447,5)(227,5)(117,5)(227,5)(337,5)(447,5)" : X=65 : XCP=13 : goto 10020
9980 if joy=8 then inc X : if X=176 then X=65 else if X=91 then X=174
9990 if joy=4 then dec X : if X=173 then X=90 else if X=64 then X=175
10000 if joy>=16 then if X=174 or X=175 then 10040 else inc XCP : if XCP=16 then 10090 else 10080
10010 if joy=0 then 10030
10020 wait 3 : locate XCP,SCP : print chr$(X)
10030 if movon(4)=0 then gosub 11250
10035 goto 9980
10040 locate XCP,SCP : print " "
10050 if X=175 then 10070 else dec XCP : if XCP=12 then XCP=13
10060 goto 10080
10070 inc XCP : if XCP=16 then 10090
10080 gosub 10800 : goto 10030
10090 NAM$(SCP-8)=chr$(scrn(13,SCP))+chr$(scrn(14,SCP))+chr$(scrn(15,SCP))
10100 open out #1,"SCORES.SAM" : for I=0 to 9 : print #1,NAM$(I);",";SCO$(I) : next I : close #1
10110 return
10120 X$="" : clear key : gosub 10700 : home : pen 15 : locate 0,3 : centre "THE SLEAZY PAGE" : NWLVLLST=NWLVL : COD=1
10130 locate 0,10 : centre "BEGIN AT LEVEL"
10140 locate 0,23 : centre "(Space to return)" : gosub 10720 : NWLVL=1 : gosub 10800
10150 if joy=8 or joy=24 then inc NWLVL : if NWLVL=LVLMX+1 then NWLVL=LVLMX
10160 if joy=4 or joy=20 then dec NWLVL : if NWLVL=0 then NWLVL=1
10170 locate 0,12 : centre " "+str$(NWLVL)+" " : wait 5
10175 if inkey$<>" " then 10150
10180 clear key : gosub 10500 : LVL(0)=NWLVL : LVL(1)=NWLVL
10185 if NWLVL<>NWLVLLST then O=LVL(PLR) : gosub 11100
10190 goto 1320
10500 timer=0 : clear key : key speed 1,1
10510 while timer<200
10515 if timer<50 then 10540
10520 if joy>=16 then timer=200
10530 if inkey$<>"" then timer=200
10540 wend
10550 gosub 10800
10560 return
10600 open in #1,"SCORES.SAM"
10610 for I=0 to 9 : input #1,NAM$(I),SCO$(I) : next I
10620 close #1 : return
10700 fade 3 : wait 21 : sprite off : move off : flash off : cls
10710 return
10720 fade 5,COLLVL(0),COLLVL(1),COLLVL(2),COLLVL(3),COLLVL(4),COLLVL(5),COLLVL(6),COLLVL(7),COLLVL(8),COLLVL(9),COLLVL(10),COLLVL(11),COLLVL(12),COLLVL(13),COLLVL(14),COLLVL(15) : wait 35 : return
10730 fade 5,$0,$770,$760,$750,$740,$730,$720,$710,$700,$600,$500,$777,$666,$0,$0,$777 : wait 35 : return
10740 palette COLINTRO(0),COLINTRO(1),COLINTRO(2),COLINTRO(3),COLINTRO(4),COLINTRO(5),COLINTRO(6),COLINTRO(7),COLINTRO(8),COLINTRO(9),COLINTRO(10),COLINTRO(11),COLINTRO(12),COLINTRO(13),COLINTRO(14),COLINTRO(15)
10745 return
10750 if inkey$="" and joy<16 then 10750
10760 clear key
10770 return
10800 DELAY=0 : MXDELAY=200 : key speed 1,1 : while joy>=16 : wend
10810 if inkey$="" then inc DELAY else DELAY=0 : clear key
10820 if DELAY<MXDELAY then 10810
10830 clear key
10840 return
10850 if NWLVL=1 and timer>750 then DEMO=1 : NBP=1 : PLR=0 : DEMP=0
10860 return
10900 gosub 10800
10910 pop : gosub 8000
10920 DEMO=0 : MDEMTIM=0 : DEMP=0 : DEMTIM=0 : goto 1260
11000 for X=0 to 39 : for Y=0 to 18 : SCXY(X,Y)=0 : next Y : next X
11005 for Y=0 to 18 : LINEXCLU(Y)=0 : next Y
11010 return
11100 gosub 11300
11120 if BANK<>-1 then NBPL=BANK : return
11140 gosub 11400 : NBPL=BANK : gosub 6470 : return
11200 screen$(back,0,0)=LOD$ : ink 0 : bar 181,33 to 195,40 : bar 190,20 to 200,30 : screen copy back,0,0,160,38 to back,192,0
11202 screen copy back to logic
11203 for I=0 to 9
11210 pen I+1
11211 locate 13,I+8 : print NAM$(I);space$(11-len(SCO$(I)));SCO$(I)
11212 next I
11220 gosub 11250
11231 anim 2,"(53,5)(54,5)(55,5)(54,5)L"
11232 anim 3,"(12,5)(13,5)(14,5)L"
11233 anim 1,"(3,5)(4,5)(5,5)L"
11234 anim 4,"(53,5)(54,5)(55,5)(54,5)L"
11235 anim on
11237 gosub 10730
11238 flash 13,"(557,10)(447,10)(227,10)(117,10)(227,10)(337,10)(447,10)" : flash 1,"(770,10)(550,1)(330,1)(000,10)(330,1)(550,1)"
11240 return
11250 sprite 1,96,60 : sprite 2,222,60
11252 sprite 4,96,144 : sprite 3,222,144
11253 move x 1,"(2,3,42)" : move y 2,"(2,2,42)"
11254 move x 3,"(2,-3,42)" : move y 4,"(2,-2,42)"
11255 move on : return
11300 BANK=-1
11310 for I=0 to BANKCOUNT
11320 if LVLBANK(I)=LVL(PLR) then BANK=I : I=BANKCOUNT
11330 next I
11340 return
11400 BANK=-1
11410 for I=0 to BANKCOUNT
11420 if LVLBANK(I)=-1 then BANK=I : I=BANKCOUNT
11430 next I
11440 if BANK<>-1 then return
11460 BANK=1 : return
11500 if NWLVL<>1 or LVL(PLR)<>HINTATLVL then return
11510 locate 0,10 : pen 14 : centre COD$ : locate 0,12 : centre "(DURING THE MENU SCREEN...)" : pen 15
11515 gosub 10720 : colour 14,$755 : HINTATLVL=-1
11520 wait 200 : gosub 10700 : return
11800 BANK=-1
11810 for I=0 to BANKCOUNT
11820 if LVLBANK(I)=THISLVL then BANK=I : I=BANKCOUNT
11830 next I
11840 return
11900 screen$(logic,0,160)=COE$
11915 screen$(logic,0,168)=COE$
11920 scroll 4 : scroll 10
11925 COEUR$(0)=screen$(logic,0,160 to 16,168)
11930 COEUR$(1)=screen$(logic,0,168 to 16,176)
11935 return
11940 cls logic : cls back
11945 screen$(logic,16,168)=BLK$(483)
11950 scroll 9
11955 BLK$(600)=screen$(logic,16,168 to 32,176)
11960 return
12000 if timer-TMRDSPL<50 then return
12020 LVLTIME=LVLMAXTIME-(timer/50) : if LVLTIME<0 then pen 9 else pen 15
12030 locate 36,23 : print using "###";LVLTIME; : TMRDSPL=timer : pen 15
12040 return
12200 if movon(2)=1 then return
12205 sprite 1,-10,198,125 : anim 1,"(3,4)(4,4)(5,4)L"
12210 sprite 2,-60,198,125 : anim 2,SPR$(0,2)
12220 sprite 3,-100,198,125 : anim 3,SPR$(1,2) : anim on
12250 move x 1,"(2,2,170)(2,-340,1)L"
12260 move x 2,"(3,2,200)(3,-400,1)L"
12270 move x 3,"(1,1,440)(2,-440,1)L" : move on
12280 return
12300 HLP$(0)=" " : HLP$(1)="KEYS ALLOW YOU TO OPEN SOME OF THE"
12301 HLP$(2)="DOORS. HANDLES ALLOW TO OPEN DOORS,"
12302 HLP$(3)="MOVE THINGS,DISCOVER SECRET"
12303 HLP$(4)="PASSAGES, OR SOMETIMES TO BE KILLED."
12304 HLP$(5)=" "
12305 HLP$(6)="TIME LEFT BONUS"+str$(PTSTIME)+" PTS/SEC"
12306 HLP$(7)="LEVEL BONUS"+str$(PTSLVL)+" PTS"
12307 HLP$(8)="LIVES LEFT BONUS"+str$(PTSLIVES)+" PTS"
12308 HLP$(9)=" "
12309 HLP$(10)="EACH COIN"+str$(PTSCOIN)+" PTS"
12310 HLP$(11)="EACH WREATH"+str$(PTSWREATH)+" PTS"
12311 HLP$(12)="HIT A GUARD"+str$(PTSGUARD)+" PTS"
12312 HLP$(13)=" "
12313 HLP$(14)="EXTRA LIFE EACH"+str$(PTSEXTRALIFE)+" PTS."
12314 HLP$(15)=" "
12315 HLP$(16)="THERE IS OTHER OBJECTS,LIKE BOTTLES"
12316 HLP$(17)="OF WINE,OR EXTRA LIFES THAT YOU'LL"
12317 HLP$(18)="SOON MEET.OPEN YOUR EYES..."
12318 HLP$(19)=" "
12319 return
20100 default : key speed 6,6 : return
