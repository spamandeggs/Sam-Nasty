1 rem  Sam Nasty - a board game for Atari ST.
2 rem  copyright (c) 1995,2019,2020, jerome mahieux
3 rem  This file is part of Sam Nasty.
4 rem 
5 rem  Sam Nasty is free software: you can redistribute it and/or modify
6 rem  it under the terms of the GNU General Public License as published by
7 rem  the Free Software Foundation, either version 3 of the License, or
8 rem  (at your option) any later version.
9 rem 
10 rem Sam Nasty is distributed in the hope that it will be useful,
11 rem but WITHOUT ANY WARRANTY; without even the implied warranty of
12 rem MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
13 rem GNU General Public License for more details.
14 rem 
15 rem You should have received a copy of the GNU General Public License
16 rem along with Sam Nasty.  If not, see <https://www.gnu.org/licenses/>.
17 rem 
18 rem GPL-3.0-or-later

50 clear
51 COMPILED=0 : rem COMPDELAY=1 : DEVEL=0 : TRACE=0
54 rem BLOCK LINE DEFINITIONS. edit if renum
55 GO_EXIT=20000


69 rem ##########################
70 on error goto GO_EXIT
75 if COMPILED=1 then break off

89 BGD=365 : PTIT=11 : MANETS=357 : FMANETS=361 : OPTN=110
90 mode 0 : curs off : reset zone : hide : colour 14,$0 : key off : click off : fade 1

91 rem SUB_SCROLLS_DEF
92 def scroll 1,0,0 to 320,184,8,0
93 def scroll 8,0,0 to 320,184,-8,0
94 def scroll 3,0,8*PTIT to 320,8*PTIT*2,-8,0
95 rem specific editor
96 def scroll 4,0,16 to 320,32,-8,0
97 def scroll 5,0,184 to 320,200,-8,0
98 def scroll 6,0,0 to 320,184,4,4
99 def scroll 2,0,0 to 320,184,-4,-4

100 rem *****************
110 dim BLK$(600),IC$(50),MP(3,40,22)
120 dim SP(8),XM(8),YM(8),AN$(8,10),MOV$(8,10),SS(8),FLP(8),FL(8),ST(9),AL(8),AL2(8),SBLK(7,2),RTRP$(8)
130 dim ZNE(110),X1Z(110),X2Z(110),Y1Z(110),Y2Z(110),DGEM$(8,3)
140 dim ACT$(80),NZID(10),NZIO(10),NZIF(10),CTIM(10),LIN$(1),ZNE2(80)
150 SP(1)=2 : NTS=1 : XD=148 : YD=103
180 for I=0 to 10 : NZIO(I)=1 : NZIF(I)=1 : next I
190 for I=0 to 8 : SS(I)=-1 : next I

240 MVG$=" ( 3,-2," : MVD$=" ( 3, 2," : MVN$=" (10, 0,"

251 rem SPRITES ANIMES DEFS
253 dim SPR$(8,7)
255 rem circular saw ceiling (3)
260 SPR$(3,0)="(88,0)"
261 SPR$(3,1)="(88,4)(89,4)L"
265 rem circular saw floor (2)
270 SPR$(2,0)="(86,0)"
271 SPR$(2,1)="(86,4)(87,4)L"
275 rem circular saw wall right (5)
276 SPR$(5,0)="(97,0)"
277 SPR$(5,1)="(97,4)(98,4)L"
280 rem circular saw wall left (6)
281 SPR$(6,0)="(99,0)"
282 SPR$(6,1)="(99,4)(100,4)L"
290 rem watchdog (1)
291 SPR$(1,0)="(79,4)(80,4)L"
292 SPR$(1,1)="(75,4)(76,4)L"
293 SPR$(1,2)="(77,6)(78,6)L"
294 SPR$(1,3)="(81,6)(82,6)L"
295 SPR$(1,4)="(121,6)(122,6)L"
296 SPR$(1,5)="(123,6)(124,6)L"
297 SPR$(1,6)="(117,100 )(118,3)"
298 SPR$(1,7)="(119,100 )(120,3)"
320 rem guard (0)
321 SPR$(0,0)="(25,0)"
322 SPR$(0,1)="(22,0)"
323 SPR$(0,2)="(22,4)(23,4)(24,4)L"
324 SPR$(0,3)="(25,4)(26,4)(27,4)L"
325 SPR$(0,4)="(72,4)(73,4)(74,4)(73,4)L"
350 rem elevator
351 SPR$(4,0)="(70,0)"
359 rem BRICKS CREATION
360 reserve as screen 2 : reserve as data 3,16613
362 bload "SAM1.BLK",3 : cls back : unpack 3,2
364 erase 3
370 get palette (back) : wait 50 : dim COLLVL(15) : for I=0 to 15 : COLLVL(I)=colour(I) : colour I,0 : next I
380 screen copy 2,0,0,320,8*PTIT to logic,0,0
390 screen copy logic,0,0,320,8*PTIT to logic,0,8*PTIT
400 scroll 3 : screen copy logic to back
410 ink 0 : for X=1 to 40 step 2 : bar X*8,0 to X*8+7,8*PTIT*2 : next X
420 DEP=0 : ARR=7 : XDEP=0 : XARR=28
425 CUT_LOOP=430 : CUT_END=575 : rem edit if renum
430 for Y=DEP*8 to ARR*8 step 8 : for X=(XDEP*8)+1 to XARR*8 step 16
440 inc IND : BLK$(IND)=screen$(back,X,Y to X+15,Y+8)
450 inc IND : BLK$(IND)=screen$(back,X,Y+8*PTIT to X+15,Y+8+8*PTIT) : next X : next Y
455 if CISO=15 then goto CUT_END
460 if CISO=0 then DEP=9 : ARR=10 : XDEP=0 : XARR=26 : CISO=1 : goto CUT_LOOP
465 if CISO=1 then BLK$(328)=BLK$(263) : BLK$(329)=BLK$(264) : BLK$(263)=BLK$(273) : BLK$(264)=BLK$(274)
470 if CISO=1 then IND=IND-4 : DEP=0 : ARR=1 : XDEP=29 : XARR=36 : CISO=2 : goto CUT_LOOP
480 if CISO=2 then IND=IND-3 : DEP=4 : ARR=4 : XDEP=31 : XARR=40 : CISO=3 : goto CUT_LOOP
490 if CISO=3 then DEP=5 : ARR=6 : XDEP=29 : XARR=40 : CISO=4 : goto CUT_LOOP
500 if CISO=4 then DEP=9 : ARR=9 : XDEP=31 : XARR=38 : CISO=11 : goto CUT_LOOP
505 if CISO=11 then IND=IND+2 : DEP=8 : ARR=8 : XDEP=0 : XARR=36 : CISO=12 : goto CUT_LOOP
507 if CISO=12 then DEP=7 : ARR=7 : XDEP=29 : XARR=40 : CISO=5 : goto CUT_LOOP
510 if CISO=5 then DEP=0 : ARR=0 : XDEP=36 : XARR=40 : CISO=6 : goto CUT_LOOP
520 if CISO=6 then DEP=1 : ARR=1 : XDEP=35 : XARR=40 : CISO=7 : goto CUT_LOOP
530 if CISO=7 then DEP=2 : ARR=3 : XDEP=29 : XARR=40 : CISO=8 : goto CUT_LOOP
540 if CISO=8 then DEP=4 : ARR=4 : XDEP=29 : XARR=30 : CISO=9 : goto CUT_LOOP
550 if CISO=9 then DEP=9 : ARR=9 : XDEP=29 : XARR=29 : CISO=10 : goto CUT_LOOP
552 if CISO=10 then DEP=9 : ARR=9 : XDEP=39 : XARR=40 : CISO=13 : goto CUT_LOOP
554 if CISO=13 then DEP=9 : ARR=9 : XDEP=34 : XARR=34 : CISO=17 : goto CUT_LOOP
555 BLK$(365)=BLK$(291)
560 for I=1 to 30 : inc IND : BLK$(IND)=BLK$(56) : next I
565 swap BLK$(323),BLK$(320) : swap BLK$(328),BLK$(325) : swap BLK$(329),BLK$(326) : swap BLK$(326),BLK$(327)
567 for I=365 to 368 : BLK$(I+100)=BLK$(I) : BLK$(I)=BLK$(56) : next I
568 for I=369 to 415 : BLK$(I+101)=BLK$(I) : if I<379 or I>380 then BLK$(I)=BLK$(56)
569 next I
570 IND=364 : DEP=10 : ARR=10 : XDEP=26 : XARR=40 : CISO=15 : goto CUT_LOOP
572 rem CUT_END
575 BLK$(469)=BLK$(319) : BLK$(379)=BLK$(416) : BLK$(380)=BLK$(417)


580 rem ****************
590 A=0 : for X=1 to 320 step 16 : inc A : IC$(A)=screen$(2,X,184 to X+15,200) : next X
600 inc A : IC$(A)=screen$(2,144,168 to 192,184)
610 inc A : IC$(A)=screen$(2,96,168 to 144,184)
620 inc A
630 rem ****************
640 ink 0 : bar 0,0 to 319,PTIT*8+8 : screen copy 2,0,88,320,104 to logic,0,0
650 screen copy logic,0,0,320,16 to logic,0,16
660 scroll 4 : screen copy logic to back
670 ink 0 : for X=1 to 40 step 2 : bar X*8,0 to X*8+7,32 : next X
680 for X=1 to 144 step 16
690 inc A : IC$(A)=screen$(logic,X,0 to X+15,16)
700 inc A : IC$(A)=screen$(logic,X,16 to X+15,32)
710 next X
720 rem ***********************************
730 rem
740 rem
750 rem
760 rem
770 rem
780 remfade 1 to 2 : for A=200 to 600 : screen$(logic,100,100)=BLK$(A) : locate 0,10 : print A : wait key : bar 100,100 to 108,108 : next A
790 cls back : cls logic : CH1=19 : CH2=148 : show : goto 1000
800 rem *******************************************************************
810 rem *             CONSTRUCTION KIT                                    *
820 rem *******************************************************************
830 hide : cls logic,0,0,0 to 320,184 : cls back,0,0,0 to 320,184
840 auto back off : for NV=0 to 1
850 for Y=0 to 22 : for X=1 to 39 step 2 : if MP(NV,X,Y)=0 then 870
860 screen$(logic,X*8,Y*8)=BLK$(MP(NV,X,Y))
870 next X : next Y : scroll 1 : ink 0 : bar 0,0 to 7,183
880 for Y=0 to 22 : for X=0 to 40 step 2 : if MP(NV,X,Y)=0 then 900
890 screen$(logic,X*8,Y*8)=BLK$(MP(NV,X,Y))
900 next X : next Y : LIN$(NV)=screen$(logic,0,0 to 16,184) : cls logic,0,0,0 to 16,184 : scroll 8 : next NV
910 scroll 1 : auto back on 
920 for I=0 to 1 : screen$(logic,0,0)=LIN$(I) : next I : screen copy logic to back
990 show : return 
1000 while joy>=16 : wend : fade 5 to 2 : reset zone : gosub 5260 : for I=0 to 5 : screen$(back,I*16,184)=IC$(9+I) : set zone I+1,I*16,184 to (I+1)*16,199 : next I : screen$(back,96,184)=IC$(18) : set zone 7,96,184 to 112,199 : screen copy back to logic
1010 rem ******************************
1020 rem *     MAIN                   *
1030 rem ******************************
1040 ZM=zone(0) : if joy>=16 then ZM=1 : goto 1060 : else if mouse key=1 and ZM<>0 then 1060
1045 K$=inkey$ : if COMPILED=0 and asc(K$)=27 then goto GO_EXIT
1050 goto 1040
1060 clear key : reset zone : gosub 4810 : ink 0 : bar 0,184 to 319,199 : on ZM goto 5990,2670,2670,3170,1090,9020
1070 gosub 830 : goto 1000
1080 rem ************ ZONE ************************************************
1090 cls back,0,0,184 to 304,200 : gosub 4830 : NV=2 : ZZ=1 : X=0 : VAR=1 : pen 15
1100 AA=16 : BB=48 : gosub 4820 : if LK=0 then screen$(back,64,184)=IC$(25) : screen$(back,80,184)=IC$(30) : screen$(back,96,184)=IC$(3)
1110 if LK=1 then AA=64 : BB=96 : gosub 4820 : screen$(back,112,184)=IC$(13)
1120 screen copy back to logic
1130 set zone 2,16,184 to 24,199 : set zone 3,48,184 to 56,199 : if LK=0 then set zone 4,64,184 to 72,199 : set zone 5,80,184 to 88,199 : set zone 6,96,184 to 112,199
1140 if LK=1 then set zone 4,64,184 to 72,199 : set zone 5,96,184 to 104,199 : set zone 6,112,184 to 128,199
1150 rem ****************
1160 locate 3,24 : print using "###";ZZ;
1170 if LK=0 then 1220 else locate 9,24 : print using "###";ZNE(ZZ);
1180 if RDY=0 then if ZNE(ZZ)>=30 and ZNE(ZZ)<=39 then gosub 2520
1190 if RDY2=0 then if ZNE(ZZ)>=40 and ZNE(ZZ)<=59 then gosub 2550
1200 if RDY3=0 then if ZNE(ZZ)>=80 and ZNE(ZZ)<=110 then gosub 2600
1210 if RDY4=0 then if ZNE(ZZ)>=60 and ZNE(ZZ)<=79 then gosub 2550
1220 gosub 2500
1230 rem ****************
1240 Z=zone(0) : if Z<>0 and mouse key<>0 then 1280
1250 if mouse key=3 and LK=1 then if ZNE(ZZ)>=30 and ZNE(ZZ)<=39 then bell : X=ZNE(ZZ)-30 : goto 1810
1260 K$=inkey$
1261 if K$=" " then K$="" : clear key : gosub 830
1262 if K$="2" or K$="3" then if ZNE(ZZ)>=40 and ZNE(ZZ)<=59 then ZNE2(ZNE(ZZ)-30)=val(K$) : bell : clear key : K$=""
1263 if K$="0" then if ZNE(ZZ)>=40 and ZNE(ZZ)<=59 then ZNE2(ZNE(ZZ)-30)=val(K$) : bell : clear key : K$=""

1265 clear key : K$=""
1270 goto 1240
1280 if mouse key=1 then gosub 4810
1290 if Z=1 then sprite off : RDY=0 : RDY2=0 : RDY3=0 : RDY4=0 : goto 1000
1300 if Z<>6 or NTZ=0 then 1320 else if LK=0 then LK=1 else LK=0
1310 RDY=0 : RDY2=0 : RDY3=0 : sprite off : reset zone : Z=5 : goto 1090
1320 if LK=1 then 1370
1330 if Z=2 then sprite off : dec ZZ : if ZZ=0 then ZZ=NTZ+1
1340 if Z=3 then sprite off : inc ZZ : if ZZ=NTZ+2 then ZZ=1
1350 if Z=4 then 2110
1360 if Z=5 then gosub 2170 else 1160
1370 rem *** main selection des effets/zones ***
1380 rem
1390 if Z=2 then sprite off : dec ZZ : if ZZ=0 then ZZ=NTZ
1400 if Z=3 then sprite off : inc ZZ : if ZZ=NTZ+1 then ZZ=1
1410 if Z=4 then for I=2 to NTS : sprite off I : next I : KIL=0 : dec ZNE(ZZ) : if ZNE(ZZ)=0 then ZNE(ZZ)=OPTN
1420 if Z=5 then for I=2 to NTS : sprite off I : next I : KIL=0 : inc ZNE(ZZ) : if ZNE(ZZ)=OPTN+1 then ZNE(ZZ)=1
1430 if ZNE(ZZ)>=30 and ZNE(ZZ)<=39 then 1690
1440 if ZNE(ZZ)>=80 and ZNE(ZZ)<=110 then 1480
1450 if ZNE(ZZ)>=40 and ZNE(ZZ)<=79 then 1940
1460 if ZNE(ZZ)<=29 then if RDY=1 or RDY3=1 then for I=10 to 15 : reset zone I : next I : cls back,0,128,184 to 304,200 : cls logic,0,128,184 to 304,200 : RDY3=0 : RDY=0
1470 goto 1160
1480 rem *** selection effet  pour zones/cond. ***
1490 X=ZNE(ZZ)-30 : if RDY3=0 then gosub 2600
1500 if Z=10 then dec VAR2 : if VAR2=-1 then VAR2=4
1510 if Z=11 then inc VAR2 : if VAR2=5 then VAR2=0
1520 if Z<>13 then 1570 else if VAR2<>0 then bell : ACT$(X)=ACT$(X)+str$(ZZ)+"/"+str$(VAR2)+"/"+str$(ZNE(ZZ))+"/" : if VAR2<>2 then 2420 else 1570
1530 if NTS=1 then 1570 else bell : gosub 2330
1540 Z=zone(0) : if mouse key=1 then gosub 4810 : if Z>=18 then 1620
1550 if mouse key=2 then bell : sprite off : for I=18 to NTS+18 : reset zone I+NTS : next I : while mouse key=2 : wend : goto 1570
1560 goto 1540
1570 if Z=12 then shoot : ACT$(X)=""
1580 if Z=14 then if ZNE2(X)=1 then ZNE2(X)=0 else ZNE2(X)=1 : bell 
1590 gosub 2630
1600 goto 1150
1610 rem *** selection sprite pour zones/Act$ ***
1620 X=ZNE(ZZ)-30 : FLC=Z-18 : AC3$=ACT$(X)
1630 FL2=val(AC3$) : gosub 10320 : FL3=val(AC3$) : gosub 10320 : if FL3<>0 then gosub 10320 : if FL3=2 then 1650 else for I=1 to 8 : gosub 10320 : next I : goto 1650
1640 if FLC=FL2 then FOUY=instr(ACT$(X),str$(FLC)+"/0*/") : ACT$(X)=mid$(ACT$(X),1,FOUY-1)+AC3$ : ZERT=1
1650 if AC3$<>"" then 1630
1660 if ZERT=0 then ACT$(X)=ACT$(X)+(str$(FLC)+"/0*/") : SSS=SP(FLC)
1670 ZERT=0 : X=0 : FL3=0 : gosub 2330 : goto 1540
1680 rem *** cr‚ation zone intermittente(CZI) ***
1690 X=ZNE(ZZ)-30 : if RDY=1 then 1700 else gosub 2520
1700 if Z=10 then dec NZID(X) : if NZID(X)=-1 then NZID(X)=100
1710 if Z=11 then inc NZID(X) : if NZID(X)=101 then NZID(X)=0
1720 if Z=12 then dec NZIO(X) : if NZIO(X)=0 then NZIO(X)=100
1730 if Z=13 then inc NZIO(X) : if NZIO(X)=101 then NZIO(X)=1
1740 if Z=14 then dec NZIF(X) : if NZIF(X)=0 then NZIF(X)=100
1750 if Z=15 then inc NZIF(X) : if NZIF(X)=101 then NZIF(X)=1
1760 locate 17,24 : print using "###";NZID(X); : locate 23,24 : print using "###";NZIO(X); : locate 29,24 : print using "###";NZIF(X); : locate 35,24 : print using "#";ZNE2(X);
1770 goto 1160
1780 I=0 : CZI=-1
1790 inc CZI : if ZNE2(CZI)<>0 and ACT$(CZI)<>"" then 1790 else dec CZI
1800 goto 1160
1810 while mouse key<>0 : wend : pen 10 : PZNE=ZNE2(X) : goto 1860
1820 Z=zone(0) : if mouse key=2 then pen 15 : if ZNE2(X)<>2 then 2420 else if ZNE2(X)<>0 then 1880 else ACT$(X)="" : CZI=X-1 : goto 1760
1830 if mouse key<>1 then 1820 else gosub 4810
1840 if Z=16 then dec ZNE2(X) : if ZNE2(X)=-1 then ZNE2(X)=4
1850 if Z=17 then inc ZNE2(X) : if ZNE2(X)=5 then ZNE2(X)=0
1860 locate 35,24 : print using "#";ZNE2(X);
1870 goto 1820
1880 if PZNE<>2 then ACT$(X)="" : PZNE=0
1890 FOUY=instr(ACT$(X),str$(ZZ)) : if FOUY=0 then ACT$(X)=ACT$(X)+str$(ZZ)+"/"
1900 for I=0 to CZI : if I=X then 1920
1910 if ZNE2(I)=2 then FOUY=instr(ACT$(I),str$(ZZ)) : if FOUY<>0 then ACT$(I)=ACT$(I)-(str$(ZZ)+"/")
1920 next I : goto 1780
1930 rem *** zones conditionn‚es au bouton ***
1940 X=ZNE(ZZ)-30 : if RDY2=0 and RDY4=0 then gosub 2550
1950 if KIL=0 then gosub 2640
1960 if Z<>10 then 2010 else PVAR=VAR
1970 dec VAR : if VAR=0 then VAR=NTZ
1980 gosub 2590
1990 if ZNE(VAR)>=80 and ZNE(VAR)<=110 then bell else if VAR<>PVAR then 1970 else 1150
2000 swap ZZ,VAR : gosub 2500 : swap ZZ,VAR : wait 5
2010 if Z<>11 then 2060 else PVAR=VAR
2020 inc VAR : if VAR=NTZ+1 then VAR=1
2030 gosub 2590
2040 if ZNE(VAR)>=80 and ZNE(VAR)<=110 then bell else if VAR<>PVAR then 2020 else 1150
2050 swap ZZ,VAR : gosub 2500 : swap ZZ,VAR : wait 5
2060 if Z=13 and ZNE(VAR)>=80 then bell : ACT$(X)=ACT$(X)+ACT$(ZNE(VAR)-30) : gosub 2640
2070 if Z=12 then shoot : ACT$(X)="" : gosub 2640
2080 if Z=15 then if ZNE2(X)=1 then ZNE2(X)=0 else ZNE2(X)=1 : bell 
2090 goto 1150
2100 rem *** effacement d'une zone ***
2110 if ZNE(ZZ)<>0 then sprite off else 1240
2120 if ZNE(ZZ)>=30 then ACT$(ZNE(ZZ)-30)=""
2130 ZNE(ZZ)=0 : X1Z(ZZ)=1 : Y1Z(ZZ)=1 : X2Z(ZZ)=2 : Y2Z(ZZ)=2
2150 goto 1160
2160 rem *** creation d'une zone ***
2170 if ZNE(ZZ)<>0 then dec NTZ else ZNE(ZZ)=1
2180 sprite off : hide : Q=14
2190 if x mouse=319 then XB=319 else XB=(x mouse/8)*8
2200 YB=(y mouse/8)*8
2205 if mouse key=2 then XB=(x mouse/4)*4 : YB=(y mouse/4)*4
2210 sprite Q,XB,YB,32
2215 if mouse key=1 or mouse key=3 then while mouse key<>0 : wend : goto 2230
2220 goto 2190
2230 if Q=14 then X1Z(ZZ)=XB : Y1Z(ZZ)=YB : Q=15 : goto 2190
2240 X2Z(ZZ)=XB : Y2Z(ZZ)=YB : show 
2250 if X2Z(ZZ)<X1Z(ZZ) then swap X2Z(ZZ),X1Z(ZZ)
2260 if Y2Z(ZZ)<Y1Z(ZZ) then swap Y2Z(ZZ),Y1Z(ZZ)
2270 if X1Z(ZZ)<>X2Z(ZZ) then 2290 else if X1Z(ZZ)>0 then X2Z(ZZ)=X1Z(ZZ) : dec X1Z(ZZ) : goto 2290
2280 X2Z(ZZ)=X1Z(ZZ)+1
2290 if Y1Z(ZZ)<>Y2Z(ZZ) then 2310 else if Y1Z(ZZ)>0 then Y2Z(ZZ)=Y1Z(ZZ) : dec Y1Z(ZZ) : goto 2310
2300 Y2Z(ZZ)=Y1Z(ZZ)+1
2310 sprite 14,X1Z(ZZ),Y1Z(ZZ),94 : sprite 15,X2Z(ZZ),Y2Z(ZZ),94 : inc NTZ : return 
2320 rem *** creation d'un effet sprite(sub control) ***
2330 if NTS=1 then 2400 else FLC=0 : for I=0 to NTS-2 : FL(I)=0 : next I : AC3$=ACT$(ZNE(ZZ)-30) : if AC3$="" then 2370
2340 FL2=val(AC3$) : gosub 10320 : FL3=val(AC3$) : gosub 10320 : if FL3<>0 then gosub 10320 : if FL3=2 then 2360 else for I=1 to 8 : gosub 10320 : next I : goto 2360
2350 FL(FLC)=FL2 : if AC3$="" then 2370 else inc FLC : goto 2340
2360 if AC3$<>"" then 2340
2370 for I=2 to NTS : SSS=32 : for J=0 to FLC : if I=FL(J) then SSS=SP(FL(J)) : J=FLC+1
2380 next J
2390 sprite I,XM(I),YM(I),SSS : set zone 18+I,XM(I)-3,YM(I)-15 to XM(I)+3,YM(I) : next I
2400 return 
2410 rem *** creation de briques alternatives ***
2420 X=ZNE(ZZ)-30 : PZNE=0 : bell : TAY$=input$(1) : FOUY=0 : if ZNE(ZZ)<80 or ZNE(ZZ)>110 then ACT$(X)=str$(ZZ)+"/"
2430 if X2Z(ZZ)-X1Z(ZZ)<Y2Z(ZZ)-Y1Z(ZZ) then ACT$(X)=ACT$(X)+str$((Y2Z(ZZ)-Y1Z(ZZ))/8*-1)+"/" else ACT$(X)=ACT$(X)+str$((X2Z(ZZ)-X1Z(ZZ))/8)+"/"
2440 ACT$(X)=ACT$(X)+" "+TAY$+"/"+str$(X1Z(ZZ))+"/"+str$(Y1Z(ZZ))+"/"
2450 XB=(x mouse/8)*8+4 : YB=(y mouse/8)*8+4 : sprite 10,XB,YB,32 : if mouse key<>1 then 2450
2460 gosub 4810
2470 ACT$(X)=ACT$(X)+str$(XB-4)+"/"+str$(YB-4)+"/" : bell : inc FOUY : if FOUY=1 then XB2=XB : YB2=YB : goto 2450
2480 XB=0 : YB=0 : XB2=0 : YB2=0 : FOUY=0 : sprite off 10 : goto 1780
2490 rem ******** panel subs *********
2500 if X1Z(ZZ)+Y1Z(ZZ)+X2Z(ZZ)+Y2Z(ZZ)<>0 then sprite 14,X1Z(ZZ),Y1Z(ZZ),32 : sprite 15,X2Z(ZZ),Y2Z(ZZ),32 else sprite off 
2510 return 
2520 for I=10 to 15 : reset zone I : next I : cls back,0,128,184 to 304,200 : cls logic,0,128,184 to 304,200 : RDY2=0 : RDY3=0 : RDY4=0
2530 for I=0 to 6 step 2 : set zone 10+I,128+(I/2)*48,184 to 136+(I/2)*48,199 : set zone 11+I,160+(I/2)*48,184 to 168+(I/2)*48,199 : next I : AA=128 : BB=160 : gosub 4820 : AA=176 : BB=208 : gosub 4820 : AA=224 : BB=256 : gosub 4820 : AA=272 : BB=288 : gosub 4820 : RDY=1 : screen copy back to logic : set zone 17,288,184 to 296,199
2540 locate 17,24 : print using "###";NZID(X); : locate 23,24 : print using "###";NZIO(X); : locate 29,24 : print using "###";NZIF(X); : locate 35,24 : print using "#";ZNE2(X); : return 
2550 for I=10 to 15 : reset zone I : next I : cls back,0,128,184 to 304,200 : cls logic,0,128,184 to 304,200 : RDY=0 : RDY3=0 : RDY4=0
2560 for I=0 to 4 step 2 : set zone 10+I,128+(I/2)*48,184 to 136+(I/2)*48,199 : set zone 11+I,160+(I/2)*48,184 to 168+(I/2)*48,199 : next I : reset zone 15 : AA=128 : BB=160 : gosub 4820 : screen$(back,208,184)=IC$(30) : RDY2=1
2570 if ZNE(ZZ)>=60 and ZNE(ZZ)<=79 then set zone 15,192,184 to 200,199 : screen$(back,192,184)=IC$(29) : RDY4=1 : RDY2=0
2580 screen copy back to logic
2590 locate 17,24 : print using "###";VAR; : return 
2600 for I=10 to 15 : reset zone I : next I : cls back,0,128,184 to 304,200 : cls logic,0,128,184 to 304,200
2610 for I=0 to 4 step 2 : set zone 10+I,128+(I/2)*48,184 to 136+(I/2)*48,199 : set zone 11+I,160+(I/2)*48,184 to 168+(I/2)*48,199 : next I : reset zone 15 : AA=128 : BB=160 : gosub 4820 : screen$(back,176,184)=IC$(25) : screen$(back,208,184)=IC$(30) : screen$(back,224,184)=IC$(29) : RDY3=1 : RDY2=0 : RDY=0 : RDY4=0
2620 screen copy back to logic
2630 locate 17,24 : print using "###";VAR2; : return 
2640 if ACT$(X)<>"" then set zone 12,176,184 to 184,199 : screen$(back,176,184)=IC$(25) : screen$(logic,176,184)=IC$(25) : goto 2660
2650 reset zone 12 : cls back,0,176,184 to 192,200 : cls logic,0,176,184 to 192,200
2660 KIL=1 : return 
2670 rem ************ BRIQUE ************************************************
2680 SAUT=8 : gosub 4990
2690 NV=0 : DC=1 : FC=380 : DF=465 : FF=516
2700 P=9 : P2=369
2710 gosub 4910 : gosub 4930 : gosub 4950
2720 rem -------------------------------
2730 Z=zone(0) : if Z<>0 and mouse key<>0 then 3000
2740 K$=inkey$ : if K$=" " then gosub 830
2750 if y mouse>=184 then 2730
2760 rem -------------------------------
2770 hide : SAUT=8 : if CH1>=351 and CH1<=364 then SAUT=16
2775 if CH1>=321 and CH1<=326 then SAUT=16 else if CH1=380 then SAUT=16
2780 X=(x mouse/SAUT)*SAUT : Y=(y mouse/8)*8 : sprite 1,X,Y,1
2790 if Y>=184 then 2990
2800 if mouse key=0 then 2780 else if Y>=184 then 2990
2810 if GME=1 then bar X,Y to X+7,Y+7 : CH2=0 : CH1=0
2820 if PRCT=1 or VRCT=1 then bell 
2830 if Y>=184 then 2990 else if CH1=CH2 then bar X,Y to X+7,Y+7
2840 if GME=0 then put sprite 1
2850 if CH2<>-1 then MP(0,X/8,Y/8)=CH2
2860 if CH1<>-1 then MP(1,X/8,Y/8)=CH1
2870 if GME=1 then CH2=288 : CH1=288 : goto 2910
2880 if X<>0 then 2905 else if CH2<>-1 then screen$(back,X,Y)=BLK$(MP(0,X/8,Y/8))
2890 if CH1<>-1 then screen$(back,X,Y)=BLK$(MP(1,X/8,Y/8))
2900 screen copy back,X,Y,X+16,Y+8 to logic,X,Y
2905 if CH1>=321 and CH1<=326 then 2971 else if CH1=380 then 2971
2910 if PRCT=0 and VRCT=0 then 2780
2920 if PRCT=2 then X2=X/8 : Y2=Y/8 : PRCT=1 : gosub 5050 : goto 2780
2930 if VRCT=2 then X2=X/8 : Y2=Y/8 : VRCT=1 : gosub 5050 : goto 2780
2940 if PRCT=1 then PRCT=2 else if VRCT=1 then VRCT=2
2950 X1=X/8 : Y1=Y/8 : gosub 4810 : goto 2780
2960 if Y>=184 then 2990
2970 goto 2780
2971 while mouse key=1 : wend : if X1Z(NTZ)=X and Y1Z(NTZ)=Y then 2780
2974 inc NTZ : X1Z(NTZ)=X : Y1Z(NTZ)=Y : Y2Z(NTZ)=Y+22 : X2Z(NTZ)=X+16
2975 if CH1=380 then ZNE(NTZ)=26 : goto 2780
2979 ZNE(NTZ)=CH1-301 : goto 2780
2980 rem -------------------------------
2990 sprite off 1 : show : X=0 : Y=0 : goto 2730
3000 if Z=1 then PRCT=0 : VRCT=0 : change mouse 1 : goto 1000
3010 if Z=2 then dec P : if mouse key=1 then gosub 4910 else if mouse key=2 then P=0 : gosub 4910
3020 if Z=3 then inc P : if mouse key=1 then gosub 4910 else if mouse key=2 then P=1000 : gosub 4910
3030 if Z=4 then dec P2 : if mouse key=1 then gosub 4930 else if mouse key=2 then P2=0 : gosub 4930
3040 if Z=5 then inc P2 : if mouse key=1 then gosub 4930 else if mouse key=2 then P2=1000 : gosub 4930
3050 if Z=7 then gosub 4810 : if PRCT=1 then PRCT=0 else PRCT=1 : VRCT=0 : change mouse 2
3060 if Z=8 then gosub 4810 : if VRCT=1 then VRCT=0 else VRCT=1 : PRCT=0 : change mouse 2
3070 if PRCT=0 and VRCT=0 then change mouse 1
3080 if Z>=10 and Z<=17 then 3090 else 3110
3090 CH1=P+(Z-10) : GME=0 : if mouse key=1 then gosub 4950 else if mouse key=3 then CH2=P+(Z-10) : gosub 4950
3100 if mouse key=2 then CH2=-1 : gosub 4950
3110 if Z>=18 and Z<=25 then 3120 else 3140
3120 CH2=P2+(Z-18) : GME=0 : if mouse key=1 then gosub 4950 else if mouse key=3 then CH1=P2+(Z-18) : gosub 4950
3130 if mouse key=2 then CH1=-1 : gosub 4950
3140 if Z=6 and GME=0 then PCH1=CH1 : PCH2=CH2 : if PCH1=0 then PCH1=9 : PCH2=369
3150 if Z=6 then CH1=288 : CH2=288 : gosub 4950 : gosub 4810 : if GME=0 then GME=1 else GME=0 : CH1=PCH1 : CH2=PCH2 : gosub 4950
3160 goto 2730
3170 rem ************ SPRITE ************************************************
3180 pen 15 : sprite off : hide : wait vbl : VTS=2 : gosub 4830
3190 cls back,0,16,184 to 304,200
3200 cls logic,0,16,184 to 304,200 : screen$(logic,16,184)=IC$(1) : set zone 2,16,184 to 32,199 : sprite 1,40,199,22 : wait vbl : put sprite 1 : set zone 3,32,184 to 48,199 : sprite 2,56,199,75 : wait vbl : put sprite 2 : set zone 4,48,184 to 64,199 : sprite 3,72,199,86 : wait vbl : put sprite 3 : set zone 5,64,184 to 80,199 : CHX=0
3210 sprite 5,103,207,70 : wait vbl : put sprite 5 : set zone 7,96,184 to 112,199
3220 sprite 6,120,199,97 : wait vbl : put sprite 6 : set zone 8,112,184 to 128,199
3230 sprite 7,136,199,99 : wait vbl : put sprite 7 : set zone 9,128,184 to 144,199
3240 auto back off : ink 15 : if SBLK(0,0)=0 then box 144,184 to 159,199 else sprite 10,152,184,83 : wait vbl : put sprite 10
3250 if SBLK(1,0)=0 then box 160,184 to 175,199 else sprite 8,168,184,84 : wait vbl : put sprite 8
3260 if SBLK(2,0)=0 then box 176,184 to 191,191 else sprite 9,184,184,85 : wait vbl : put sprite 9
3270 if SBLK(3,0)=0 then box 176,192 to 191,199 else sprite 11,184,192,92 : wait vbl : put sprite 11
3280 if SBLK(4,0)=0 then box 192,184 to 207,199 else sprite 12,200,199,93 : wait vbl : put sprite 12
3290 if SBLK(5,0)=0 then box 208,184 to 223,199 else sprite 13,216,199,94 : wait vbl : put sprite 13
3300 if SBLK(6,0)=0 then box 224,184 to 239,191 else sprite 14,232,191,95 : wait vbl : put sprite 14
3310 if SBLK(7,0)=0 then box 224,192 to 239,199 else sprite 15,232,199,96 : wait vbl : put sprite 15
3320 set zone 10,144,184 to 159,199 : set zone 11,160,184 to 175,199 : set zone 12,176,184 to 191,191 : set zone 13,176,192 to 191,199 : set zone 14,192,184 to 208,199 : set zone 15,208,184 to 224,199 : set zone 16,224,184 to 239,191 : set zone 17,224,192 to 239,199
3330 sprite 4,88,199,88 : wait vbl : put sprite 4 : set zone 6,80,184 to 96,199
3340 screen copy logic to back : auto back on : sprite off : SP=1 : NV=2 : gosub 3740 : show 
3350 Z=zone(0) : if Z<>0 and mouse key=1 then gosub 4810 : goto 3420
3360 if CHX=0 then if mouse key=2 and Z>20 then NSP=Z-19 : gosub 4670
3370 if CHX=0 then if mouse key=2 and Z=20 then if SP(1)=2 then SP(1)=11 else SP(1)=2
3380 while mouse key=2 : wend : sprite 1,XD,YD,SP(1)
3390 if CHX=0 and mouse key=2 then if Z>=10 and Z<20 then SBLK(Z-10,0)=0 : goto 3180
3400 K$=inkey$ : if K$=" " then gosub 830 : gosub 3740
3410 goto 3350
3420 if CHX=1 then 3820
3430 if Z=1 then sprite off : goto 1000
3440 if Z=2 then if NTS=1 then 3350 else CHX=1 : goto 3770
3450 if Z=3 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=22 : ST(NSP)=0 : goto 3610
3460 if Z=4 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=75 : ST(NSP)=1 : goto 3610
3470 if Z=5 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=86 : ST(NSP)=2 : goto 3610
3480 if Z=6 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=88 : ST(NSP)=3 : goto 3610
3490 if Z=7 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=70 : ST(NSP)=4 : goto 3610
3500 if Z=8 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=97 : ST(NSP)=5 : goto 3610
3510 if Z=9 and NTS<8 then inc NTS : NSP=NTS : SP(NSP)=99 : ST(NSP)=6 : goto 3610
3520 if Z>=20 then sprite off Z-19 : NSP=Z-19 : goto 3610
3530 if Z<9 then 3350
3540 if Z>=14 then 3560 else if SBLK(Z-10,0)<>0 then if NTS>=8 then 3350 else inc NTS : NSP=NTS : SP(NSP)=SBLK(Z-10,0) : ST(NSP)=4 : goto 3610
3550 goto 3570
3560 if SBLK(Z-10,0)<>0 then if NTS>=8 then 3350 else inc NTS : NSP=NTS : SP(NSP)=SBLK(Z-10,0) : ST(NSP)=7 : goto 3610
3570 if Z-10=0 then SBLK(Z-10,0)=83 else if Z-10=1 then SBLK(Z-10,0)=84 else if Z-10=2 then SBLK(Z-10,0)=85 else SBLK(Z-10,0)=Z+79
3580 goto 4750
3590 goto 3350
3600 bell : goto 3350
3610 limit mouse 0,16 to 319,184 : UN=0 : QUATRE=0 : if ST(NSP)=7 then QUATRE=5 else if ST(NSP)=4 then QUATRE=5 : if SP(NSP)<>70 then UN=1
3615 if ST(NSP)=3 then UN=-1
3620 if ST(NSP)=6 then QUATRE=1
3630 while mouse key=0
3640 X=(x mouse/8)*8+4-QUATRE : Y=(y mouse/8)*8-1+UN : sprite NSP,X,Y,SP(NSP)
3650 wend : while mouse key=1 : wend 
3660 limit mouse 
3670 if NSP=1 then XD=X : YD=Y
3680 XM(NSP)=X : YM(NSP)=Y : sprite NSP,XM(NSP),YM(NSP),SP(NSP) : set zone NSP+19,XM(NSP)-3,YM(NSP)-15 to XM(NSP)+3,YM(NSP)
3690 if ST(NSP)=4 then set zone NSP+19,XM(NSP)-8,YM(NSP)-24 to XM(NSP)+8,YM(NSP)
3700 if ST(NSP)=4 and SP(NSP)<>70 then for I=0 to 10 : MOV$(NSP,I)=MVN$+"10)L" : AN$(NSP,I)="("+str$(SP(NSP))+",0)" : next I : goto 3350
3710 if SPR$(ST(NSP),0)="" then for I=0 to 10 : MOV$(NSP,I)=MVN$+"10)L" : AN$(NSP,I)="("+str$(SP(NSP))+",0)" : next I : goto 3350
3720 for I=0 to 10 : MOV$(NSP,I)=MVN$+"10)L" : AN$(NSP,I)=SPR$(ST(NSP),0) : next I
3721 rem if MOV$(NSP,0)="" then for I=0 to 10 : MOV$(NSP,I)=MVN$+"10)L" : AN$(NSP,I)=SPR$(ST(NSP),0) : next I
3730 goto 3350
3740 sprite 1,XD,YD,SP(1) : set zone 20,XD-3,YD-15 to XD+3,YD
3750 if NTS>1 then for I=2 to NTS : sprite I,XM(I),YM(I),SP(I) : set zone I+19,XM(I)-3,YM(I)-15 to XM(I)+3,YM(I) : next I
3760 return 
3770 cls back,0,16,184 to 304,200 : sprite off : wait vbl : screen$(back,16,184)=IC$(2) : set zone 2,16,184 to 32,199 : screen$(back,32,184)=IC$(7) : set zone 3,32,184 to 48,199 : screen$(back,48,184)=IC$(5) : set zone 4,48,184 to 64,199 : screen$(back,64,184)=IC$(9) : set zone 5,64,184 to 80,199
3780 screen copy back to logic : SP=1 : NV=2 : NSP=2 : gosub 3740
3790 anim NSP,AN$(NSP,0)
3800 anim on 
3810 goto 3350
3820 if Z=1 then sprite off : goto 1000
3830 if Z=2 then CHX=0 : goto 3180
3840 if Z=3 then bell : goto 3890
3850 if Z=4 and ST(NSP)<>0 then bell : DGER=1 : goto 3890
3860 if Z=5 then bell : goto 4450
3870 if Z>20 then anim off : NSP=Z-19 : anim NSP,AN$(NSP,0) : anim on : bell 
3880 goto 3350
3890 gosub 4810 : QUATRE=0 : UN=0 : NB=0 : if DGER=1 or SS(NSP)=-1 then 3900 else shoot : clear key : locate 20,23 : print "Reconfigurer  ?" : X$=input$(1) : locate 20,23 : print "                "; : if X$<>"Y" and X$<>"y" then 3350
3900 XP=XM(NSP) : YP=YM(NSP) : SP2=SP(NSP)
3910 if DGER=1 then SS2=SS(NSP) : SS(NSP)=10 : goto 3930
3920 SS(NSP)=0
3930 anim off : while mouse key<>1 : if (x mouse/8)*8=(XP/8)*8 then 3990
3940 if x mouse<XP then 3970
3950 if ST(NSP)=0 then SP2=22 : goto 4000
3960 if ST(NSP)=1 then SP2=75 : goto 4000
3970 if ST(NSP)=0 then SP2=25 : goto 4000
3980 if ST(NSP)=1 then SP2=79 : goto 4000
3990 if ST(NSP)=0 then SP2=72
4000 sprite NSP,XP,YP,SP2
4005 if ST(NSP)<>1 then 4010 else K$=inkey$ : if K$="S" or K$="s" then SOT=4
4006 if K$=" " then SOT=0
4007 K$="" : clear key 
4010 wend : bell : if SS(NSP)=0 then SP(NSP)=SP2
4020 if SP2=72 or SP2=70 then CNT=(YP+1-(y mouse/8)*8-8)/2 : goto 4060
4030 if ST(NSP)<=1 then CNT=(XP-(x mouse/8)*8-4)/2 : goto 4060
4040 if ST(NSP)=5 then QUATRE=-3 else if ST(NSP)=6 then QUATRE=-4 else if ST(NSP)=7 then QUATRE=5 else QUATRE=5 : UN=1
4050 if (x mouse/8)*8<>(XP/8)*8 then CNT=(XP-(x mouse/8)*8-4+QUATRE)/2 else CNT=(YP+1-UN-(y mouse/8)*8-8)/2 : HOBA=1
4060 gosub 4810
4070 if CNT<>0 then 4120 else HOBA=0
4080 locate 20,23 : input "Dur‚e d'attente ";DUR; : MOV$(NSP,SS(NSP))=MVN$+str$(DUR)+")   " : locate 20,23 : print "                    "; : STY=0
4085 if ST(NSP)=1 then locate 20,23 : input "Style d'attente ";STY; : locate 20,23 : print "                    "; : if STY<>0 then STY=4
4090 while mouse key<>1 : wend : if x mouse>XP then if ST(NSP)=0 or ST(NSP)=1 then AN$(NSP,SS(NSP))=SPR$(ST(NSP),1+STY) : goto 4290
4100 if ST(NSP)=7 then 4290 else if ST(NSP)=4 and SP(NSP)<>70 then 4290
4110 AN$(NSP,SS(NSP))=SPR$(ST(NSP),0+STY) : goto 4290
4120 if CNT<0 then MOV$(NSP,SS(NSP))=MVD$ else MOV$(NSP,SS(NSP))=MVG$
4125 if ST(NSP)=1 and SOT=4 then AN$(NSP,SS(NSP))=mid$(AN$(NSP,SS(NSP)),1,5)+str$(abs(CNT))+mid$(AN$(NSP,SS(NSP)),10,8)
4130 if SP2>=92 then 4190 else if SP2>=83 and SP2<=85 then 4190
4140 AN$(NSP,SS(NSP))=SPR$(ST(NSP),1)
4150 if SP2=72 then AN$(NSP,SS(NSP))=SPR$(ST(NSP),4)
4160 if SP2=75 or SP2=22 then AN$(NSP,SS(NSP))=SPR$(ST(NSP),2+SOT)
4170 if SP2=79 or SP2=25 then AN$(NSP,SS(NSP))=SPR$(ST(NSP),3+SOT)
4180 if SP2=70 then AN$(NSP,SS(NSP))=SPR$(ST(NSP),0)
4190 MOV$(NSP,SS(NSP))=MOV$(NSP,SS(NSP))+str$(abs(CNT))+")   "
4200 if SP2=72 or SP2=70 then mid$(MOV$(NSP,SS(NSP)),1,1)="-"
4210 if HOBA=1 then mid$(MOV$(NSP,SS(NSP)),1,1)="-"
4220 anim NSP,AN$(NSP,SS(NSP)) : if mid$(MOV$(NSP,SS(NSP)),1,1)<>"-" then move x NSP,MOV$(NSP,SS(NSP)) else MOV2$=mid$(MOV$(NSP,SS(NSP)),2,20) : move y NSP,MOV2$
4230 move on : anim on 
4240 if mouse key=2 then 4630
4250 if mouse key=3 then move off : anim off : shoot : sprite NSP,XP,YP : goto 3930
4260 if movon(NSP)=0 then move off : anim off : sprite NSP,XP,YP : goto 4220
4270 if mouse key=1 then bell : gosub 4810 : goto 4290
4280 goto 4240
4290 if DGER=1 then 4380 else clear key : locate 20,23 : print "All‚-retour "; : X$=input$(1) : locate 20,23 : print "            "; : if X$="y" or X$="Y" then HOBA=0 : goto 4370
4300 clear key : locate 20,23 : print "Retour simple"; : X$=input$(1) : locate 20,23 : print "             "; : if X$<>"y" and X$<>"Y" then 4310 else SS(NSP)=SS(NSP)+20 : HOBA=0 : goto 4370
4310 clear key : locate 20,23 : print "Annuler ?"; : X$=input$(1) : locate 20,23 : print "         "; : if X$<>"y" and X$<>"Y" then 4320 else SP2=SP(NSP) : HOBA=0 : goto 3930
4320 inc SS(NSP) : if SS(NSP)=10 then SS(NSP)=9 : locate 15,23 : print "Maximum atteint.." : wait 15 : locate 15,23 : print "                 " : goto 4290
4330 move off : anim off : if SP2=72 or SP2=70 then YP=YP-CNT*2 : goto 3930
4340 if HOBA=1 then YP=YP-CNT*2 : HOBA=0 : goto 3930
4350 XP=XP-CNT*2
4360 goto 3930
4370 anim off : move off : sprite NSP,XM(NSP),YM(NSP),SP(NSP) : goto 3350
4380 HOBA=0 : SS(NSP)=SS2 : DGEM$(NSP,0)=AN$(NSP,10) : DGEM$(NSP,2)=MOV$(NSP,10) : MV$=MOV$(NSP,10) : if mid$(MV$,6,1)=" " then A$="-" else A$=" "
4390 DGEM$(NSP,3)=mid$(MV$,1,5)+A$+mid$(MV$,7,7)
4400 DGEM$(NSP,1)=AN$(NSP,10) : if ST(NSP)>1 or SP(NSP)=72 then 3350
4410 if AN$(NSP,10)=SPR$(ST(NSP),0) then DGEM$(NSP,1)=SPR$(ST(NSP),1) : goto 4370
4420 if AN$(NSP,10)=SPR$(ST(NSP),1) then DGEM$(NSP,1)=SPR$(ST(NSP),0) : goto 4370
4430 if AN$(NSP,10)=SPR$(ST(NSP),2) then DGEM$(NSP,1)=SPR$(ST(NSP),3) else DGEM$(NSP,1)=SPR$(ST(NSP),2)
4440 goto 4370
4450 I=0 : for J=2 to NTS : FLP(J)=0
4460 if mid$(MOV$(J,I),1,1)<>"-" then move x J,MOV$(J,I) else MOV2$=mid$(MOV$(J,I),2,20) : move y J,MOV2$
4470 anim J,AN$(J,I) : next J : J=1 : move on : anim on 
4480 inc J : if J=NTS+1 then J=2
4490 if mouse key=1 then bell : move off : anim off : gosub 4810 : gosub 3740 : goto 3350
4500 if movon(J)<>0 or SS(J)=-1 then 4480
4510 inc FLP(J)
4520 if FLP(J)=SS(J)+1 then FLP(J)=(FLP(J))*-1
4530 if SS(J)>=20 then if FLP(J)=SS(J)-19 then FLP(J)=0 : sprite J,XM(J),YM(J)
4540 if FLP(J)>=0 then MV2$=MOV$(J,FLP(J)) : AN2$=AN$(J,FLP(J)) : goto 4580
4550 MV2$=MOV$(J,abs(FLP(J))-1) : AN2$=AN$(J,abs(FLP(J))-1)
4560 if mid$(MV2$,6,1)=" " then mid$(MV2$,6,1)="-" else mid$(MV2$,6,1)=" "
4570 if AN2$=SPR$(ST(J),3) then AN2$=SPR$(ST(J),2) else if AN2$=SPR$(ST(J),2) then AN2$=SPR$(ST(J),3)
4575 if mid$(AN2$,1,5)=mid$(SPR$(1,6),1,5) then AN2$=mid$(SPR$(1,7),1,5)+mid$(AN$(J,abs(FLP(J))-1),6,4)+mid$(SPR$(1,7),10,8) else if mid$(AN2$,1,5)=mid$(SPR$(1,7),1,5) then AN2$=mid$(SPR$(1,6),1,5)+mid$(AN$(J,abs(FLP(J))-1),6,4)+mid$(SPR$(1,6),10,8)
4580 anim J,AN2$
4590 if mid$(MV2$,1,1)<>"-" then move x J,MV2$ else MV2$=mid$(MV2$,2,20) : move y J,MV2$
4600 if FLP(J)<0 then if mid$(MOV$(J,abs(FLP(J))-1),6,1)=" " then mid$(MOV$(J,abs(FLP(J))-1),6,1)="-" else mid$(MOV$(J,abs(FLP(J))-1),6,1)=" "
4610 move on J : anim on J : goto 4480
4620 rem ********************** vitesse *************
4630 while mouse key=2 : wend : VTS=VTS*2 : if VTS=8 then VTS=1
4640 if VTS=1 then CNT2=abs(CNT*2) else if VTS=4 then CNT2=abs(CNT/2) else CNT2=abs(CNT)
4645 if ST(NSP)=1 and SOT=4 then AN$(NSP,SS(NSP))=mid$(AN$(NSP,SS(NSP)),1,5)+str$(CNT2)+space$(4-len(str$(CNT2)))+mid$(AN$(NSP,SS(NSP)),10,8)
4650 MOV$(NSP,SS(NSP))=mid$(MOV$(NSP,SS(NSP)),1,6)+mid$(str$(VTS),2,1)+","+str$(CNT2)+")" : move off NSP : anim off NSP : sprite NSP,XP,YP : NB=0 : goto 4220
4660 rem ******* effacer sprite ********
4670 reset zone NTS+19 : sprite off NSP : if NSP=NTS then 4710
4680 for I=0 to 9 : AN$(NSP,I)=AN$(NTS,I) : MOV$(NSP,I)=MOV$(NTS,I) : next I
4690 ST(NSP)=ST(NTS) : SS(NSP)=SS(NTS) : XM(NSP)=XM(NTS) : YM(NSP)=YM(NTS)
4700 SP(NSP)=SP(NTS) : set zone NSP+19,XM(NSP)-3,YM(NSP)-15 to XM(NSP)+3,YM(NSP) : sprite NSP,XM(NSP),YM(NSP),SP(NSP)
4710 ST(NTS)=0 : SS(NTS)=-1 : SP(NTS)=0 : XM(NTS)=0 : YM(NTS)=0 : sprite off NTS
4720 for I=0 to 9 : AN$(NTS,I)="" : MOV$(NTS,I)="" : next I
4730 dec NTS : while mouse key=2 : wend : return 
4740 rem ******** get plat/danger *************
4750 FMT=2 : if SBLK(Z-10,0)=92 or SBLK(Z-10,0)=85 then FMT=1 else if SBLK(Z-10,0)>=95 then FMT=1
4760 if FMT=2 then if SBLK(Z-10,0)>92 then YCAL=15 else YCAL=0
4770 if FMT=1 then if SBLK(Z-10,0)>92 then YCAL=7 else YCAL=0
4780 hide : while mouse key<>1
4790 X=(x mouse/8)*8 : Y=(y mouse/8)*8 : sprite 15,X,Y,32 : sprite 14,X+16,Y+8*FMT,32
4800 wend : sprite off 15 : sprite off 14 : get sprite X+7,Y+YCAL,SBLK(Z-10,0) : show : SBLK(Z-10,1)=X+7 : SBLK(Z-10,2)=Y+YCAL : goto 3180
4810 while mouse key=1 : wend : return 
4820 screen$(back,AA,184)=IC$(24) : screen$(back,BB,184)=IC$(26) : return 
4830 screen$(back,0,184)=IC$(ZM+8)
4840 screen$(back,304,184)=IC$(15) : set zone 1,304,184 to 319,199 : screen copy back to logic : return 
4850 scroll 5 : screen copy logic,0,184,304,200 to back,0,184 : cls logic,0,0,184 to 319,199 : return 
4860 set zone 2,136,184 to 144,192 : set zone 3,272,184 to 280,192 : set zone 4,136,193 to 144,199 : set zone 5,272,193 to 280,199 : return 
4870 set zone 2,136,184 to 144,199 : set zone 3,272,184 to 280,199 : return 
4880 set zone 6,280,184 to 288,199 : set zone 7,289,184 to 296,199 : set zone 8,297,184 to 304,199 : return 
4890 for I=0 to 7 : set zone 10+I,144+I*16,184 to 159+I*16,192 : set zone 18+I,144+I*16,193 to 159+I*16,199 : next I : return 
4900 for I=0 to 7 : set zone 10+I,144+I*16,184 to 159+I*16,199 : next I : return 
4910 if P<DC then P=DC else if P>FC-7 then P=FC-7
4920 bar 144,184 to 271,191 : A=0 : for I=P to P+7 : inc A : screen$(back,144+(A-1)*16,184)=BLK$(I) : next I : screen copy back,144,184,296,192 to logic,144,184 : return 
4930 if P2<DF then P2=DF else if P2>FF-7 then P2=FF-7
4940 bar 144,192 to 271,199 : A=0 : for I=P2 to P2+7 : inc A : screen$(back,144+(A-1)*16,192)=BLK$(I) : next I : screen copy back,144,192,296,200 to logic,144,192 : return 
4950 cls back,0,112,184 to 128,200
4960 if CH2>0 then screen$(back,112,184)=BLK$(CH2) else bell 
4970 if CH1>0 then screen$(back,112,184)=BLK$(CH1) else bell 
4980 screen copy back to logic : get sprite 112,184,1 : return 
4990 screen$(logic,144,184)=IC$(34)
5000 screen$(logic,288,184)=IC$(25) : screen$(logic,304,184)=IC$(27) : gosub 4850
5010 hide : screen$(back,272,184)=IC$(35) : screen$(back,288,184)=IC$(28) : screen$(back,96,184)=IC$(22) : gosub 4830
5020 screen copy back to logic : show 
5030 gosub 4860 : gosub 4880 : gosub 4890
5040 return 
5050 if X2<X1 then swap X2,X1
5060 if Y2<Y1 then swap Y2,Y1
5070 if GME=1 then CH1=0 : CH2=0
5080 if VRCT=1 then 5130
5090 for I=X1 to X2 : for J=Y1 to Y2
5100 if CH2<>-1 then MP(0,I,J)=CH2
5110 if CH1<>-1 then MP(1,I,J)=CH1
5120 next J : next I : goto 5250
5130 for J=Y1 to Y2
5140 if CH2<>-1 then MP(0,X1,J)=CH2
5150 if CH1<>-1 then MP(1,X1,J)=CH1
5160 if CH2<>-1 then MP(0,X2,J)=CH2
5170 if CH1<>-1 then MP(1,X2,J)=CH1
5180 next J : for I=X1 to X2
5190 if CH2<>-1 then MP(0,I,Y1)=CH2
5200 if CH1<>-1 then MP(1,I,Y1)=CH1
5210 if CH2<>-1 then MP(0,I,Y2)=CH2
5220 if CH1<>-1 then MP(1,I,Y2)=CH1
5230 next I
5240 if GME=1 then CH1=288 : CH2=288
5250 X1=0 : Y1=0 : X2=0 : Y2=0 : gosub 830 : return 
5260 cls back,0,0,184 to 320,200 : return 
5270 rem *****************************
5280 rem * TEST COLISION             *
5290 rem *****************************
5300 sprite 1,X,Y,C
5310 K$=inkey$ : if TEST=1 and K$=" " then 10820
5312 if K$="+" then inc MOUSKY else if K$="-" and MOUSKY>0 then dec MOUSKY
5314 if K$="+" or K$="-" then locate 10,23 : print using "##";MOUSKY : clear key : K$=""
5315 if ZNETEST>0 then dec ZNETEST : return 
5316 ZNETEST=MOUSKY
5320 rem *** mvt zones intermittentes ***
5330 if CZI=-1 then 5410
5340 inc CZ2 : if CZ2=CZI+1 then CZ2=0
5350 AC3$=ACT$(CZ2) : inc CTIM(CZ2) : if CTIM(CZ2)=NZIF(CZ2)+NZIO(CZ2) then CTIM(CZ2)=0
5360 I=val(AC3$)
5370 if I=0 then 5400 else gosub 10320
5380 if CTIM(CZ2)=0 then IK=8 : on ZNE2(CZ2) gosub 10070,10010,10070,10070 : if ZNE2(CZ2)=2 then 5360 else 5400
5390 if CTIM(CZ2)=NZIO(CZ2) then IK=1 : on ZNE2(CZ2) gosub 10070,10010,10070,10070 : if ZNE2(CZ2)=2 then 5360
5400 rem *** mvt sprites ***
5410 MZI=0 : if NTS=1 then 5630 else DRC=0 : inc NTS2 : if NTS2=NTS+1 then NTS2=2
5420 if AL(NTS2)=0 and AL2(NTS2)=0 then 5500 else if ST(NTS2)<>0 or ST(NTS2)>=9 then 5450
5422 rem ------ flic qui tire -------
5425 if AL(NTS2)=1 then I=NTS2 : goto 9820
5430 dec AL(NTS2) : if AL(NTS2)=1 then move on NTS2 : anim on NTS2
5440 goto 5630
5445 rem ------ autres en alerte ----
5450 if movon(NTS2)=0 and FLP(NTS2)=-1 then 5460 else 5500
5460 anim NTS2,DGEM$(NTS2,AL2(NTS2)) : if mid$(DGEM$(NTS2,AL2(NTS2)+2),1,1)=" " then move x NTS2,DGEM$(NTS2,AL2(NTS2)+2) else DGER2$=mid$(DGEM$(NTS2,AL2(NTS2)+2),2,len(DGEM$(NTS2,AL2(NTS2)+2))) : move y NTS2,DGER2$
5470 if AL2(NTS2)=0 then inc AL2(NTS2) else dec AL2(NTS2)
5480 move on NTS2 : anim on NTS2
5490 goto 5630
5495 rem ------------- cpmt normal ---------------
5500 if ST(NTS2)>9 then dec ST(NTS2) : if ST(NTS2)>9 then 5630 else ST(NTS2)=0 : anim NTS2,RTRP$(NTS2) : move on NTS2 : anim on NTS2 : goto 5630
5510 if SS(NTS2)=-1 or movon(NTS2)<>0 then 5630
5520 inc FLP(NTS2) : if FLP(NTS2)=SS(NTS2)+1 then FLP(NTS2)=FLP(NTS2)*-1
5530 if SS(NTS2)>=20 then if FLP(NTS2)=SS(NTS2)-19 then FLP(NTS2)=0 : sprite NTS2,XM(NTS2),YM(NTS2)
5540 if FLP(NTS2)>=0 then MV2$=MOV$(NTS2,FLP(NTS2)) : AN2$=AN$(NTS2,FLP(NTS2)) : goto 5580
5550 MV2$=MOV$(NTS2,abs(FLP(NTS2))-1) : AN2$=AN$(NTS2,abs(FLP(NTS2))-1)
5560 if mid$(MV2$,6,1)=" " then mid$(MV2$,6,1)="-" else mid$(MV2$,6,1)=" "
5570 if AN2$=SPR$(ST(NTS2),3) then AN2$=SPR$(ST(NTS2),2) else if AN2$=SPR$(ST(NTS2),2) then AN2$=SPR$(ST(NTS2),3)
5575 if mid$(AN2$,1,5)=mid$(SPR$(1,6),1,5) then AN2$=mid$(SPR$(1,7),1,5)+mid$(AN$(NTS2,abs(FLP(NTS2))-1),6,4)+mid$(SPR$(1,7),10,8) else if mid$(AN2$,1,5)=mid$(SPR$(1,7),1,5) then AN2$=mid$(SPR$(1,6),1,5)+mid$(AN$(NTS2,abs(FLP(NTS2))-1),6,4)+mid$(SPR$(1,6),10,8)
5580 anim NTS2,AN2$
5590 if mid$(MV2$,1,1)<>"-" then move x NTS2,MV2$ else MV2$=mid$(MV2$,2,20) : move y NTS2,MV2$
5600 if FLP(NTS2)<0 then if mid$(MOV$(NTS2,abs(FLP(NTS2))-1),6,1)=" " then mid$(MOV$(NTS2,abs(FLP(NTS2))-1),6,1)="-" else mid$(MOV$(NTS2,abs(FLP(NTS2))-1),6,1)=" "
5610 move on NTS2 : anim on NTS2
5620 rem --- control fin tir -----------------
5630 if movon(15)=0 then sprite off 15
5640 if movon(14)=0 then sprite off 14
5650 if movon(13)=0 then sprite off 13
5655 rem ----- tests zones ------------------
5660 Z=zone(1) : if Z=0 then if PSTZ=0 then 5720 else if ZNE2(ZNE(PSTZ)-30)=0 then 10640 else PSTZ=0 : goto 5720
5670 on ZNE(Z) goto 8590,8660,7940,5730,8730,8780,8830,8890,11050
5675 if ZNE(Z)>=20 and ZNE(Z)<=29 then 12000
5680 if PSTZ<>0 then if Z=PSTZ then 5720 else if ZNE2(ZNE(PSTZ)-30)=0 then 10640 else PSTZ=0 : goto 5720
5690 if ZNE(Z)>=60 and ZNE(Z)<=79 then 10650
5700 if ZNE(Z)>=30 and ZNE(Z)<=39 then on ZNE2(ZNE(Z)-30) goto 8590,8660,5730,5730
5710 if FEU=1 and FEU2=0 then if ZNE(Z)>=40 and ZNE(Z)<=59 then 10540
5720 if FEU=1 and FEU2=0 then if C<=5 then 10360 else if C<=14 and C>=11 then 10360
5729 rem --------- detection sprites -------------
5730 TY=14 : TX=14 : if CR>=1 then TY=8 : if CR=2 then TX=18
5740 SP=0 : T=collide(1,TX,TY) : if T=0 then PLAT=0 : goto 5860
5750 for I=2 to 15 : if btst(I,T)=-1 then SP=I : I=16
5760 next I : I=0
5765 if SP>12 then if Y<y sprite(SP) then 5860 else 8590
5770 if ST(SP)>=9 then 5860
5780 if ST(SP)=0 or SP(SP)>=97 then if abs(x sprite(SP)-X)>8 then 5860
5790 if ST(SP)<>4 then 5810 else if x sprite(SP)-X>8 or x sprite(SP)-X<-8 then PLAT=0 : goto 5860
5795 if ST(SP)=4 then if SAUT=0 and PLAT<>-1 then 5870 else 5860
5800 if Y>y sprite(SP)+2 or Y<y sprite(SP)-4 then PLAT=0 : goto 5860
5810 if SP(SP)=93 or SP(SP)=94 then if abs(x sprite(SP)-X)<=8 then 5850 else 5860
5820 if Y<y sprite(SP)-8 then 5860
5850 on ST(SP)+1 goto 8590,8590,8510,8510,5860,8510,8510,8590
5860 return 
5870 if Y>y sprite(SP)+2 or Y<y sprite(SP)-4 then PLAT=0 : goto 5860
5880 if PLAT<>SP then 5960 else SP2=SP : SP=0
5890 if point(X+x sprite(PLAT)-XPLAT-E-1,y sprite(PLAT)-4)<=V and point(X+x sprite(PLAT)-XPLAT+E+1,y sprite(PLAT)-4)<=V then 5900 else 5920
5900 if CR=0 then if point(X+x sprite(PLAT)-XPLAT-E-1,y sprite(PLAT)-12)<=V and point(X+x sprite(PLAT)-XPLAT+E+1,y sprite(PLAT)-12)<=V then 5910 else 5920
5910 XPLAT2=x sprite(PLAT) : X=X+XPLAT2-XPLAT : XPLAT=XPLAT2
5920 Y=y sprite(PLAT)-1
5930 if C=10 then C=2 else if C=19 then C=11
5940 for I=2 to 15 : if btst(I,T)=-1 and I<>SP2 then SP=I : I=16 : SP2=0
5950 next I : I=0 : if SP=0 then 5860 else 5830
5960 XPLAT=x sprite(SP)
5970 Y=y sprite(SP)-1
5980 PLAT=SP : goto 5860
5990 rem go,go,gooo !-------------------------------------------------
6000 if NTS=1 then 6030
6010 for I=2 to NTS
6020 FLP(I)=-1 : sprite I,XM(I),YM(I),SP(I) next I
6025 for I=0 to 7 : if SBLK(I,0)<>0 then get sprite SBLK(I,1),SBLK(I,2),SBLK(I,0)
6026 next I
6030 if NTZ=0 then 6100
6040 J=0 : for II=1 to NTZ
6050 if ZNE(II)>=30 and ZNE(II)<=39 then if ACT$(ZNE(II)-30)<>"" then CTIM(J)=NZID(J)*-1 : inc J : goto 6090
6060 if ZNE(II)<80 then 6080 else if ZNE2(ZNE(II)-30)=0 then 6090
6070 IK=8 : AC3$=ACT$(ZNE(II)-30) : INIT=1 : gosub 10670
6080 set zone II,X1Z(II),Y1Z(II) to X2Z(II),Y2Z(II)
6090 next II : J=0
6100 move on : anim on : timer=0 : hide : pen 15
6110 rem ******************************************************************
6120 TIR=0 : X=XD : Y=YD : C=SP(1) : ECH=0 : V=9 : E=4 : TEST=1 : NTS2=1 : CZ2=CZI
6130 CR=0 : gosub 5300 : J=joy : if point(X,Y+1)<=V and PLAT<=0 then 6630
6140 if PLAT=0 then 6210 else if C=11 then 6170 else if point(X+E-1,Y-16)>V then PLAT=-1 : goto 6630
6150 if point(X+E-1,Y)>V then PLAT=-1 : goto 6630
6160 goto 6190
6170 if point(X-E+1,Y-16)>V then PLAT=-1 : goto 6630
6180 if point(X-E+1,Y)>V then PLAT=-1 : goto 6630
6190 if point(X-E,Y-12)>V or point(X-E,Y-4)>V then X=(X/8)*8+4
6200 if point(X+E,Y-12)>V or point(X+E,Y-4)>V then X=(X/8)*8+3
6210 gosub 10330
6215 if BOUT>0 then dec BOUT
6220 on J goto 6240,7180,0,6930,6240,7450,0,7060,6240,7600,0,0,0,0,0
6230 goto 6130
6240 rem *** SAUT
6250 if Y<16 then 6130
6260 Z=zone(1) : if ZNE(Z)=4 then 6265 else if ZNE(Z)<30 then 6270 else if ZNE2(ZNE(Z)-30)=4 then 6265 else 6270
6265 if point(X+E-1,Y-16)<=V and point(X-E+1,Y-16)<=V then 8130
6270 CR=0 : if J<>5 then if point(X+E-1,Y-16)>V then 6130
6280 if J<>9 then if point(X-E+1,Y-16)>V then 6130
6290 if C=11 then C=19 else C=10
6300 gosub 10330 : if J=9 and PLAT=0 then if point(X+1,Y+1)<=V then X=X+4 : if X>312 then X=312
6310 if J=5 and PLAT=0 then if point(X-1,Y+1)<=V then X=X-4 : if X<8 then X=8
6320 SAUT=0 : while SAUT<18 : if point(X+E-1,Y-12)>V or point(X-E+1,Y-12)>V then 6630
6330 inc SAUT : rem    if NTS>4 then inc SAUT
6340 Z=zone(1) : gosub 10330 : if ZNE(Z)=4 then 6350 else if ZNE(Z)<30 then 6370 else if ZNE2(ZNE(Z)-30)=4 then 6350 else 6370
6350 if J<>1 and J<>9 then if J<>5 then 6390
6360 if point(X+E-1,Y-16)<=V and point(X-E+1,Y-16)<=V then 8130
6370 if J=5 or J=9 then 6390
6380 if J=1 then 6390 else 6630
6390 if SAUT<10 then DXY=2 : Y=Y-2 : rem if NTS>4 then DXY=4 : if point(X+E-1,Y-14)<=V and point(X-E+1,Y-14)<=V then Y=Y-2
6400 goto 6430
6410 if SAUT<12 then dec Y : rem if NTS>4 then if point(X+E-1,Y-13)<=V and point(X-E+1,Y-13)<=V then dec Y
6420 DXY=1 : rem if NTS>4 then DXY=2
6430 if J=9 and PLAC=0 then gosub 6880
6440 if J=5 and PLAC=0 then gosub 6830
6450 if Y<16 then Y=16
6460 gosub 5300
6470 wend : goto 6630
6480 CR=0
6490 while SAUT<4
6500 DXY=2 : rem if NTS>4 then DXY=4
6510 inc SAUT : rem if NTS>4 then inc SAUT
6520 gosub 10330 : Z=zone(1) : if ZNE(Z)=4 then 6530 else if ZNE(Z)<30 then 6550 else if ZNE2(ZNE(Z)-30)=4 then 6530 else 6550
6530 if J<>1 and J<>9 then if J<>5 then 6550
6540 if point(X+E-1,Y-16)<=V and point(X-E+1,Y-16)<=V then 8130
6550 if J=8 or J=9 then gosub 6880 : goto 6590
6560 if J=5 or J=4 then gosub 6830 : goto 6590
6570 if J<>9 and J<>8 then if C=10 then gosub 6880
6580 if J<>5 and J<>4 then if C=19 then gosub 6830
6590 Y=Y-2 : rem if NTS>4 then if point(X+E-1,Y-18)<=V and point(X-E+1,Y-18)<=V then Y=Y-2
6600 if Y<16 then Y=16
6610 gosub 5300
6620 wend 
6630 SAUT=0 : if Y<8 then Y=15
6640 if PLAT>0 then 6130
6650 DXY=1 : rem if NTS>4 then DXY=2
6660 if C<=10 then C=10 else C=19
6670 while point(X+E-1,Y+1)<=V : if point(X-E+1,Y+1)>V then 6780
6680 DXY=1 : rem if NTS>4 then DXY=2
6690 gosub 10330 : Z=zone(1) : if ZNE(Z)=4 then 6700 else if ZNE(Z)<30 then 6720 else if ZNE2(ZNE(Z)-30)=4 then 6700 else 6720
6700 if J<>1 and J<>9 then if J<>5 then 6720
6710 goto 8130
6720 if J=8 or J=9 then gosub 6880
6730 if J=4 or J=5 then gosub 6830
6740 Y=Y+2 : rem if NTS>4 then if point(X+E-1,Y+3)<=V and point(X-E+1,Y+3)<=V then Y=Y+2
6750 if Y>184 then gosub 8590
6760 gosub 5300 : if PLAT<>0 then 6810
6770 wend 
6780 if point(X,Y+1)<=V then if point(X+E-1,Y+1)>V then X=X+3 else X=X-3
6790 while point(X,Y)>V : dec Y : wend 
6800 while point(X,Y+1)<=V : inc Y : wend 
6810 SAUT=0 : if C=19 or C=11 then C=11 else C=2
6820 goto 6130
6830 if X<8 then X=8
6840 C=19 : if point(X-E,Y-4)>V and point(X-E,Y-12)<=V then pop : goto 7750
6850 if point(X-E-DXY+1,Y)<=V then if point(X-E-DXY+1,Y-4)<=V and point(X-E-DXY+1,Y-8)<=V then X=X-DXY : goto 6920
6860 rem if NTS>4 then dec DXY : if DXY>0 then 6850
6870 goto 6920
6880 if X>312 then X=312
6890 C=10 : if point(X+E,Y-4)>V and point(X+E,Y-12)<V+1 then pop : goto 7900
6900 if point(X+E+DXY-1,Y)<=V then if point(X+E+DXY-1,Y-4)<=V and point(X+E+DXY-1,Y-8)<=V then X=X+DXY : goto 6920
6910 rem if NTS>4 then dec DXY : if DXY>0 then 6900
6920 return 
6930 rem *** GAUCHE
6940 CR=0 : gosub 10330 : if C=2 then for C=21 to 20 step-1 : gosub 5300 : next C : C=11
6950 restore 7050 : while J=4 and point(X-E,Y-12)<=V : if point(X-E,Y-4)>V then if PLAT>0 then 6130 else C=66 : X=X+4 : goto 7870
6960 dec X : read C : if C=0 then restore 7050 : read C
6970 rem if NTS>4 and point(X-E-1,Y-12)<=V then dec X
6980 rem if NTS>4 then inc C : if C=15 then C=12
6990 if X<8 then X=8
7000 gosub 5300 : gosub 10330
7010 if PLAT<=0 and point(X,Y+1)<=V then C=8 : X=(X/8)*8+4 : goto 6630
7020 wend 
7030 C=11 : gosub 5300
7040 goto 6130
7050 data 12,12,12,13,13,13,14,14,14,0
7060 rem *** DROITE
7070 CR=0 : gosub 10330 : if C=11 then for C=20 to 21 : gosub 5300 : next C : C=2
7080 restore 7170 : while J=8 and point(X+E,Y-12)<=V : if point(X+E,Y-4)>V then if PLAT>0 then 6130 else C=59 : X=X-4 : goto 8020
7090 inc X : read C : if C=0 then restore 7170 : read C
7100 rem if NTS>4 and point(X+E+1,Y-12)<=V then inc X
7110 rem if NTS>4 then inc C : if C=6 then C=3
7120 if X>312 then X=312
7130 gosub 5300 : gosub 10330
7140 if PLAT<=0 and point(X,Y+1)<=V then C=2 : X=(X/8)*8+3 : goto 6630
7150 wend : C=2
7160 gosub 5300 : goto 6130
7170 data 3,3,3,4,4,4,5,5,5,0
7180 rem *** FLEXION
7190 rem
7200 CR=1 : if C=11 then for C=15 to 16 : gosub 5300 : next C : C=16 : goto 7220
7210 if C=2 then for C=6 to 7 : gosub 5300 : next C : C=7
7220 CR=1 : gosub 10330 : while J=2 : gosub 10330 : gosub 5300
7230 if PLAT<=0 then if point(X+E-1,Y+1)<=V and point(X-E+1,Y+1)<=V then Y=Y+6 : goto 6630
7240 wend 
7250 if PLAT<=0 then 7290
7260 if J=0 and Y>7 then if point(X+E-1,Y-9)<=V and point(X-E+1,Y-9)<=V then 7380
7270 if J<=6 then C=16 else C=7
7280 gosub 5300 : goto 7220
7290 gosub 10330 : if Y<8 then 7320
7300 if J=5 and C=16 then if point(X-1,Y+1)<=V then C=19 : goto 7350
7310 if J=9 and C=7 then if point(X+1,Y+1)<=V then C=10 : goto 7350
7320 if J=6 or J=4 then 7480 else if J=10 or J=8 then 7630
7330 if Y>7 and J=0 then if point(X+E-1,Y-9)<=V and point(X-E+1,Y-9)<=V then 7380
7340 gosub 5300 : gosub 10330 : goto 7290
7350 Y=Y+6 : remif point(X,Y-8)>V then dec Y else Y=Y+6
7360 if C=19 then X=X-2 else X=X+2
7370 CR=0 : goto 6480
7380 if C=16 then 7420
7390 for C=7 to 6 step-1 : sprite 1,X,Y,C
7400 if ZNE(Z)<>5 and ZNE(Z)<>6 then gosub 5300
7410 next C : C=2 : sprite 1,X,Y,C : goto 6130
7420 for C=16 to 15 step-1 : sprite 1,X,Y,C
7430 if ZNE(Z)<>5 and ZNE(Z)<>6 then gosub 5300
7440 next C : C=11 : sprite 1,X,Y,C : goto 6130
7450 rem *** RAMPE GAUCHE
7460 CR=2 : if C=2 then for C=20 to 21 : gosub 5300 : next C
7470 for C=15 to 16 : gosub 5300 : next C
7480 CR=2 : restore 7580
7490 inc X : gosub 10330 : while J=4 or J=6
7500 rem if NTS>4 and point(X-E-1,Y-1)<=V then dec X
7510 if PLAT<=0 and point(X-1,Y+1)<=V then C=11 : X=X-4 : goto 6630
7520 if point(X-E,Y-1)>V then 7550
7530 dec X : read C : if C=0 then restore 7580 : read C
7540 if X<8 then X=8
7550 gosub 5300 : gosub 10330
7560 wend : if Y<8 then 7180 else if J=2 or point(X+E-1,Y-9)>V then 7590 else if point(X-E+1,Y-9)>V then 7590
7570 C=16 : goto 7420
7580 data 17,17,17,18,18,18,0
7590 C=16 : sprite 1,X,Y,16 : goto 7220
7600 rem *** RAMPE DROITE
7610 CR=2 : if C=11 then for C=21 to 20 step-1 : gosub 5300 : next C
7620 for C=6 to 7 : gosub 5300 : next C
7630 CR=2 : restore 7730
7640 dec X : gosub 10330 : while J=8 or J=10
7650 rem if NTS>4 and point(X+E+1,Y-1)<=V then inc X
7660 if PLAT=0 and point(X+1,Y+1)<=V then C=2 : X=X+4 : goto 6630
7670 if point(X+E,Y-1)>V then 7700
7680 inc X : read C : if C=0 then restore 7730
7690 if X>312 then X=312
7700 gosub 5300 : gosub 10330
7710 wend : if Y<8 then 7180 else if J=2 or point(X+E-1,Y-9)>V then 7740 else if point(X-E+1,Y-9)>V then 7740
7720 C=7 : goto 7380
7730 data 8,8,8,9,9,9,0
7740 C=7 : sprite 1,X,Y,7 : goto 7220
7750 rem *** MONTE GAUCHE
7760 CR=1 : while point(X-E,Y-6)>V : dec Y : C=19 : gosub 5300 : wend 
7770 while point(X-E,Y-5)<=V : inc Y : C=19 : gosub 5300 : wend 
7780 C=62
7790 inc C
7800 if C=63 then Y=Y+5 : X=X+4
7810 if C=64 then dec Y
7820 if C=66 then Y=Y-2
7830 if C=67 then Y=Y-4
7840 if C=68 then dec Y
7850 if C=69 then Y=Y-3 : X=X-8
7860 if C=70 then C=16
7870 gosub 5300 : gosub 5300
7880 if C<>16 then 7790
7885 goto 7220
7890 SAUT=0 : if Y<8 then 7180 else if point(X-E+1,Y-8)>V or point(X+E-1,Y-8)>V then 7180 else 7420
7900 rem *** MONTE DROITE
7910 CR=1 : while point(X+E,Y-6)>V : dec Y : C=10 : gosub 5300 : wend 
7920 while point(X+E,Y-5)<=V : inc Y : C=10 : gosub 5300 : wend 
7930 C=55
7940 inc C
7950 if C=56 then Y=Y+5 : X=X-4
7960 if C=57 then dec Y
7970 if C=59 then Y=Y-2
7980 if C=60 then Y=Y-4
7990 if C=61 then dec Y
8000 if C=62 then Y=Y-3 : X=X+8
8010 if C=63 then C=7
8020 gosub 5300 : gosub 5300
8030 if C<>7 then 7940
8040 SAUT=0 : if Y<8 then 7180 else if point(X+E-1,Y-8)>V or point(X-E+1,Y-8)>V then 7180 else 7380
8050 mode 0 : C=1 : while C<200 : locate 1,1 : print C : sprite 1,100,100,C : wait key : inc C : wend 
8060 mode 0 : curs off : get palette (2)
8070 screen copy 2 to back : screen copy 2 to logic
8080 if Y<16 then 6130
8090 if joy=9 or joy=5 then 6320
8100 if joy<>1 then 6130 else C=10 : goto 6320
8110 wait key : end 
8120 rem *** ESCALIER
8130 restore 8390 : C=55 : SAUT=0
8140 Z=zone(1) : if ZNE(Z)=4 then 8150 else if ZNE(Z)<30 then 8080 else if ZNE2(ZNE(Z)-30)=4 then 8150 else 8080
8150 J=joy
8160 if J=0 then 8380
8170 if J<>1 and J<>9 then if J<>5 then 8240
8180 if HHH<>1 then HHH=1
8190 if point(X+E-1,Y-16)>V or point(X-E+1,Y-16)>V then HHH=-1 : goto 8210
8200 rem if C=53 or C=55 then dec Y
8210 if J=9 and X<=315 then 8400
8220 if J=5 and X>=4 then 8450
8230 goto 8340
8240 if J<>2 and J<>6 then if J<>10 then 8310
8250 if HHH<>0 then HHH=0
8260 if point(X+E-1,Y+1)>V or point(X-E+1,Y+1)>V then HHH=-1 : goto 8280
8270 rem if C=53 then inc Y
8280 if J=10 and X<=315 then 8400
8290 if J=6 and X>=4 then 8450
8300 goto 8340
8310 HHH=-1 : if J=8 and X<=315 then 8400
8320 if J=4 and X>=4 then 8450
8330 goto 8140
8340 read C : if C=0 then restore 8390 : read C
8350 if HHH=1 and C=54 then Y=Y-2
8360 if HHH=0 then if C=53 or C=55 then Y=Y+2
8370 if Y<16 then Y=16
8380 gosub 5300 : goto 8140
8390 data 54,55,54,53,0
8400 if point(X+E,Y-15)>V then 8340
8410 if point(X+E,Y-12)>V then 8340
8420 if point(X+E,Y-6)>V then 7910
8430 if point(X+E,Y)>V then 8340
8440 inc X : goto 8340
8450 if point(X-E,Y-15)>V then 8340
8460 if point(X-E,Y-12)>V then 8340
8470 if point(X-E,Y-6)>V then 7760
8480 if point(X-E,Y)>V then 8340
8490 dec X : goto 8340
8500 rem ** MORT
8510 for I=13 to 15 : sprite off I : next I
8520 anim off 1 : while point(X,Y+1)<=V : inc Y : sprite 1,X,Y : if Y=183 then 8540
8530 wend : wait 15
8540 D=19 : if C<=10 then D=2 else if C>=56 and C<=62 then D=2 else if C=90 then D=2
8550 sprite 1,X,Y,D : wait 3 : if D=2 then sprite 1,X,Y,21 else sprite 1,X,Y,20
8560 wait 15 : anim 1,"(48,30)(49,10)(50,10)(51,10)(52,10)" : anim on 1
8570 wait 70 : anim 1,"(51,4)(52,4)l" : anim on 1
8580 goto 8950 : rem ******************************
8590 for I=13 to 15 : sprite off I : next I : if X>160 then C=42 else C=43
8600 anim off 1 : sprite 1,X,Y,C
8610 move y 1,"(1,-2,10)(1,0,10)(1,2,10)(1,3,30)(1,4,40)" : if C=42 then move x 1,"(1,-2,70)" else move x 1,"(1,2,70)"
8620 move on 1 : while y sprite(1)<220 : wend : move off 1 : wait 10 : boom : boom 
8630 sprite 1,x sprite(1),210,44 : anim 1,"(45,30)(46,30)(47,30)"
8640 move y 1,"(2,-1,0)" : move on 1 : anim on 1
8650 goto 8950 : rem ******************************
8660 if CR<>0 and Y=Y1Z(Z)+15 then if Y2Z(Z)-Y1Z(Z)<=X2Z(Z)-X1Z(Z) then 5730
8670 anim off 1
8680 anim 1,"(33,1)(34,1)L" : timer=0 : anim on 1
8690 if timer<70 then shoot : goto 8690
8700 anim 1,"(35,1)(36,10)(37,8)(38,8)(39,8)(40,4)(41,8)" : move y 1,"(5,-1,0)" : anim on 1 : move on 1 : timer=0
8710 goto 8950
8720 rem ******* glisssssss
8730 if point(X-E,Y)>V then 5730
8740 if CR=0 then if point(X-E,Y-9)>V then 5730
8750 dec X : rem if NTS>4 then dec X
8760 if point(X,Y+1)<=V then X=(X/8)*8+4
8770 goto 5730
8780 if point(X+E,Y)>V then 5730
8790 if CR=0 then if point(X+E,Y-9)>V then 5730
8800 inc X : rem if NTS>4 then inc X
8810 if point(X,Y+1)<=V then X=(X/8)*8+3
8820 goto 5730
8830 if point(X-E,Y)>V then 5730
8840 if CR=0 then if point(X-E,Y-9)>V then 5730
8850 if YES=0 then dec X : YES=1 : if NTS<=4 then 8870 else dec X : goto 8870
8860 YES=0 : goto 5730
8870 if point(X,Y+1)<=V then if joy<>8 then X=(X/8)*8+4 else inc X
8880 goto 5730
8890 if point(X+E,Y)>V then 5730
8900 if CR=0 then if point(X+E,Y-9)>V then 5730
8910 if YES=0 then inc X : YES=1 : if NTS<=4 then 8930 else INX : goto 8930
8920 YES=0 : goto 5730
8930 if point(X,Y+1)<=V then if joy<>4 then X=3+(X/8)*8 else dec X
8940 goto 5730
8950 if NTS=1 then 8980
8960 for I=2 to NTS : move off I : if ST(I)=0 or ST(I)>=9 then anim I,"(125,7)(126,7)l"
8970 next I : anim on 
8980 TIM=10000 : while TIM>0 : dec TIM : if joy>=16 then TIM=0
8990 wend 
9000 auto back on : goto 10820
9010 rem ********* SAVE/LOAD
9020 cls back,0,0,184 to 304,200 : gosub 4830
9030 cls logic,0,0,184 to 304,200 : pen 15
9040 screen$(back,16,184)=IC$(16) : screen$(back,32,184)=IC$(17)
9050 screen copy back to logic
9060 set zone 2,16,184 to 32,199 : set zone 3,32,184 to 48,199
9065 locate 10,23 : print FILE$;
9070 while mouse key=0 : wend : while mouse key<>0 : wend 
9080 Z=zone(0) : if Z=0 then 9070
9090 if Z=1 then 1000
9100 if Z=2 then 9450
9110 FILE$=file select$("*.STL","Sauvegarde")
9120 if FILE$="" then 9070
9130 open out #1,"SAM"+FILE$+".STL"
9140 PSW$=str$(MOUSKY)+"/"+FILE$
9150 NV=-1 : print #1,PSW$;","; : OK=0 : LGEUR=len(PSW$)+1
9160 inc NV : if NV=2 then 9270 else L$=chr$(65+NV)
9170 print #1,L$;","; : LGEUR=LGEUR+3
9180 for Y=0 to 22 : for X=0 to 39
9190 if MP(NV,X,Y)<>0 then 9210 else if OK=0 then 9240
9200 gosub 9420 : OK=0 : goto 9240
9210 if OK=1 then 9220 else if LGEUR<470 then print #1,str$(X);",";str$(Y);","; else LGEUR=0 : print #1,str$(X);",";str$(Y)
9215 LGEUR=LGEUR+len(str$(X))+2+len(str$(Y)) : OK=1 : ID2=1 : IDEM=MP(NV,X,Y) : goto 9240
9220 if MP(NV,X,Y)=IDEM then inc ID2 : goto 9240
9230 gosub 9420 : ID2=1 : IDEM=MP(NV,X,Y)
9240 next X : next Y
9250 if OK=1 then gosub 9420 : OK=0
9260 goto 9160
9270 print #1,"C";",";str$(XD);",";str$(YD);",";str$(SP(1));",";str$(NTS) : LGEUR=0
9280 if NTS=1 then 9350
9290 for X=2 to NTS : print #1,str$(XM(X));",";str$(YM(X));",";str$(SP(X));",";str$(SS(X));",";str$(ST(X))
9295 if SS(X)>=20 then NBM=19 else NBM=0
9300 for I=0 to SS(X)-NBM : if LGEUR<470 then print #1,AN$(X,I);"/"; else LGEUR=0 : print #1,AN$(X,I);"/"
9305 LGEUR=LGEUR+len(AN$(X,I))+1 : next I
9310 for I=0 to SS(X)-NBM : if LGEUR<470 then print #1,MOV$(X,I);"/"; else LGEUR=0 : print #1,MOV$(X,I);"/"
9315 LGEUR=LGEUR+len(MOV$(X,I))+1 : next I
9320 for I=0 to 3 : if X=NTS and I=3 then print #1,DGEM$(X,I) : goto 9330
9322 if LGEUR<470 then print #1,DGEM$(X,I);"/"; else print #1,DGEM$(X,I);"/" : LGEUR=0
9325 LGEUR=LGEUR+len(DGEM$(X,I))+1
9330 next I : next X : LGEUR=0
9340 for I=0 to 7 : print #1,str$(SBLK(I,0));",";str$(SBLK(I,1));",";str$(SBLK(I,2));","; : LGEUR=LGEUR+len(str$(SBLK(I,0))+str$(SBLK(I,1))+str$(SBLK(I,2)))+3 : next I
9350 print #1,str$(NTZ);","; : LGEUR=LGEUR+len(str$(NTZ))+1 : if NTZ=0 then 9370
9355 ZNE(0)=val(FILE$) : T=rnd(300) : TT=rnd(180) : X1Z(0)=(T/8)*8 : X2Z(0)=(T/8)*8+32 : Y1Z(0)=(TT/8)*8 : Y2Z(0)=(TT/8)*8+8
9360 for X=0 to NTZ
9365 if LGEUR<470 then print #1,str$(ZNE(X));",";str$(X1Z(X));",";str$(Y1Z(X));",";str$(X2Z(X));",";str$(Y2Z(X));","; else print #1,str$(ZNE(X));",";str$(X1Z(X));",";str$(Y1Z(X));",";str$(X2Z(X));",";str$(Y2Z(X)) : LGEUR=0
9367 LGEUR=LGEUR+len(str$(ZNE(X))+str$(X1Z(X))+str$(Y1Z(X))+str$(X2Z(X))+str$(Y2Z(X)))+5 : next X
9370 if LGEUR<490 then print #1,str$(CZI);","; else LGEUR=0 : print #1,str$(CZI)
9372 LGEUR=LGEUR+len(str$(CZI))+1
9375 if CZI=-1 then 9390
9380 for I=0 to CZI : if LGEUR<480 then print #1,str$(NZID(I));",";str$(NZIO(I));",";str$(NZIF(I));","; else LGEUR=0 : print #1,str$(NZID(I));",";str$(NZIO(I));",";str$(NZIF(I))
9385 LGEUR=LGEUR+len(str$(NZID(I))+str$(NZIO(I))+str$(NZIF(I)))+3 : next I
9390 for X=0 to 80 : if ACT$(X)="" then 9397
9395 if LGEUR<400 then print #1,str$(X);",";ACT$(X);","; else print #1,str$(X);",";ACT$(X) : LGEUR=0
9396 LGEUR=LGEUR+len(str$(X)+ACT$(X))+2
9397 next X : print #1,"-1";",";
9400 for X=0 to 80 : if ZNE2(X)=0 then 9409
9408 if LGEUR<480 then print #1,str$(X);",";str$(ZNE2(X));","; else print #1,str$(X);",";str$(ZNE2(X)) : LGEUR=0
9409 LGEUR=LGEUR+len(str$(X)+str$(ZNE2(X)))+2 : next X : print #1,"-1"
9410 close #1 : bell : gosub 830 : goto 1000
9420 if ID2<>1 then 9430 else if LGEUR<470 then print #1,str$(IDEM*-1);","; else LGEUR=0 : print #1,str$(IDEM*-1)
9425 LGEUR=LGEUR+len(str$(IDEM*-1))+1 : goto 9440
9430 if LGEUR<470 then print #1,str$(IDEM*-1);"/";str$(ID2);","; else LGEUR=0 : print #1,str$(IDEM*-1);"/";str$(ID2)
9435 LGEUR=LGEUR+len(str$(IDEM*-1))+2+len(str$(ID2))
9440 return 
9450 rem *****LOADER*********
9460 FILE$=file select$("*.STL","         Chargez!") : if FILE$="" then 9070
9470 open in #1,FILE$
9480 if FILE$="" then 9070
9490 for I=0 to 3 : for J=0 to 22 : for K=0 to 39 : MP(I,K,J)=0 : next K : next J : next I : for I=1 to 110 : ZNE(I)=0 : next I
9500 NV=-1 : input #1,PSW$ : MOUSKY=val(PSW$)
9510 input #1,L$ : NV=0
9520 input #1,X$ : if asc(X$)>64 then inc NV : if NV<2 then 9520 else 9650
9530 input #1,Y$ : if asc(Y$)>64 then inc NV : if NV<2 then 9530 else 9650
9540 X=val(X$) : Y=val(Y$)
9550 input #1,X$
9560 if val(X$)<0 then MP(NV,X,Y)=val(X$)*-1 else 9610
9570 FOUY=instr(X$,"/") : if FOUY<>0 then ID2=val(mid$(X$,FOUY+1,6))-1 : IND=val(X$)*-1
9580 inc X : if X>39 then X=0 : inc Y : if Y=23 then Y=0 : goto 9640
9590 if ID2=0 then 9550
9600 dec ID2 : MP(NV,X,Y)=IND : goto 9580
9610 if asc(X$)<65 then input #1,Y$ : goto 9540
9620 inc NV : if NV>=2 then 9650 else input #1,X$ : if asc(X$)<65 then input #1,Y$ : goto 9540
9630 goto 9620
9640 input #1,X$ : inc NV : if NV<2 then 9520
9650 input #1,X$,Y$,Z$ : XD=val(X$) : YD=val(Y$) : SP(1)=val(Z$)
9660 input #1,Y$ : NTS=val(Y$) : if NTS=1 then 9730
9670 for X=2 to NTS : input #1,X$,Y$,Z$,ZE$,ZF$ : XM(X)=val(X$) : YM(X)=val(Y$) : SP(X)=val(Z$) : SS(X)=val(ZE$) : ST(X)=val(ZF$)
9675 NBM=0 : if SS(X)>=20 then NBM=19
9680 for I=0 to SS(X)-NBM : line input #1,47,AN$(X,I)
9682 if asc(mid$(AN$(X,I),1,1))=13 then AN$(X,I)=mid$(AN$(X,I),3,len(AN$(X,I))-2)
9685 next I
9690 for I=0 to SS(X)-NBM : line input #1,47,MOV$(X,I)
9692 if asc(mid$(MOV$(X,I),1,1))=13 then MOV$(X,I)=mid$(MOV$(X,I),3,len(MOV$(X,I))-2)
9695 next I
9700 line input #1,47,DGEM$(X,0) : line input #1,47,DGEM$(X,1) : line input #1,47,DGEM$(X,2) : if X<>NTS then line input #1,47,DGEM$(X,3) else line input #1,DGEM$(X,3)
9710 next X
9720 for I=0 to 7 : input #1,X$,Y$,Z$ : SBLK(I,0)=val(X$) : SBLK(I,1)=val(Y$) : SBLK(I,2)=val(Z$) : next I
9730 input #1,X$ : NTZ=val(X$) : if NTZ=0 then 9750
9740 for X=0 to NTZ : input #1,X$,Y$,Z$,A$,B$ : ZNE(X)=val(X$) : X1Z(X)=val(Y$) : Y1Z(X)=val(Z$) : X2Z(X)=val(A$) : Y2Z(X)=val(B$) : next X
9750 input #1,X$ : CZI=val(X$) : if CZI=-1 then 9770
9760 for X=0 to CZI : input #1,X$,Y$,Z$ : NZID(X)=val(X$) : NZIO(X)=val(Y$) : NZIF(X)=val(Z$) : next X
9770 input #1,X$ : X=val(X$) : if X=-1 then 9780
9775 input #1,ACT$(X)
9777 goto 9770
9780 input #1,X$ : X=val(X$) : if X=-1 then 9790
9785 input #1,X$ : ZNE2(X)=val(X$)
9787 goto 9780
9790 close #1 : bell 
9800 gosub 830 : goto 1000
9810 rem ****** evenements
9820 if movon(15)=0 then BAL=0 else if movon(14)=0 then BAL=1 else if movon(13)=0 then BAL=2
9830 if BAL=-1 then 5500
9850 FLP2=FLP(I) : if FLP2<0 then D$=mid$(MOV$(I,abs(FLP2)-1),6,1) else D$=mid$(MOV$(I,FLP2),6,1)
9860 if FLP2<0 then if D$="-" then D$=" " else D$="-"
9870 if X>x sprite(I) and D$=" " then SPF=28 : goto 9900
9880 if X<x sprite(I) and D$="-" then SPF=29 : goto 9900
9890 goto 5500
9900 move freeze I : anim freeze I : AL(I)=20
9910 SPF=SPF+rnd(1)*2 : if SPF=30 or SPF=31 then SPF2=-4 else SPF2=0
9920 sprite I,x sprite(I),y sprite(I),SPF
9930 if SPF=28 or SPF=30 then SPF=4 else SPF=-4
9940 sprite 15-BAL,x sprite(I)+SPF,y sprite(I)-10-SPF2,32
9950 if SPF=-4 then move x 15-BAL,"(1,-4,40)" else move x 15-BAL,"(1,4,40)"
9960 move on 15-BAL : shoot 
9970 FLP2=0
9980 BAL=-1
9990 goto 5660
10000 rem *** subs apparition/disparition ***
10010 rem *** rayons   ***
10020 if X2Z(I)-X1Z(I)>=Y2Z(I)-Y1Z(I) then 10040
10030 ink IK : draw X1Z(I)+4,Y1Z(I)+3 to X1Z(I)+4,Y2Z(I)-4 : goto 10050
10040 ink IK : draw X1Z(I)+3,Y1Z(I)+4 to X2Z(I)-4,Y1Z(I)+4
10050 if IK=1 then reset zone I else set zone I,X1Z(I),Y1Z(I) to X2Z(I),Y2Z(I)
10060 return 
10070 rem *** briques  ***
10080 REP=val(AC3$) : gosub 10320
10090 TAY=val(AC3$) : gosub 10320
10100 XDEST=val(AC3$) : gosub 10320
10110 YDEST=val(AC3$) : gosub 10320
10120 XPIC=val(AC3$) : gosub 10320
10130 YPIC=val(AC3$) : gosub 10320
10140 XPIC2=val(AC3$) : gosub 10320
10150 YPIC2=val(AC3$) : gosub 10320
10160 if IK=8 then set zone I,X1Z(I),Y1Z(I) to X2Z(I),Y2Z(I) : goto 10180
10170 reset zone I : XPIC=XPIC2 : YPIC=YPIC2
10180 if TAY=1 or TAY=3 then SBNK=71 else SBNK=1
10190 if TAY=3 then TAY=2
10200 get sprite XPIC,YPIC,SBNK : wait vbl 
10210 if abs(REP)=1 then sprite 9,XDEST,YDEST,SBNK : wait vbl : put sprite 9 : wait vbl : goto 10290
10220 if REP<0 then REP=abs(REP) : goto 10260
10230 if TAY=1 and REP>4 then REP=4 else if TAY=2 then REP=REP/2 : if REP>4 then REP=4
10240 for I=0 to REP-1 : sprite 9+I,XDEST+I*8*TAY,YDEST,SBNK : next I : wait vbl 
10250 goto 10280
10260 if TAY=1 and REP>4 then REP=4 else if TAY=2 then REP=REP/2 : if REP>4 then REP=4
10270 for I=0 to REP-1 : sprite 9+I,XDEST,YDEST+I*8*TAY,SBNK : next I : wait vbl 
10280 for I=0 to REP-1 : put sprite 9+I : next I : wait vbl 
10290 for I=0 to REP-1 : sprite off 9+I : next I : wait vbl 
10300 return 
10320 FOUY=instr(AC3$,"/") : AC3$=mid$(AC3$,FOUY+1,len(AC3$)-FOUY) : return 
10330 J=joy : if BOUT>0 then if J=2 then J=9 else if J=10 then J=1 else if J=8 then J=5 else if J=9 then J=4 else if J=1 then J=6 else if J=5 then J=2 else if J=4 then J=10 else if J=6 then J=8
10335 if J<16 then FEU2=0 : FEU=0
10340 if BOUT=0 and J>=16 then J=J-16 : if FEU2=0 then FEU=1
10350 return 
10360 rem ****** POING ******
10370 TIM=200 : COUP=0 : if C<=5 then anim 1,"(101,9)(102,12)" else anim 1,"(105,9)(106,12)" : COUP=3
10380 anim on : FEU2=1
10390 DB=2 : T=collide(1,TX+1,TY) : if T=0 then dec TIM : if TIM>0 then 10390 else anim off 1 : goto 5860
10400 for I=DB to 15 : if btst(I,T)=-1 then SP=I : I=16
10410 next I : I=0 : if ST(SP)>=9 then DB=SP+1 : SP=0 : goto 10400
10420 if ST(SP)<>0 then 10530
10430 if Y>y sprite(SP)+2 or Y<y sprite(SP)-2 then 10530
10440 if C<=5 and x sprite(SP)<X then 10530 else if C>=11 and x sprite(SP)>X then 10530
10450 anim freeze SP : move freeze SP : if C<=5 then anim 1,"(103,8)(104,18)(103,8)" else anim 1,"(107,8)(108,18)(107,8)"
10460 sprite SP,x sprite(SP),y sprite(SP),109+COUP : shoot : while TIM>0 : dec TIM : wend : anim on 1 : sprite SP,x sprite(SP),y sprite(SP),110+COUP
10470 TIM=200 : CFLIC=110+COUP
10480 while TIM>0 : dec TIM : if TIM=100 then CFLIC=111+COUP : shoot 
10490 sprite SP,x sprite(SP),y sprite(SP),CFLIC
10500 wend : anim SP,"(115,12)(116,12)L" : anim on : ST(SP)=200/NTS : if FLP(SP)>=0 then RTRP$(SP)=AN$(SP,FLP(SP)) : goto 10530
10510 if AN$(SP,abs(FLP(SP))-1)=SPR$(0,4) then RTRP$(SP)=SPR$(0,4) : goto 10530
10520 if AN$(SP,abs(FLP(SP))-1)=SPR$(0,2) then RTRP$(SP)=SPR$(0,3) else RTRP$(SP)=SPR$(0,2)
10530 TIM=0 : anim off 1 : goto 5770
10540 rem *********************************************
10542 W=ZNE(Z)-30
10545 if ZNE2(W)=2 and NKEY>0 then dec NKEY : ZNE2(W)=4 : goto 10660
10546 if ZNE2(W)=3 and OKEY>0 then dec OKEY : ZNE2(W)=5 : goto 10660
10547 if ZNE2(W)>1 then 5730
10550 if X2Z(Z)-X1Z(Z)=16 and (X1Z(Z)/16)*16<>X1Z(Z) then CAL=8
10560 if X2Z(Z)-X1Z(Z)=24 then CAL=8
10570 if C<=10 and X+2>X1Z(Z)+CAL then 5730
10580 if C>10 and X-8<X1Z(Z)+CAL then 5730
10590 if ZNE2(W)=1 then ZNE2(W)=0 else ZNE2(W)=1
10600 if C<=5 then sprite 1,X,Y,90 else if C>=11 and C<=14 then sprite 1,X,Y,91
10610 BR=MP(1,(X1Z(Z)+CAL)/8,Y1Z(Z)/8)
10620 if MP(0,(X1Z(Z)+CAL)/8,Y1Z(Z)/8)<>0 then screen$(back,X1Z(Z)+CAL,Y1Z(Z))=BLK$(MP(0,(X1Z(Z)+CAL)/8,Y1Z(Z)/8))
10630 screen$(back,X1Z(Z)+CAL,Y1Z(Z))=BLK$(BR+ZNE2(W)) : goto 10660
10640 W=ZNE(PSTZ)-30 : PSTZ=0 : goto 10660
10645 rem ------- modif aire de jeu ----------
10650 if ZNE(Z)>=60 and ZNE(Z)<=79 then W=ZNE(Z)-30 : PSTZ=Z : BR=0
10660 AC3$=ACT$(W)
10670 I=val(AC3$) : gosub 10320 : if I=0 then 10750
10680 ZBNE=val(AC3$) : gosub 10320 : if ZBNE<>0 then 10700 else if AL(I)=0 then AL(I)=1 else AL(I)=0 : move on I : anim on I
10690 goto 10670
10700 ZBNE2=val(AC3$) : gosub 10320
10710 if ZNE(I)=ZBNE then ZNE(I)=ZBNE2 else ZNE(I)=ZBNE
10720 if ZNE(I)=ZBNE then IK=8 else IK=1
10730 on ZBNE gosub 10070,10010,10070,10070
10740 goto 10670
10750 if INIT=1 then INIT=0 : return 
10760 if PSTZ<>0 then 10800
10770 FEU2=1 : if BR<MANETS or ZNE2(W)>1 then 10800 else ZNE2(W)=0
10780 if MP(0,(X1Z(Z)+CAL)/8,Y1Z(Z)/8)<>0 then screen$(back,X1Z(Z)+CAL,Y1Z(Z))=BLK$(MP(0,X1Z(Z)/8,Y1Z(Z)/8))
10790 screen$(back,X1Z(Z)+CAL,Y1Z(Z))=BLK$(BR)
10800 CAL=0 : goto 5730
10810 rem ******************NETTOYAGE*************************************
10820 pop 
10825 fade 1 : sprite off : reset zone : BTIM=0 : for I=2 to NTS : if ST(I)>=9 then ST(I)=0
10830 next I
10835 NKEY=0 : OKEY=0 : BOUT=0 : SC=0 : FEU=0 : FEU2=0 : PSTZ=0
10840 for I=0 to 8 : AL2(I)=0 : AL(I)=0 : next I
10845 for II=50 to 80 : AC3$=ACT$(II) : if AC3$="" then 10890
10850 I=val(AC3$) : gosub 10320 : if I=0 then 10890 else ZBNE=val(AC3$) : gosub 10320 : if ZBNE=0 then 10850
10860 ZBNE2=val(AC3$) : gosub 10320 : ZNE(I)=ZBNE2
10870 IK=1 : if ZBNE=2 then gosub 10010 else gosub 10070
10880 goto 10850
10890 next II : Z=0
10900 inc Z : if Z>NTZ then Z=0 : goto 10990
10910 if ZNE(Z)<40 or ZNE(Z)>59 then 10900
10915 if ZNE2(ZNE(Z)-30)=4 then ZNE2(ZNE(Z)-30)=2 : goto 10900
10916 if ZNE2(ZNE(Z)-30)=5 then ZNE2(ZNE(Z)-30)=3 : goto 10900
10918 if ZNE2(ZNE(Z)-30)<>1 then goto 10900
10920 ZNE2(ZNE(Z)-30)=0 : CAL=0
10930 if X2Z(Z)-X1Z(Z)=16 and (X1Z(Z)/16)*16<>X1Z(Z) then CAL=8
10940 if X2Z(Z)-X1Z(Z)=24 then CAL=8
10950 BR=MP(1,(X1Z(Z)+CAL)/8,Y1Z(Z)/8)
10960 if MP(0,(X1Z(Z)+CAL)/8,Y1Z(Z)/8)<>0 then screen$(back,X1Z(Z)+CAL,Y1Z(Z))=BLK$(MP(0,(X1Z(Z)+CAL)/8,Y1Z(Z)/8))
10970 screen$(back,X1Z(Z)+CAL,Y1Z(Z))=BLK$(BR)
10980 goto 10900
10990 for II=0 to 9 : AC3$=ACT$(II) : if AC3$="" then II=20 : goto 11030
11000 I=val(AC3$) : gosub 10320 : if I=0 then 11030
11010 IK=1 : if ZNE2(ZNE(I)-30)=2 then gosub 10010 else gosub 10070
11020 goto 11000
11030 next II : II=0
11040 show : goto 1000
11050 rem ********** you're a winner *********
11060 anim off : move off : anim 1,"(127,4)(128,5)l"
11070 TIM=4000 : anim on : while TIM>0 : dec TIM : if joy>=16 then TIM=0
11080 wend : anim off : sprite 1,X,Y,20 : wait 2
11090 goto 10820
12000 reset zone Z : screen$(back,X1Z(Z),Y1Z(Z))=BLK$(MP(0,X1Z(Z)/8,Y1Z(Z)/8))
12001 if Y<>Y1Z(Z)+7 then screen$(logic,X1Z(Z),Y1Z(Z))=BLK$(MP(0,X1Z(Z)/8,Y1Z(Z)/8))
12005 on ZNE(Z)-19 goto 12040,12030,12007,12010,12045,12020
12007 BOUT=50 : goto 5730
12010 SC=SC+500 : goto 12050
12020 SC=SC+100 : goto 12050
12030 inc OKEY : bell : goto 5730
12040 inc NKEY : bell : goto 5730
12045 MOUSKY=10 : bell : goto 5730
12050 locate 0,23 : print using "#######";SC : goto 5730
19999 rem exit to STOS or gem
20000 default : key speed 6,6
20010 if errl<>0 then print "code erreur : ";errl : wait key
20020 erase 2 : end